{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Desenvolupament Web en Entorn Servidor","text":"<p>Ac\u00ed trobar\u00e0s els apunts del m\u00f2dul de Desenvolupament web en entorn servidor, que s'imparteix en el segon curs del cicle formatiu de grau superior Desenvolupament d'Aplicacions Web.</p> <p>La duraci\u00f3 del m\u00f2dul \u00e9s de 160 hores lectives, distribuides en 8 hores setmanals.</p>"},{"location":"#objectius","title":"Objectius","text":"<ul> <li>Instal\u00b7lar m\u00f2duls analitzant la seua estructura i funcionalitat per gestionar servidors en diferents \u00e0mbits d'implantaci\u00f3.</li> <li>Ajustar par\u00e0metres analitzant la configuraci\u00f3 per gestionar servidors en diferents \u00e0mbits d'implantaci\u00f3.</li> <li>Seleccionar llenguatges, objectes i eines, interpretant les especificacions per desenvolupar aplicacions web amb acc\u00e9s a bases de dades.</li> <li>Utilitzar llenguatges, objectes i eines, interpretant les especificacions per desenvolupar aplicacions web amb acc\u00e9s a bases de dades.</li> <li>Generar components d'acc\u00e9s a dades, complint les especificacions, per integrar continguts en la l\u00f2gica d'una aplicaci\u00f3 web.</li> <li>Utilitzar eines i llenguatges espec\u00edfics, complint les especificacions, per desenvolupar i integrar components de programari en l'entorn del servidor web.</li> <li>Emprar eines espec\u00edfiques, integrant la funcionalitat entre aplicacions, per desenvolupar serveis utilitzables en aplicacions web.</li> <li>Avaluar serveis distribu\u00efts ja desenvolupats, verificant les seues prestacions i funcionalitat, per integrar serveis distribu\u00efts en una aplicaci\u00f3 web.</li> <li>Verificar els components de programari desenvolupats, analitzant les especificacions, per completar el pla de proves.</li> <li>Programar i realitzar activitats per gestionar el manteniment dels recursos inform\u00e0tics.</li> <li>Desenvolupar la creativitat i l'esperit d'innovaci\u00f3 per respondre als reptes que es presenten en els processos i organitzaci\u00f3 de treball i de la vida personal.</li> <li>Prendre decisions de forma fonamentada analitzant les variables implicades, integrant coneixements de diferents \u00e0mbits i acceptant els riscos i la possibilitat d'error en les mateixes, per afrontar i resoldre diferents situacions, problemes o conting\u00e8ncies. </li> </ul>"},{"location":"#resultats-daprenentatge","title":"Resultats d'aprenentatge","text":"<p>Segons el Reial decret de t\u00edtol els resultats d'aprenentatge que l'alumne ha d'assolir s\u00f3n els seg\u00fcents:</p> <ol> <li>Selecciona les arquitectures i tecnologies de programaci\u00f3 Web en  entorn servidor, analitzant les seues capacitats i caracter\u00edstiques  pr\u00f2pies.</li> <li>Escriu sent\u00e8ncies executables per un servidor Web reconeixent i  aplicant procediments d'integraci\u00f3 del codi en llenguatges de  marques.</li> <li>Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques,  seleccionant i utilitzant les estructures de programaci\u00f3.</li> <li>Desenvolupa aplicacions Web embegudes en llenguatges de marques  analitzant i incorporant funcionalitats segons especificacions.</li> <li>Desenvolupa aplicacions Web identificant i aplicant mecanismes per a  separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci.</li> <li>Desenvolupa aplicacions d'acc\u00e9s a magatzems de dades, aplicant  mesures per a mantenir la seguretat i la integritat de la  informaci\u00f3.</li> <li>Desenvolupa serveis web reutilitzables i accessibles mitjan\u00e7ant protocols web, verificant el seu comportament.</li> <li>Genera p\u00e0gines web din\u00e0miques analitzant i utilitzant tecnologies i frameworks del servidor Web que afigen codi al llenguatge de marques.</li> <li>Desenvolupa aplicacions Web h\u00edbrides seleccionant i utilitzant  tecnologies, frameworks servidor i respositoris heterogenis d'informaci\u00f3.</li> </ol>"},{"location":"01-intro/01-intro/","title":"Introducci\u00f3 a la programaci\u00f3 web","text":"<p>Objectius</p> <ul> <li>Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies.</li> <li>Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor.</li> <li>Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web.</li> <li>Identificar les principals tecnologies associades.</li> <li>Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web.</li> <li>Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat.</li> </ul>"},{"location":"01-intro/01-intro/#arquitectura-duna-aplicacio-web","title":"Arquitectura d'una aplicaci\u00f3 web","text":"<p>A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor.</p> <p>La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant el protocol HTTP, base de la World Wide Web.</p>"},{"location":"01-intro/01-intro/#el-model-clientservidor","title":"El model client/servidor","text":"<p>El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc.</p> <p></p>  Arquitectura Client Servidor.  <p>En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari o la identificaci\u00f3 d'un arxiu de dades per transferir.</p> <p>Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada.</p>"},{"location":"01-intro/01-intro/#el-protocol-http","title":"El protocol HTTP","text":"<p>El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients HTTP (navegadors) i els servidors HTTP.</p> <p>HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc.</p> <p>HTTP \u00e9s un protocol sense estat, \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes (cookies), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat.</p> <p>Per a con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP  avaluarem en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions:</p> <ol> <li>Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un     enlla\u00e7 d'un document HTML o introduint-la directament a la barra de     navegaci\u00f3 d'un navegador web des de la perspectiva del client web.     El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les     diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s,     el node, expressat amb el nom de domini o la seua adre\u00e7a IP, el     possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte     del servidor requerit.</li> <li>S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP     corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre     necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit     (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del     protocol HTTP utilitzada (en la major part de les ocasions \u00e9s     HTTP/1.1) i un conjunt variable d'informaci\u00f3 que inclou dades sobre     les capacitats del navegador web, dades opcionals per al servidor,     etc.</li> <li>El servidor localitza el recurs sol\u00b7licitat i torna la resposta al     client.</li> <li>Aquesta resposta consisteix en un codi d'estat i el tipus de dada     amb extensions multiprop\u00f2sit de correu d'Internet (MIME,     Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada,     seguit de la mateixa informaci\u00f3.</li> <li>El client formata i mostra el recurs rebut.</li> <li>Es tanca la connexi\u00f3 TCP.</li> </ol> <p>Important</p> <p>Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges.</p> <p></p> Etapes d'una transacci\u00f3 HTTP <p>Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web.</p> <p></p> Etapes d'una sol\u00b7licitud HTTP amb processament per part del servidor"},{"location":"01-intro/01-intro/#format-de-les-url","title":"Format de les URL","text":"<p>La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components:</p> <pre><code>URI = scheme:[//authority]path[?query][#fragment]\n</code></pre> <p>on el component <code>authoriry</code> es deivideix en tres subcomponents:</p> <pre><code>authority = [userinfo@]host[:port]\n</code></pre> <p></p> Sintaxi de les URL"},{"location":"01-intro/01-intro/#servidors-web-i-servidors-daplicacions","title":"Servidors web i servidors d'aplicacions","text":"<p>Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions, respectivament.</p> <p>Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari).</p> <p>Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web.</p>"},{"location":"01-intro/01-intro/#exemples","title":"Exemples","text":""},{"location":"01-intro/01-intro/#apache","title":"Apache","text":"<p>Apache \u00e9s un dels servidors web m\u00e9s coneguts. \u00c9s programari lliure i multiplataforma, encara que aproximadament el 90% dels servidors Apache s'executen actualment en entorns Linux ja que \u00e9s el servidor preferit per a aquesta plataforma.</p> <p>\u00c9s molt modular el que permet incorporar caracter\u00edstiques un cop instal\u00b7lat i posat en marxa. Aix\u00f2 li fa tamb\u00e9 molt flexible i pot donar servei a webs escrites en els llenguatges de programaci\u00f3 web m\u00e9s estesos (com PHP, Python, ASP,...) A trav\u00e9s del m\u00f2dul corresponent.</p>"},{"location":"01-intro/01-intro/#nginx","title":"nginx","text":"<p>nginx (pronunciat en angl\u00e8s \"engine X\") \u00e9s un servidor web/proxy invers lleuger d'alt rendiment i un proxy per protocols de correu electr\u00f2nic ( IMAP / POP3).</p>"},{"location":"01-intro/01-intro/#php-fpm","title":"PHP-FPM","text":"<p>FastCGI Process Manager \u00e9s un servei que permet executar codi PHP separat del servidor HTTP de forma que millora la seua flexibilitat i el seu rendiment.</p>"},{"location":"01-intro/01-intro/#pagines-web-estatiques-i-dinamiques","title":"P\u00e0gines web est\u00e0tiques i din\u00e0miques","text":""},{"location":"01-intro/01-intro/#pagines-web-estatiques","title":"P\u00e0gines web est\u00e0tiques","text":"<p>Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles en que el seu contingut no varia, per la qual cosa mostraran sempre la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML, CSS i javascript.</p> <p>Les p\u00e0gines est\u00e0tiques nom\u00e9s canvien si el programador web les modifica.</p>"},{"location":"01-intro/01-intro/#pagines-web-dinamiques","title":"P\u00e0gines web din\u00e0miques","text":"<p>Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir de certa informaci\u00f3: base de dades, identificaci\u00f3 de l'usuari, hora del dia, etc.</p> <p>Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3.</p>"},{"location":"01-intro/01-intro/#execucio-de-codi-en-el-client-i-en-el-servidor","title":"Execuci\u00f3 de codi en el client i en el servidor","text":"<p>Pel que hem pogut veure fins ara en el desenvolupament d'una aplicaci\u00f3 web podem distingir entre una s\u00e8rie de tecnologies que s'executen en el navegador (client-side o front-end programming) i un s\u00e8rie de tecnologies que s'executen en el servidor (server-side o back-end programming)</p> <p>En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript).</p> <p></p>      Execuci\u00f3 de codi en el client i en el servidor"},{"location":"01-intro/01-intro/#model-de-desenvolupament-en-3-capes","title":"Model de desenvolupament en 3 capes","text":"<p>Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes. \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions.</p> <p>Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem observar el seg\u00fcent esquema on es mostra cadascuna d'aquestes capes f\u00eds\u00edques :</p> <p></p> Model de desenvolupament de 3 capes <p>Des d'un punt de vista l\u00f2gic les capes (layers) es divideixen les seg\u00fcents funcionalitats:</p> <ul> <li>Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a     l'usuari. B\u00e0sicament \u00e9s la GUI (Graphical User Interface,     interf\u00edcie gr\u00e0fica d'usuari). En el cas d'una aplicaci\u00f3 web seria     el codi HTML que es carrega directament al navegador web. En     qualsevol cas, s'executa directament en l'equip del client.</li> <li> <p>Capa d'aplicaci\u00f3: \u00c9s la capa interm\u00e8dia on es porta a terme tota     la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat     servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i/o     operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a     l'usuari en la capa seg\u00fcent.</p> <p>Sols estar desenvolupada usant PHP, Pyhton, Java, etc i es comunica amb la capa de dades mitjan\u00e7ant una API.</p> </li> <li> <p>Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament,     en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s     l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura     de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar     f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que     s'hagin de separar per q\u00fcestions de rendiment. La capa de dades     serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a     terme les seves operacions.</p> </li> </ul> <p>Si ens imaginem una botiga online, la capa de dades emmagatzemaria tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...). La capa d'aplicaci\u00f3 hauria d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple i finalment presentar el resultat a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3.</p> <p>I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent:</p> <p></p>      Modelo de desarrollo de 3 capas (desarrollo web con PHP)  <ul> <li>Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o     Google Chrome podrien ser qualsevol de les aplicacions que ocuparien     aquesta capa</li> <li>Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu     corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la     part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la     combinaci\u00f3 Apache Tomcat + Servlets</li> <li>MySQL / PostgreSQL / Node: Finalment a la capa de dades podem posar     qualsevol SGBD, com poden ser MySQL o PostgreSQL.</li> </ul> <p>L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges.</p>"},{"location":"01-intro/01-intro/#front-end-back-end-full-stack","title":"Front-end, back-end, Full stack","text":"<p>Tenint en compte en quin costat es situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes actualment es parla molt de 3 perfils  diferenciats en l'\u00e0mbit del desenvolupament web:</p> <ul> <li>Front-end: \u00c9s la part del desenvolupament que s'encarrega del     disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com     HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha     de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de     dispositiu i fins i tot del posicionament en cercadors</li> <li>Back-end: \u00c9s la part del desenvolupament que s'encarrega del     costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9     s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la     base de dades.</li> <li>Full stack: En un perfil que engloba els dos anteriors. En     aquest cas el desenvolupador potser no \u00e9s un expert de cap     tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i     \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts.</li> </ul> <p></p>      Fullstack"},{"location":"01-intro/01-intro/#tipologia-de-les-aplicacions-web","title":"Tipologia de les aplicacions web","text":"<p>Depenent de la forma en qu\u00e8 s'utilitzen les tecnologies podem classificar les aplicacions en:</p> <ul> <li>Tradicionals o cl\u00e0ssiques (Muli-Page Apps, MPAs), on pr\u00e0cticament tota la l\u00f2gica i la presentaci\u00f3 es genera en el costat de servidor.</li> <li>Progressives (Progressively Enhanced Multi-Page Apps, PEMPAs) , on una aplicaci\u00f3 tradicional incorpora tecnologies en el costat del client per a millorar l'experi\u00e8ncia de l'usuari.</li> <li>Single Page Applications (SPA). En el costat servidor es generen una s\u00e8rie de funcionalitats accessibles mitjan\u00e7ant una API (Application Programming Interface) i tota la c\u00e0rrega de la presentaci\u00f3 es realitza en el costat del client que s'encarrega, a m\u00e9s, a fer les sol\u00b7licituds a la API.</li> </ul> <p></p>  Arquitectura tradicional vs SPA"},{"location":"01-intro/01-intro/#llenguatges","title":"Llenguatges","text":""},{"location":"01-intro/01-intro/#php","title":"PHP","text":"<p>PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web.</p> <p>PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador.</p> <p>Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades.</p> <p></p> Arquitectura LAMP <p>El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert.</p> <p>A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina:</p>"},{"location":"01-intro/01-intro/#jsp-servlets","title":"JSP / Servlets","text":"<p>JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML.</p> <p>D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes.</p> <p>Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys.</p> <p></p>"},{"location":"01-intro/01-intro/#python","title":"Python","text":"<p>El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert.</p> <p></p> <p>Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web:</p> <pre><code>&lt;h1&gt;Mis pel\u00edculas&lt;/h1&gt; &lt;a href=\"#\"&gt;+&lt;/a&gt;\n{% if lista_peliculas %}\n  &lt;ul&gt;\n    {% for pelicula in lista_peliculas %}\n    &lt;li&gt;&lt;a href=\"{% url 'pelicula' pelicula.id %}\"&gt;{{ pelicula.titulo }}&lt;/a&gt;&lt;/li&gt;\n    {% endfor   %}\n    &lt;/ul&gt;\n    {% else %}\n    &lt;p&gt;No hay pel\u00edculas disponibles&lt;/p&gt;\n    {% endif %}\n</code></pre> <p>Separada del controlador:</p> <pre><code>    from django.shortcuts import render\n. . .\ndef index(request):\nlista_peliculas = Pelicula.objects.all()\ncontext = {'lista_peliculas': lista_peliculas}\nreturn render(request, 'mispeliculas/index.html', context)\n</code></pre>"},{"location":"01-intro/01-intro/#aspnet","title":"ASP.NET","text":"<p>ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques.</p> <p>Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#.</p> <p>El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server).</p> <p></p> <p>A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web):</p> <pre><code>protected void Button1_Click(object sender, EventArgs e)\n{\n    string buf = TextBox1.Text;\n    changed_text.InnerHtml = buf.ToUpper();\n}\n</code></pre> <pre><code>&lt;%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\"\n    Inherits=\"firstexample._Default\" %&gt;\n\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" &gt;\n&lt;head runat=\"server\"&gt;\n&lt;title&gt;\n            Untitled Page\n        &lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form id=\"form1\" runat=\"server\"&gt;\n&lt;div&gt;\n&lt;asp:TextBox ID=\"TextBox1\" runat=\"server\" style=\"width:224px\"&gt;\n&lt;/asp:TextBox&gt;\n&lt;asp:Button ID=\"Button1\" runat=\"server\" Text=\"Enter...\" \nstyle=\"width:85px\" onclick=\"Button1_Click\" /&gt;\n&lt;hr /&gt;\n&lt;h3&gt; Results: &lt;/h3&gt;\n&lt;span runat=\"server\" id=\"changed_text\" /&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"01-intro/01-intro/#bibliografia","title":"Bibliografia","text":"<ul> <li>Education, I., 2020. What is Three-Tier Architecture. [online] Ibm.com. Available at: https://www.ibm.com/cloud/learn/three-tier-architecture [Accessed 9 September 2022].</li> <li>MDN contributors, 2022. Introduction to the server side - Learn web development | MDN. [online] Developer.mozilla.org. Available at: https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Introduction [Accessed 9 September 2022].</li> <li>Dodds, K.C., 2023. The web\u2019s next transition [online] Epic Web Dev by Kent C. Dodds. Available at: https://www.epicweb.dev/the-webs-next-transition (Accessed: 07 September 2023). </li> </ul>"},{"location":"01-intro/02-developement/","title":"Preparant l'entorn de desenvolupament","text":"<p>Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc.</p> <p>Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl.</p>"},{"location":"01-intro/02-developement/#eines-de-desevolupament","title":"Eines de desevolupament","text":"<p>Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica.</p> <p>El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien.</p> <p>Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n:</p> <ul> <li>Eclipse</li> <li>Netbeans</li> <li>Atom</li> <li>Sublime</li> <li>PHPStorm</li> <li>Brackets</li> </ul> <p>Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP.</p> <p>Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm.</p> <p>Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem.</p>"},{"location":"01-intro/02-developement/#installacio-de-lentorn-de-desenvolupament-lamp","title":"Instal\u00b7laci\u00f3 de l'entorn de desenvolupament LAMP","text":"<ol> <li>Descarrega el paquet XAMPP que continga la versi\u00f3 de PHP en la que anem a treballar durant el curs per a la nostra m\u00e0quina     (https://www.apachefriends.org/).</li> <li>Dona-li permisos d'execuci\u00f3 al fitxer descarregat:     <code>sudo chmod +x xampp-linux-x64-X.X.X-X-installer.run</code></li> <li>Executem l'assistent d'instal\u00b7laci\u00f3     <code>sudo ./xampp-linux-x64-X.X.X.-X-installer.run</code></li> <li>En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte     (excepte la qual ens parla de bitnami que la desmarcarem).</li> <li>Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0     en el directori <code>/opt/lampp</code></li> <li>Ara ja pots arrancar els serveis amb la seg\u00fcent ordre:     <code>sudo /opt/lampp/lampp start</code></li> <li>Quan els arranques, si obris el navegador i ens anem a la url     http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de     XAMPP.</li> <li>Per a parar els serveis podem fer a\u00e7\u00f2:     <code>sudo /opt/lampp/xampp stop</code></li> <li>En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de     control de XAMPP que podrem executar amb la seg\u00fcent ordre:     <code>sudo /opt/lampp/manager-linux-x64.run</code></li> <li>Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els     serveis de XAMPP.</li> </ol> Panell de control de XAMPP"},{"location":"01-intro/02-developement/#installar-phpstorm","title":"Instal\u00b7lar PHPStorm","text":"<p>Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos:</p> <ol> <li>Executarem     <code>sudo snap install phpstorm --classic</code></li> <li>Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior,     al que contestarem, \u00f2bviament, que no.</li> <li>Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa.</li> <li>En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades     de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7     que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens     redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una     vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre     compte o amb el codi d'activaci\u00f3 que ens proporcionen.</li> <li>Finalment, indicarem la configuraci\u00f3 inicial.</li> </ol>"},{"location":"01-intro/02-developement/#creacio-de-projectes-i-comprovacio-de-la-installacio-de-php","title":"Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP","text":"<p>Seguirem els passos que s'indiquen a continuaci\u00f3:</p> <ol> <li>Arrancar XAMPP</li> <li>Iniciar el m\u00f2dul Apache</li> <li>Executar PHPStorm</li> <li>Crear un projecte buit amb <code>Create New &gt; Project PHP Empty Project</code></li> <li> <p>Posar al projecte el nom <code>practica1</code> i situar-lo en el directori     <code>/opt/lampp/htdocs</code> . Amb a\u00e7\u00f2 es crea un directori de nom <code>practica1</code> dintre de <code>/opt/lampp/htdocs</code>.</p> <p></p> </li> <li> <p>En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant <code>New &gt; PHP File</code> . Li posem de nom <code>index.php</code> .</p> </li> <li> <p>En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi:</p> </li> </ol> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Desenvolupament web en entorn servidor&lt;/title&gt;\n&lt;meta name=\"description\" content=\"PHP, PHPStorm\"&gt;\n&lt;meta name=\"author\" content=\"Homer Simpson\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\nphpinfo();\n?&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li> <p>Canviem l'autor del document al nostre nom.</p> </li> <li> <p>Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1</p> </li> <li> <p>Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge:     </p> </li> </ol>"},{"location":"01-intro/02-developement/#integrant-lexecutable-de-php","title":"Integrant l'executable de PHP","text":"<p>PHPStorm disposa d'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l'executable de PHP de XAMPP en el nostre PHPStorm.</p> <p>Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos:</p> <ol> <li>En la pantalla d'inici anem a <code>Configure \u2013 Settings</code>.</li> <li>En la llista de categories de l'esquerra anem a     <code>Language &amp; Frameworks - PHP</code>.</li> <li>Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista     est\u00e0 buida anem a configurar un de la seg\u00fcent forma:<ol> <li>Fem clic en el bot\u00f3 <code>...</code> de la llista d'int\u00e8rprets</li> <li>Premem el bot\u00f3 + de la cantonada superior esquerra per a     afegir-ne un.</li> <li>Li posem el nom PHP de XAMPP.</li> <li>Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: <code>/opt/lampp/bin/php</code></li> <li>Immediatament ens indicar\u00e0 la versi\u00f3 de l'int\u00e8rpret que tenim     instal\u00b7lat</li> <li>Premem OK i seleccionem el nou interprete en la llista     d'int\u00e8rprets.</li> <li>Finalment, seleccionem en l'opci\u00f3 PHP language level aquell     que es corresponga amb l'int\u00e8rpret que acabem de configurar.</li> <li>Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la     versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les     ajudes.</li> <li>Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb     PHPStorm anem a crear el nostre primer projecte PHP buit.     Tingueu en compte que el projecte heu de crear-ho en el     directori <code>/opt/lampp/htdocs</code> i que necessitem tenir permisos     d'escriptura en aquest directori.</li> </ol> </li> </ol> <p>Compte! Pot ser que ho h\u00e0gem instal\u00b7lat com <code>root</code>, mentre que quan executem PHPStorm ho fem amb l'usuari <code>dwes</code>, per tant, l'usuari <code>dwes</code> necessita poder escriure en aquest directori.</p> <p>Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori <code>/opt/lampp</code> i executarem la seg\u00fcent ordre:</p> <pre><code>ls \u2013la htdocs\n</code></pre> <p>Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9.</p> <p>En el cas que el propietari siga root executarem la seguent ordre:</p> <pre><code>sudo chown -hR dwes htdocs/\n</code></pre> <p>A\u00e7\u00f2 canviar\u00e0 el propietari a l'usuari <code>dwes</code>, amb el que tindrem perm\u00eds d'escriptura en aquest directori des de PHPStorm.</p> <p>Treballarem tenint els projectes en la mateixa carpeta.</p>"},{"location":"01-intro/02-developement/#eines-per-a-la-depuracio-de-codi","title":"Eines per a la depuraci\u00f3 de codi","text":"<p>En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi.</p> <p>Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes   com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com  XDebug o DBG.</p>"},{"location":"01-intro/02-developement/#installacio-dxdebug-30","title":"Instal\u00b7laci\u00f3 d'XDEBUG 3.0","text":"<p>XDebug 3.0</p> <p>Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu.</p> <p>A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos:</p> <ol> <li> <p>Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost.</p> </li> <li> <p>A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu <code>phpinfo</code>. Feu clic en aquest enlla\u00e7.</p> </li> <li> <p>Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar.</p> </li> <li> <p>Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php.</p> </li> <li> <p>En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem <code>Analyse mi phpinfo() output</code>.</p> </li> <li> <p>Ens apareixeran un resultats semblants a aquests:</p> </li> </ol> <p></p> <p>Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada.</p> <p>Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en <code>/opt/lampp/etc/php.ini</code> i les extensions les tenim en <code>/opt/lampp/lib/php/extensions/no-debug-non-zts-20180731</code></p> <p>\u00c9s important que recordem aquestes dades.</p> <p>Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions:</p> <p>Important</p> <p>Els car\u00e0cters <code>#</code> representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho.</p> <ol> <li>Descarregueu la darrera versi\u00f3 d'Xdebug</li> <li>Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions     PHP.\\     Instal\u00b7leu-lo amb el sistema Ubuntu amb:     <code>apt-get install php-dev autoconf automake</code></li> <li>Desempaqueteu el fitxer descarregat amb <code>tar -xvzf xdebug-#.#.#.tgz</code></li> <li>Executar: <code>cd xdebug-#.#.#</code></li> <li> <p>Executar: <code>/opt/lampp/bin/phpize</code> (hem canviat la ruta perqu\u00e8     execute el phpize de XAMPP).</p> <p>Com a part de la seva eixida hauria de mostrar:</p> <pre><code>Configuring for:\n...\nZend Module Api No: ########\nZend Extension Api No: #########\n</code></pre> <p>Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent.</p> </li> <li> <p>Executar: <code>./configure --with-php-config=/opt/lampp/bin/php-config</code>     (hem afegit la ruta del php-config de XAMPP).</p> </li> <li>Compilem les fonts: <code>make</code></li> <li>Executar:     <code>sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-########</code></li> <li> <p>Edita <code>/opt/lampp/etc/php.ini</code> i afegeix les seg\u00fcents l\u00ednies al     final</p> <pre><code>[xdebug]\nzend_extension=xdebug\n</code></pre> </li> <li> <p>Reinicieu el servidor web</p> </li> </ol> <p>Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat.</p> <p></p> <p>Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome.</p>"},{"location":"01-intro/99-tasks/","title":"Activitats","text":""},{"location":"01-intro/99-tasks/#aplicacions-web","title":"Aplicacions Web","text":"<ol> <li> <p>Inspeccionant sol\u00b7licituds des del terminal</p> <p><code>curl</code> \u00e9s un programari realitzar sol\u00b7licituds HTTP, \u00e9s a dir, un client HTTP, des de la l\u00ednia de comandaments. Permet l'automatitzaci\u00f3 de les sol\u00b7licituds.</p> <p>Usa <code>curl</code> per a accedir a les seg\u00fcents URL i registra en un documents les respostes incloent el codi d'estat i el tipus MIME:</p> <ul> <li>http://www.google.com</li> <li>https://google.com</li> <li>https://www.google.com</li> <li>https://www.google.com/x</li> </ul> <p>L'ordre concreta \u00e9s:</p> <pre><code>curl -sSL -D - URL -o /dev/null\n</code></pre> </li> <li> <p>Inspeccionats sol\u00b7licituds HTTP des del navegador</p> <p>Des de l'opci\u00f3 <code>Eines per a desenvolupadors</code> de Firefox \u00e9s possible accedir a la pestanya <code>Xarxa</code> per poder comprova totes les sol\u00b7licituds que ha generat la URL a la que hem accedit.</p> <p>Activa l'opci\u00f3 anterior i accedeix a Google. Fes una captura de les sol\u00b7licituds que inclouen JS, CSS i Imatges.</p> </li> <li> <p>Busca tres ofertes de treball de desenvolupament de software a Infojobs en la prov\u00edncia d'Alacant que citen PHP i anota:</p> <p>Empresa + lloc de treball + frameworks PHP + requisits + salari + enll\u00e7 a l'oferta.</p> </li> </ol>"},{"location":"01-intro/99-tasks/#entorn-de-desenvolupament","title":"Entorn de desenvolupament","text":"<ol> <li> <p>Instal\u00b7laci\u00f3 de l'entorn de desenvolupament LAMP</p> <p>Seguint les instruccions dels apunts instal\u00b7la l'entorn de desevolupament</p> </li> <li> <p>Instal\u00b7laci\u00f3 de PHPStorm</p> <p>Seguint les instruccions dels apunts instal\u00b7la i configura PHP Storm.</p> </li> <li> <p>Prova d'Apache i PHP</p> <p>L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP.</p> <p>Seguint les instruccions dels apunts crea projecte i prova'l.</p> </li> <li> <p>Instal\u00b7laci\u00f2 d'XDebug</p> <p>Seguint les instruccions dels apunts instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm. </p> </li> <li> <p>Creaci\u00f3 d'un virtualhost</p> <p>Crea un nou host virtual que responga a la url: <code>bloc-i.local</code> i el document arrel (document root) siga el directori <code>/home/USUARI/projectes/bloc-i</code>.</p> <p>Crea en el document root un fitxer <code>index.php</code> que contiga</p> <p><pre><code>&lt;?php echo \"Hola mon!\" ?&gt;\n</code></pre> Comprova que funciona accediant a <code>http://bloc-i.local</code>.</p> </li> </ol>"},{"location":"02-basics/02-phpbasics/","title":"El llenguatge PHP","text":"<p>Objectius</p> <ul> <li>Con\u00e8ixer la sintaxi b\u00e0sica de PHP i les noves caracter\u00edstiques de PHP 8.</li> <li>Entendre com s'integren PHP i HTML.</li> <li>Descriure els tipus de dades existents en PHP.</li> <li>Fer servir les estructures de control b\u00e0siques.</li> <li>Aprendre a utilitzar els arrays associatius.</li> <li>Con\u00e8ixer els mecanismes de pas de par\u00e0metres a un script.</li> <li>Processar i validar formularis</li> <li>Incloure fitxers</li> </ul>"},{"location":"02-basics/02-phpbasics/#introduccio","title":"Introducci\u00f3","text":"<ul> <li>Acr\u00f2nim de Personal Home Page</li> <li>Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web.</li> <li>Sintaxi similar a C/Java</li> <li>El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php)</li> <li>El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor.</li> <li>El codi s'emmagatzema en arxiu amb extensi\u00f3 <code>.php.</code></li> </ul> <p>L'\u00faltima versi\u00f3 \u00e9s la 8.1, de novembre de 2021 (i en breu tindrem la versi\u00f3 8.2). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. </p> <p>PHP 8.1</p> <p>Nosaltres farem \u00fas de la versi\u00f3 8.1 de PHP</p> <p>La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/. </p>"},{"location":"02-basics/02-phpbasics/#funcionament-i-estructura-basica","title":"Funcionament i estructura b\u00e0sica","text":""},{"location":"02-basics/02-phpbasics/#el-nostre-primer-codi-php","title":"El nostre primer codi PHP","text":"<ul> <li>El codi PHP sempre va entre els simbolos <code>&lt;?php</code> i <code>?&gt;</code>.</li> <li>Les instruccions PHP acaben sempre amb <code>;</code>.</li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;PHP f\u00e0cil&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!-- Mostra una frase en HTML --&gt;\n    Hola m\u00f3n!&lt;br&gt;\n&lt;!-- Mostra una frase en PHP --&gt;\n&lt;?php echo \"\u00c9s molt f\u00e0cil programar en PHP.\"; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>Per a generar codi HTML des de PHP podem utilitzar diversos m\u00e8todes:  <ul> <li><code>echo expressi\u00f3</code> </li> <li><code>print (expressi\u00f3)</code></li> <li><code>&lt;?= expressi\u00f3 ?&gt;</code></li> </ul> </li> <li>El codi pot anar entre les etiquetes d'HTML.</li> </ul> <pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;&lt;?php echo \"Hola m\u00f3n\" ?&gt;&lt;/h1&gt;\n&lt;body&gt;\n</code></pre> <pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;&lt;?= \"Hola m\u00f3n\" ?&gt;&lt;/h1&gt;\n&lt;body&gt;\n</code></pre>"},{"location":"02-basics/02-phpbasics/#comentaris","title":"Comentaris","text":"<ul> <li>De bloc entre <code>/*</code> i <code>*/</code>.</li> <li>De linea, comen\u00e7ant per <code>//</code> o per <code>#</code>.</li> </ul>"},{"location":"02-basics/02-phpbasics/#variables-i-tipus-de-dades","title":"Variables i tipus de dades","text":"<p>Una de les caracter\u00edstiques de PHP \u00e9s que \u00e9s un llenguatge no fortament tipat (com Javascript).  De fet, no cal declarar la variable ni indicar el tipus de dades si la declare.  Encara que si volem codi de qualitat ho hauriem de fer.</p>"},{"location":"02-basics/02-phpbasics/#declaracio","title":"Declaraci\u00f3","text":"<ul> <li>Els noms de les variables sempre comencen per <code>$</code> </li> <li>Despr\u00e9s del <code>$</code> els noms de les variables han d'anar seguits per una lletra o el car\u00e0cter <code>_</code> i poden contenir tamb\u00e9 n\u00fameros. </li> <li>No \u00e9s necessari declarar una variable ni especificar-li un tipus (enter, cadena,...) concret.</li> <li>Les variables s\u00f3n case sensitive: <code>$var != $vAR</code>.</li> </ul> <p>Per crear una variable que continga el text a generar i mostrar-la:</p> <pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;\n&lt;?php \n$salutacio = \"Hola m\u00f3n\";\necho $salutacio; \n?&gt;\n&lt;/h1&gt;\n&lt;body&gt;\n</code></pre>"},{"location":"02-basics/02-phpbasics/#tipus-de-les-variables","title":"Tipus de les variables","text":"<ul> <li>El tipus de la variable es decideix en funci\u00f3 del context en qu\u00e8 s'utilitze.</li> <li>En assignar-li el valor 7, la variable \u00e9s de tipus \u201csencer\u201d </li> </ul> <pre><code>$la_meua_variable = 7;  // ara \u00e9s un n\u00famero\n$la_meua_variable = \"set\"; // ara \u00e9s cadena\n</code></pre> <p>Si li canviem el contingut passa a ser de tipus \u201ccadena\u201d</p> <p>Variable no inicialitzades</p> <p>Si s'intenta utilitzar una variable abans d'assignar-li un valor, es genera un error de tipus E_NOTICE per\u00f2 no s'interromp l'execuci\u00f3 de l'script. L'eixida mostrar\u00e0 un av\u00eds cada volta que s'intente.</p>"},{"location":"02-basics/02-phpbasics/#tipus-de-dades-en-php","title":"Tipus de dades en PHP","text":"<ul> <li>boole\u00e0 (boolean). Els seus possibles valors s\u00f3n <code>true</code> i <code>false</code>. A m\u00e9s, qualsevol nombre enter es considera com <code>true</code>, excepte el 0 que \u00e9s <code>false</code>.</li> <li>enters (integer). Qualsevol nombre sense decimals. Es poden representar en format decimal, octal (comen\u00e7ant per un 0), o hexadecimal (comen\u00e7ant per 0x).</li> <li>real (float). Qualsevol nombre amb decimals. Es poden representar tamb\u00e9 en notaci\u00f3 cient\u00edfica.</li> <li>cadena (string). Conjunts de car\u00e0cters delimitats per cometes simples o dobles.</li> <li>vector (array). Conjunt de variables del mateix tipus ordenades.</li> <li>Objecte (object). Utilitzat per les inst\u00e0ncies de classes.</li> <li>null. \u00c9s un tipus de dades especial, que s'usa per a indicar que la variable no t\u00e9 valor. (http://php.net/manual/es/language.types.null.php)</li> </ul> <p>Valors que s'avaluen a <code>false</code></p> <p>Quan es realitzen operacions que s'avaluen com a boole\u00e0 els seg\u00fcents valors s'avaluaran a <code>false</code>:    </p> <ul> <li>els enters 0 i -0 (zero).</li> <li>els reals <code>0.0</code> y <code>-0.0</code> (zero).</li> <li>la cadena buida i la cadena <code>\"0\"</code>.</li> <li>un array amb zero elements.</li> <li>el tipus especial NULL (incloses les variables no inicialitzades). </li> </ul>"},{"location":"02-basics/02-phpbasics/#ambit-de-les-variables","title":"\u00c0mbit de les variables","text":"<p>L'\u00e0mbit d'una variable indica quina \u00e9s la part del codi en qu\u00e8 la variable esmentada \u00e9s accessible. </p> <p>Una variable declarada en un fitxer de PHP est\u00e0 disponible en aqueix fitxer i en els que incloguen. </p> <p>Les funcions defineixen un \u00e0mbit local, separat de la resta del codi. No obstant aix\u00f2, es poden  definir variables globals amb la paraula reservada global, encara que no s\u00f3n aconsellables.</p> <pre><code>$a = 1; /* global scope */ \nfunction test()\n{ \necho $a; /* reference to local scope variable */ \n} \ntest(); // \"\"\nfunction test2()\n{ \nglobal $a;  /* reference to global scope variable */ \necho $a; \n} \ntest2(); // 1\n</code></pre>"},{"location":"02-basics/02-phpbasics/#constants","title":"Constants","text":"<p>Per a definir constants s'utilitza <code>define()</code>, que reb el nom de la constant i el valor que li volem donar. Tamb\u00e9 podem user la paraula reservada <code>const</code>.</p> <pre><code>const PI = 3.1415927\ndefine(\"PI\", 3.1415927)\n</code></pre> <p>Constants sempre en maj\u00fascules</p> <p>\u00c9s una convenci\u00f3 utilitzar identificadors en maj\u00fascules per a les constants.</p>"},{"location":"02-basics/02-phpbasics/#operadors","title":"Operadors","text":""},{"location":"02-basics/02-phpbasics/#arimetics","title":"Arim\u00e8tics","text":"Exemple Nom Resultat <code>+$a</code> Identidat Conversi\u00f3 de <code>$a</code> a <code>int</code> o <code>float</code> segons el cas. <code>-$a</code> Negaci\u00f3 Oposat de <code>$a</code>. <code>$a + $b</code> Suma Suma de <code>$a</code> i <code>$b</code>. <code>$a - $b</code> Resta Difer\u00e8ncia de <code>$a</code> i <code>$b</code>. <code>$a * $b</code> Multiplicaci\u00f3 Producte de <code>$a</code> i <code>$b</code>. <code>$a / $b</code> Divisi\u00f3 Quocient de <code>$a</code> i <code>$b</code>. <code>$a % $b</code> M\u00f3dul / Residu Residu de <code>$a</code> dividit per <code>$b</code>. <code>$a ** $b</code> Pot\u00e8ncia Resultat de <code>$a</code> elevat a <code>$b</code>. PHP &gt;= 5.6. <p>En el caso de cadenas, si queremos concatenarlas, se utiliza el operador <code>.</code>:</p> <pre><code>$x = 33;\n$y = 11;\n$z = $x + $y;\necho \"La suma de 33 y 11 es \".44.\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".(33 + 11).\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".$z.\"&lt;br /&gt;\";\n</code></pre> <p>Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament  ja que s'expandeixen autom\u00e0ticament:</p> <pre><code>echo \"La suma de $x y $y es $z &lt;br /&gt;\";\n</code></pre> <p>A vegades, necessitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat:</p> <pre><code>$color = \"rojo\";\necho \"El plural de $color el ${color}s\";\n?&gt;\n</code></pre> <p>M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes.</p>"},{"location":"02-basics/02-phpbasics/#comparacio","title":"Comparaci\u00f3","text":"Exemple Nom Resultat <code>$a == $b</code> Igual <code>true</code> si <code>$a</code> \u00e9s igual a <code>$b</code> despr\u00e9s de la conversi\u00f3 de tipus. <code>$a === $b</code> Id\u00e8ntic, Comparaci\u00f3 estricta <code>true</code> si <code>$a</code> \u00e9s igual a <code>$b</code>, i s\u00f3n del mateix tipus de dada. <code>$a != $b</code>, <code>$a &lt;&gt; $b</code> Diferent <code>true</code> si <code>$a</code> no \u00e9s igual a <code>$b</code> despr\u00e9s de la conversi\u00f3 de tipus. <code>$a !== $b</code> No id\u00e8ntic <code>true</code> si <code>$a</code> no \u00e9s igual a <code>$b</code>, o si no s\u00f3n del mateix tipus. <code>$a &lt; $b</code> Menor que <code>true</code> si <code>$a</code> \u00e9s estrictament menor que <code>$b</code>. <code>$a &gt; $b</code> Major que <code>true</code> si <code>$a</code> \u00e9s estrictament major que <code>$b</code>. <code>$a &lt;= $b</code> Menor o igual que <code>true</code> si <code>$a</code> \u00e9s menor o igual que <code>$b</code>. <code>$a &gt;= $b</code> Major o igual que <code>true</code> si <code>$a</code> \u00e9s major o igual que <code>$b</code>. <code>$a &lt;=&gt; $b</code> Nau espacial Torna <code>-1</code>, <code>0</code> o <code>1</code> quan <code>$a</code> \u00e9s respectivamente menor, igual, o major que <code>$b</code>. PHP &gt;= 7. <code>$a ?? $b ?? $c</code> Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga <code>null</code>. <code>null</code> si no hi ha valors definits i no s\u00f3n <code>null</code>. PHP &gt;= 7."},{"location":"02-basics/02-phpbasics/#logics","title":"L\u00f2gics","text":"Exemple Nom Resultat <code>$a and $b</code>, <code>$a &amp;&amp; $b</code> And (i) <code>true</code> si tant <code>$a</code> com <code>$b</code> s\u00f3n <code>true</code>. <code>$a or $b</code>, <code>$a || $b</code> Or (o inclusiu) <code>true</code> si qualsevol de <code>$a</code> o <code>$b</code> \u00e9s <code>true</code>. <code>$a xor $b</code> Xor (o exclusiu) <code>true</code> si <code>$a</code> o <code>$b</code> \u00e9s <code>true</code>, pero no ambd\u00f3s. <code>!$a</code> Not (no) <code>true</code> si <code>$a</code> no \u00e9s <code>true</code>."},{"location":"02-basics/02-phpbasics/#assignacio","title":"Assignaci\u00f3","text":"Exemple Nom Resultat <code>$a = $b</code> Assignaci\u00f3 Assigna a <code>$a</code> el valor de <code>$b</code> <code>$a += $b</code> Assignaci\u00f3 de la suma Le suma a <code>$a</code> el valor de <code>$b</code>. Equivalent a <code>$a = $a + $b</code> <code>$a -= $b</code> Assignaci\u00f3 de la resta Le resta a <code>$a</code> el valor de <code>$b</code>. Equivalent a <code>$a = $a - $b</code> <code>$a *= $b</code> Assignaci\u00f3 del producte Assigna a <code>$a</code> el producto de <code>$a</code> por <code>$b</code>. Equivalent a <code>$a = $a * $b</code> <code>$a /= $b</code> Assignaci\u00f3 de la divisi\u00f3 Assigna a <code>$a</code> el quocient de <code>$a</code> entre <code>$b</code>. Equivalent a <code>$a = $a / $b</code> <code>$a %= $b</code> Assignaci\u00f3 del residu Assigna a <code>$a</code> el residu de dividir <code>$a</code> entre <code>$b</code>. Equivalent a <code>$a = $a % $b</code> <code>$a .= $b</code> Concatenaci\u00f3 Concatena a <code>$a</code> la cadena <code>$b</code>. Equivalent a <code>$a = $a . $b</code> <code>$a++</code> Increment Incrementa <code>$a</code> en una unitat. Equivalent a <code>$a = $a + 1</code> <code>$a--</code> Decrement Decrementa <code>$a</code> en una unitat. Equivalent a <code>$a = $a - 1</code> <p>Prioritat dels operadors</p> <p>Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 (<code>!</code>), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php</p> <p>Autoavaluaci\u00f3</p> <p>Si <code>$a=5</code> i <code>$b=4</code>, esbrina el valor de <code>$c</code> si <code>$c = $a*2 &gt; $b+5 &amp;&amp; !($b&lt;&gt;4)</code></p>"},{"location":"02-basics/02-phpbasics/#treballant-en-formularis","title":"Treballant en formularis","text":"<p>Les dades s'envien via URL en el format <code>var1=valor1&amp;var2=valor2\u2026.</code> Per exemple: <code>exemple.php?nom=Homer+cognom=Simpson</code></p> <p>Es divideix en dos passos:</p> <ol> <li>Genera un formulari amb l'atribut <code>action='file.php' method='GET'</code>.</li> <li>En el fitxer <code>.php</code> cal llegir les dades amb <code>$_GET['varName']</code>.</li> </ol> <p>Anem a separar sempre que puguem el codi HTML del de PHP. Per exemple, el formulari el coloquem en <code>saluda.html</code>:</p> <p><pre><code>&lt;form action=\"saluda.php\" method=\"get\"&gt;\n&lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n&lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n&lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt; \n&lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n&lt;p&gt;&lt;input type=\"submit\" value=\"enviar\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> I recollim les dades en <code>saluda.php</code>:</p> <pre><code>&lt;?php\n$nombre = $_GET[\"nombre\"];\n$apellido1 = $_GET[\"apellido1\"];\necho \"Hola $nombre $apellido1\";\n?&gt;\n</code></pre> <p>Si volgu\u00e9ssim fer-ho tot en un \u00fanic fitxer (la qual cosa no es recomanable), podem fer-ho aix\u00ed:</p> <p><pre><code>&lt;form action=\"\" method=\"get\"&gt;\n&lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n&lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n&lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt;\n&lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n&lt;input type=\"submit\" value=\"enviar\"&gt;\n&lt;/form&gt;\n&lt;p&gt;\n&lt;?php\nif(isset($_GET['nombre'])) {\n$nombre = $_GET[\"nombre\"];\n$apellido1 = $_GET[\"apellido1\"];\necho \"Hola $nombre $apellido1\";\n}\n?&gt;\n&lt;/p&gt;\n</code></pre> M\u00e9s endavant aprofundirem en la gesti\u00f3 de formularis.</p>"},{"location":"02-basics/02-phpbasics/#estructures-de-control-de-flux","title":"Estructures de control de flux","text":"<ul> <li> <p>Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3.</p> </li> <li> <p>Les m\u00e9s habituals s\u00f3n:</p> </li> <li> <p>Condicionals: <code>if</code>, <code>if</code> <code>else</code>, <code>switch</code></p> </li> <li>Bucles: <code>while</code>, <code>do</code> <code>while</code>, <code>for</code></li> </ul> <p>seguint les estructures:</p> <p><pre><code>if (condici\u00f3) {\n// instruccions\n}\nelse {\n// instruccions\n}\n</code></pre> <pre><code>switch ($variable) {\ncase valor:\n//instruccio1\nbreak;\ncase valor:\n//instruccio1\nbreak;\ndefault:\n//instruccio1\n}           \n</code></pre> <pre><code>while (condici\u00f3) {\n//instruccions\n}\n</code></pre> <pre><code>do {\n//instruccions\n} while (condici\u00f3);\n</code></pre> <pre><code>for ($i=1;$i&lt;10;$i++){\n//instruccions\n}\n</code></pre></p> <p>http://php.net/manual/es/language.control-structures.php</p>"},{"location":"02-basics/02-phpbasics/#maneig-de-cadenes-de-text","title":"Maneig de cadenes de text","text":"<ul> <li>Podem utilitzar tant cometes simples com a cometes dobles.</li> <li>Per a concatenar cadenes utilitzarem l'operador punt (.)</li> </ul> <pre><code>$fullName = $name.' '.$surname;\n</code></pre>"},{"location":"02-basics/02-phpbasics/#expansio-de-variables","title":"Expansi\u00f3 de variables","text":"<ul> <li>Podem introduir una variable dins d'un text sempre que usem les cometes dobles per a delimitar el text. A\u00e7\u00f2 far\u00e0 que el contingut de la variable s'expandisca i es concatene amb el text existent en la cadena.</li> </ul> <pre><code>echo \"&lt;p&gt;M\u00f2dul: $module&lt;/p&gt;\"\n</code></pre> <ul> <li>A voltes, \u00e9s necessari envoltar-la entre claus</li> </ul> <pre><code>echo \"&lt;p&gt;M\u00f2dul: {$module}DAW&lt;/p&gt;\"\n</code></pre> <ul> <li>Si no pos\u00e0rem les claus l'int\u00e8rpret cercaria una variable que es cride <code>$moduleDAW</code></li> </ul> <p>M\u00e9s informaci\u00f3 en funcions de cadena</p>"},{"location":"02-basics/02-phpbasics/#maneig-de-dates","title":"Maneig de dates","text":""},{"location":"02-basics/02-phpbasics/#funcio-time","title":"Funci\u00f3 <code>time()</code>","text":"<p>En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 <code>time()</code> retorna el nombre de segons transcorreguts  des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix).  A aquesta forma d'expressar data i hora se li denomina timestamp.</p>"},{"location":"02-basics/02-phpbasics/#funcio-date","title":"Funci\u00f3 <code>date()</code>","text":"<pre><code>date (string $format [, int $timestamp=time()]): string\n</code></pre> <p>La funci\u00f3 <code>date</code> retorna una cadena formatada segons els codi de format. Si no li passem la variable <code>timestamp</code>  ens retorna la cadena formatada per a la data i l'hora actual.</p> <p>Els codis de format m\u00e9s habituals  per a la funci\u00f3 <code>date</code> s\u00f3n:</p> CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) <p>La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date</p> <p>Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples:</p> <pre><code>date(\"d-m-Y\"); // 15-09-2019\ndate(\"H:i:s\");  //  19:20:23\ndate(\"Y\"); // 2019\ndate(\"YmdHis\"); // 20190915192023\ndate(\"d/m/y H:i a\"); // 15/09/19 19:20 pm\ndate(\"d-m-Y H:i\", time()); // Moment actual\n</code></pre>"},{"location":"02-basics/02-phpbasics/#funcio-mktimehora-min-seg-mes-dia-any","title":"Funci\u00f3 <code>mktime(hora, min, seg, mes, dia, any)</code>","text":"<p>La funci\u00f3 mktime permet obtenir la marca de temps Unix (timestamp) d'una data.</p> <p>Per exemple:</p> <p><pre><code>$data = mktime(0, 0, 0, 1, 1,2020);\necho date('d-m-Y', $data); // mostrar\u00e0 01-01-2020\n</code></pre> M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php</p> <p>Una altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 <code>strtotime()</code> on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple:</p> <pre><code>// posarem la data en el format any-mes-dia per a evitar confusions.\n$date = strtotime(\"2020-01-01\"); \n</code></pre>"},{"location":"02-basics/02-phpbasics/#operar-amb-dates","title":"Operar amb dates","text":"<p>Com hem dit al principi les dates s'emmagatzemen com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates (timestamp) per a afegir, llevar o calcular difer\u00e8ncies entre ells.</p> <p>Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem:</p> <pre><code>$data=mktime(0, 0, 0, 1, 1,2020); // timestamp que representa l'1 de gener de 2020\n$diferencia=$data - time(); // restem a l'1 de gener de 2020 el temps actual, \n// el resultat estar\u00e0 en segons.\n$diferenciaEnDies =((( $diferencia / 60) / 60 ) / 24 );\n/*  \n    dividim els segons entre 60 i obtenim els minuts,\n    els dividim entre 60 i obtenim les hores,\n    els dividim entre 24 i obtenim els dies \n*/\n</code></pre>"},{"location":"02-basics/02-phpbasics/#validar-dates","title":"Validar dates","text":"<p>En la funci\u00f3 <code>checkdate</code> podem validar una data.</p> <p><pre><code>checkdate (int $month, int $day ,int $year): bool\n</code></pre> La funci\u00f3 torna <code>true</code> si la data es v\u00e0lida, si no, torna  <code>false</code>. </p>"},{"location":"02-basics/02-phpbasics/#classe-datetime","title":"Classe DateTime","text":"<p>PHP disposa tamb\u00e9 de la classe <code>DateTime</code> per a representar les dates, la veurem m\u00e9s avant.</p>"},{"location":"02-basics/02-phpbasics/#maneig-darrays","title":"Maneig d'arrays","text":"<p>Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau. Les claus poden ser nombres o textos (arrays associatius). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa.</p>"},{"location":"02-basics/02-phpbasics/#array-indexat","title":"Array indexat","text":""},{"location":"02-basics/02-phpbasics/#crear-array","title":"Crear array","text":"<ul> <li>Podem crear un array buit de dues formes:</li> </ul> <pre><code>$noms = array();\n$noms = [];\n</code></pre> <ul> <li>Si volem assignar valors al array en el moment de crear-ho: </li> </ul> <pre><code>$noms = array('Sandra', 'Pedro', 'Andrea'); \n$noms = ['Sandra', 'Pedro', 'Andrea'];\n</code></pre>"},{"location":"02-basics/02-phpbasics/#mostrar-el-contingut-dun-array","title":"Mostrar el contingut d'un array","text":"<p>Si intentem mostrar el contingut d'un array amb echo no obtindrem  les dades que hi ha dins del array. En lloc d'a\u00e7\u00f2 podem utilitzar la funci\u00f3 print_r: </p> <pre><code>print_r($noms);\n</code></pre> <p>Per\u00f2 si necessitem donar-li format als continguts del array, haurem de rec\u00f3rrer-ho amb un bucle i anar mostrant element a element.</p>"},{"location":"02-basics/02-phpbasics/#afegint-elements-al-array","title":"Afegint elements al array","text":"<p>Podem afegir elements al array utilitzant claud\u00e0tors buits. La clau d'aquests elements ser\u00e0 el seg\u00fcent \u00edndex num\u00e8ric disponible.</p> <pre><code>$noms[]='Raul'; $noms[]='Marta';\n</code></pre>"},{"location":"02-basics/02-phpbasics/#accedir-als-elements-del-array","title":"Accedir als elements del array","text":"<p>Accedirem als elements del array indicant la clau de l'element entre claud\u00e0tors:</p> <pre><code>echo $noms[2];\n</code></pre> <p>Tamb\u00e9 podem modificar el seu valor:</p> <pre><code>$noms[0] = 'Sara';\n</code></pre>"},{"location":"02-basics/02-phpbasics/#recorrer-arrays","title":"Rec\u00f3rrer arrays","text":""},{"location":"02-basics/02-phpbasics/#arrays-associatius","title":"Arrays associatius","text":"<p>Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: </p> <pre><code>$alumne = array('nom' =&gt; 'Sara', 'cognom' =&gt; 'Garc\u00eda', 'edat' =&gt; 22 );\n$alumne = ['nom' =&gt; 'Sara', 'cognom' =&gt; 'Garc\u00eda', 'edat' =&gt; 22 ];\n$alumne['nom'] = 'Ver\u00f3nica';\necho $alumne['nom'];\n</code></pre>"},{"location":"02-basics/02-phpbasics/#recorrer-arrays-associatius","title":"Rec\u00f3rrer arrays associatius","text":""},{"location":"02-basics/02-phpbasics/#recorrer-claus-i-valors","title":"Rec\u00f3rrer claus i valors","text":""},{"location":"02-basics/02-phpbasics/#arrays-multidimensionals","title":"Arrays multidimensionals","text":"<p>Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays.</p> <pre><code>$esports = ['hivern' =&gt; ['esqu\u00ed de fons', 'hoquei sobre gel'], 'estiu' =&gt; [ 'nataci\u00f3', 'voley platja'] ];\n</code></pre> <p>Per a accedir al primer esport d'hivern:</p> <pre><code>echo $esports['hivern'][0];\n</code></pre>"},{"location":"02-basics/02-phpbasics/#funcions-darrays","title":"Funcions d'arrays","text":"<p>Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 <code>count(array)</code>.  Per rec\u00f3rrer l'array farem \u00fas d'un bucle <code>for</code>:</p> <pre><code>$tam = count($fruites); // mida de l'array\nfor ($i=0; $i&lt;count($fruites); $i++) {\necho \"Element $ i: $ fruites [$ i] &lt;br /&gt;\";\n}\n</code></pre> <p>Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n:</p> <ul> <li><code>print_r($ array)</code>: mostra el contingut de tot el <code>$array</code></li> <li><code>$elem = array_pop($array)</code>: elimina l'\u00faltim <code>$element</code></li> <li><code>array_push ($ array, $ elem)</code>: afegeix un <code>$element</code> al final.</li> <li><code>$bool = in_array($elem, $array)</code>: esbrina si <code>$elem</code> est\u00e0 en el<code>$array</code></li> </ul> PHP <pre><code>$fruits = [ \"orange\", \"pear\", \"apple\"];\narray_push ($fruites, \"pinapple\");\nprint_r($fruits);\n$lastFruit = array_pop($fruits);\nif (in_array(\"pineapple\", $fruits)) {\necho \"&lt;p&gt; Pineapple left &lt;/ p&gt;\";\n} else {\necho \"&lt;p&gt; No pineapple left &lt;/ p&gt;\";\n}\nprint_r($fruites);\n?&gt;\n</code></pre> Consola <pre><code>Array\n(\n  [0] =&gt; orange\n  [1] =&gt; pear\n  [2] =&gt; apple\n  [3] =&gt; pinapple\n)\n&lt;p&gt;No pineapple left&lt;/ p&gt;\nArray\n(\n  [0] =&gt; orange\n  [1] =&gt; pear\n  [2] =&gt; apple\n)\n</code></pre> <ul> <li><code>$claus = array_keys($array)</code>: torna les claus de l'<code>$ array</code> associatiu.</li> <li><code>$tam = count ($array)</code>: retorna la mida de <code>$ array</code>.</li> <li><code>sort($array)</code>: ordena els elements de l' <code>$ array</code>.</li> <li><code>isset($array[element])</code>: indica si existeix / t\u00e9 valor element dins del array.</li> <li><code>unset($array[element])</code>: elimina l'element de l'array (deixa un buit).</li> </ul> PHP <pre><code>$capitals = array (\"Italy\" =&gt; \"Rome\",\n\"France\" =&gt; \"Paris\",\n\"Portugal\" =&gt; \"Lisbon\");\n$countries = array_keys($capitals);\nprint_r($countries);\nsort($countries);\nprint_r($countries);\nunset($capitals[\"France\"]);\nprint_r($capitals);\n</code></pre> Consola <pre><code>Array\n(\n  [0] =&gt; Italy\n  [1] =&gt; France\n  [2] =&gt; Portugal\n)\nArray\n(\n  [0] =&gt; France\n  [1] =&gt; Italy\n  [2] =&gt; Portugal\n)\nArray\n(\n  [Italy] =&gt; Rome\n  [Portugal] =&gt; Lisbon\n)\n</code></pre> <p>Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial.</p> <p>Articles per aprofundir en les operacions amb arrays</p> <ul> <li>Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta.</li> <li>Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP.</li> </ul> <p>Altres recursos: </p> <ul> <li>https://www.studytonight.com/php/indexed-array</li> <li>https://aprende-web.net/php/php6_1.php</li> </ul>"},{"location":"02-basics/02-phpbasics/#funcions","title":"Funcions","text":""},{"location":"02-basics/02-phpbasics/#funcions-predefinides","title":"Funcions predefinides","text":"<p>Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s  vinculades als diferents m\u00f2duls que podem instal\u00b7lar.</p> <ul> <li><code>is_null($var)</code> determina si una variable \u00e9s nula o no.</li> <li><code>isset($var)</code> determina si una variable estan definida i no \u00e9s NULL.</li> <li><code>unset($var)</code> destrueix les variables especificades.</li> <li><code>empty($var)</code> torna true si no existeix o \u00e9s FALSE</li> <li><code>is_int($var)</code>, is_float(), is_bool(), is_array()</li> <li><code>var_dump($var)</code>, mostra informaci\u00f3 de la variable.</li> </ul>"},{"location":"02-basics/02-phpbasics/#funcions-definides-per-lusuari","title":"Funcions definides per l'usuari","text":"<p>Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function:</p> <pre><code>function suma($a, $b) { \nreturn $a + $b; \n}\n</code></pre> <p>Per tal d'invocar la funci\u00f3:</p> <p><pre><code>$resultat = suma(5, 7);\n</code></pre> Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return, retorna null en finalitzar.</p> <p>Command-query separation</p> <p>S\u00ed b\u00e9 \u00e9s un principi de la programaci\u00f3 orientada a objectes \u00e9s \u00fatil usar-lo tamb\u00e9 quan definim funcions. El principi afirma que cada m\u00e8tode ha de ser un comandament que realitza una acci\u00f3 o una consulta que retorna dades al que la crida, pero no ambdues coses.</p>"},{"location":"02-basics/02-phpbasics/#valors-per-defecte-en-els-parametres","title":"Valors per defecte en els par\u00e0metres","text":"<p>Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat.</p> <pre><code>function preuAmbIva($preu, $iva=0.21){\nreturn $preu * (1 + $iva);\n}\n$preu = 10;\n$pIva = preuAmbIva($preu);\n</code></pre> <ul> <li>Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final.</li> </ul>"},{"location":"02-basics/02-phpbasics/#pas-de-parametres-per-referencia","title":"Pas de par\u00e0metres per refer\u00e8ncia","text":"<p>Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol &amp; davant del seu nom.</p> <pre><code>function preuAmbIva(&amp;$preu, $iva=0.18){\n$preu *= (1 + $iva);\n}\n</code></pre>"},{"location":"02-basics/02-phpbasics/#parametres-per-nom","title":"Par\u00e0metres per nom","text":"<p>Des de PHP 8.0 podem passar els arguments amb el nom (a m\u00e9s de per posici\u00f3, com hem fet fins ara). Els arguments amb nom es passen posant el nom com a prefix del par\u00e0metres separat per dos punts <code>:</code> <code>$resultat=funcio(arg1: valor1, arg2: valor2);</code></p> <p>Aquesta caracter\u00edstica complementa els par\u00e0metres opcionals permetent-nos saltar-ne el valor:</p> <pre><code>function funcionArgumentsNom($a, $b = 2, $c = 4) {\necho \"$a $b $c\";\n}\nfuncionArgumentsNom(c: 3, a: 1); // \"1 2 3\"\n</code></pre> <p>Tant els par\u00e0metres opcionals com els obligatoris poden tenir nom, per\u00f2 els arguments amb nom s'han de posar despr\u00e9s dels que no en tenen.</p> <pre><code>funcioArgumentsNom(1, c: 3); // \"1 2 3\"\n</code></pre>"},{"location":"02-basics/02-phpbasics/#declaracions-de-tipus-type-hinting","title":"Declaracions de tipus (Type Hinting)","text":"<p>Des de PHP 7.0 les funcions poden definir tipus tant per als par\u00e0metres com als valors de retorn. Si el valor donat \u00e9s d'un tipus incorrecte, es generar\u00e0 un error. Per aix\u00f2 s'ha d'anteposar-se el nom del tipus al nom del par\u00e0metre. Es pot fer que una declaraci\u00f3 accepte valors NULL si el valor predeterminat del par\u00e0metre s'estableix a NULL.</p> <p>Per a aconseguir este comportament caldr\u00e0 afegit la seg\u00fcent directiva:</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n</code></pre> <p>Si una funci\u00f3 no torna res s'indica mitjan\u00e7ant el tipus <code>void</code>.</p>"},{"location":"02-basics/02-phpbasics/#tipus-valids","title":"Tipus v\u00e0lids","text":"Type Description Version Class/interface name The value must be an instanceof the given class or interface. self The value must be an instanceof the same class as the one in which the type declaration is used. Can only be used in classes. parent The value must be an instanceof the parent of the class in which the type declaration is used. Can only be used in classes. array The value must be an array. callable The value must be a valid callable. Cannot be used as a class property type declaration. bool The value must be a boolean value. float The value must be a floating point number. int The value must be an integer. string The value must be a string. iterable The value must be either an array or an instanceof Traversable. PHP 7.1.0 object The value must be an object. PHP 7.2.0 mixed The value can be any value. PHP 8.0.0"},{"location":"02-basics/02-phpbasics/#exemple","title":"Exemple","text":"<pre><code>declare(strict_types=1);\nfunction suma(int a, int b):int\n{\nreturn $a + $b;\n}\n$num=25\necho suma(3,5); // 8\necho suma(3, $num); // 28\necho suma(\"3\",5 ) // error ja que s'aplica el tipat estricte\n</code></pre>"},{"location":"02-basics/02-phpbasics/#ambit-scope-de-les-variables","title":"\u00c0mbit (scope) de les variables","text":"<p>L'\u00e0mbit d'una variable \u00e9s el context dins el qual la variable est\u00e0 definida. La major part de les variables PHP nom\u00e9s tenen un \u00e0mbit simple.</p> <p>Les variables globals s\u00f3n accessibles des de qualsevol part del programa.</p> <p>Qualsevol variable usada dins d\u2019una funci\u00f3 est\u00e1, per defecte, limitada a l'\u00e0mbit local de la funci\u00f3.</p> <p><code>test()</code> no imprimir\u00e0 res ja que els \u00e0mbits de les variables \u00e9s distint.</p> <pre><code>$a = 1 /* \u00e0mbit global */\nfunction test() {\necho $a;\n}\ntest();\n</code></pre> <p>La paraula reservada <code>global</code> permet accedir a les varibles globals dintre d\u2019una funci\u00f3.</p> <pre><code>$a = 1 /* \u00e0mbit global */\nfunction test() {\nglobal $a\necho $a; \n}\ntest(); // 1\n</code></pre> <p>Evita l'\u00fas de variables globals</p> <p>Les variables globals es poden alterar per qualsevol part del codi, la qual cosa fa que siga dif\u00edcil de recordar o raonar sobre cada \u00fas possible. Una variable global no pot tenir control d'acc\u00e9s. No es pot limitar a algunes parts del programa. L'\u00fas de variables globals provoca un acoblament molt estret del codi. </p>"},{"location":"02-basics/02-phpbasics/#funcions-com-a-parametres","title":"Funcions com a par\u00e0metres","text":"<p>En PHP \u00e9s possible passar funcions com a par\u00e0metres a altres funcions. Nom\u00e9s cal passar el nom de la funci\u00f3 entre cometes. </p> <p>Exemple:</p> <pre><code>function calculator($operation,$numA,$numB){\nreturn $operation($numA,$numB); \n}\nfunction sumar($a,$b) { return $a+$b; }\nfunction restar($a,$b) {return $a-$b; }\n$a=4;$b=6;\necho calculator('sumar',$a,$b); // 10\necho calculator('restar',$a,$b); // -1\n</code></pre>"},{"location":"02-basics/02-phpbasics/#funcions-anonimes-closures","title":"Funcions an\u00f2nimes (closures)","text":"<p>Los funcions an\u00f2nimes estan implementades usant la classe Closure. Permeten la creaci\u00f3 de funcions que no tenen un nom espec\u00edfic. Podem assignar una funci\u00f3 an\u00f2nima a una variable o passar-la com a par\u00e0metre a una altra funci\u00f3.</p> <p>Exemple:</p> <p>Sense par\u00e0metres:</p> <pre><code>$anonima = function () {\necho \"Hola\"; \n}; \n$anonima(); // Hola\n</code></pre> <p>Amb par\u00e0metres:</p> <pre><code>$anonima = function ($nom) {\necho \"Hola {$nom}\"; \n}; \n$anonima('Vicent'); // Hola Vicent\n</code></pre>"},{"location":"02-basics/02-phpbasics/#usar-variables-de-lambit-superior","title":"Usar variables de l'\u00e0mbit superior","text":"<ul> <li>Una funci\u00f3 an\u00f2nima pot usar variables de l'\u00e0mbit superior mitjan\u00e7ant la paraula reservada use: </li> </ul> <pre><code>function saluda(callable $fnSaluda) {\n$fnSaluda('Vicent'); \n} \n$salutacio = 'Hola'; \n$anonima = function ($nom) use ($salutacio) {\necho \"{$salutacio} {$nom}\"; \n}; \nsaluda($anonima);\n</code></pre>"},{"location":"02-basics/02-phpbasics/#llibreries","title":"Llibreries","text":"<p>Podem fer llibreries de funcions guardant-les en un fitxer que despr\u00e8s importem des d'on les utilitzem. Ho podem fer amb include, o utilitzant composer per a fer-ho.</p>"},{"location":"02-basics/02-phpbasics/#sentencies-per-a-incloure-fitxers","title":"Sent\u00e8ncies per a incloure Fitxers","text":"<p>Les sent\u00e8ncies <code>include()</code> i <code>include_once()</code> i <code>require()</code> i <code>require_once()</code> inclouen i avaluen el fitxeru especificat. </p> <p><code>include_once()</code> i <code>require_once()</code> a m\u00e9s verifique que el fitxer no haja sigut incl\u00f2s abans i \u00e9s preferible a <code>include</code>. Cal ser cur\u00f2s amb el <code>path</code> del fitxer a incloure. </p> <p>La difer\u00e8ncia entre <code>require</code> i <code>include</code> \u00e9s el tractament de l'error quan el fitxer no existeix. Mentre <code>include</code> mostra un av\u00eds, <code>require</code> mostra una error fatal que para l'execuci\u00f3 de l'script.</p> <p>Vistes</p> <p>Un \u00fas habitual de les funcions d'inclusi\u00f3 \u00e9s crear vistes. Una vista \u00e9s la part de l'aplicaci\u00f3 que mostra la informaci\u00f3 a l'usuari. Amb les inclusions podem separar la part de l\u00f2gica de la d'interf\u00edcie d'usuari.</p>"},{"location":"02-basics/02-phpbasics/#ambit-de-les-variables_1","title":"\u00c0mbit de les variables","text":"<p>Com s'observa en l'exemple seg\u00fcent, les variables creades abans de cridar l'include, estaran disponibles en el fitxer incl\u00f2s. </p> <p>\u00c9s a dir, com si tot fora un \u00fanic document.</p> fruits.php <pre><code>&lt;?php\n$color = 'green';\n$fruit = 'apple';\ninclude 'fruit.view.php'\n</code></pre> fruits.view.php <pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Fruites&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h3&gt;\n&lt;?= \"A $color $fruit\" ?&gt; \n&lt;/h3&gt;       \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"02-basics/02-phpbasics/#rutes","title":"Rutes","text":"<p>En l'exemple anterior <code>include \"fruit.view.php\"</code> la ruta s'especifica de forma relativa, \u00e9s a dir, la ruta es calcular\u00e0 a  partir de la ruta en que s'execute el fitxer principal. A mesura que les aplicacions van creixent aquest tipus de rutes acaben sent un mal de cap. Per aix\u00f2 \u00e9s recomanable escriure les inclusions de forma relativa per\u00f2 fixant pr\u00e8viament el directori actual.</p> <pre><code>require __DIR__ . '/fruits.view.php';\n</code></pre>"},{"location":"02-basics/02-phpbasics/#noves-caracterisques-php","title":"Noves caracter\u00edsques PHP","text":""},{"location":"02-basics/02-phpbasics/#spaceship-operator","title":"Spaceship operator  (&lt;==&gt;)","text":"<p>Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a.</p> <p>Exemple:</p> <pre><code>// Integers\necho 1 &lt;=&gt; 1; // 0\necho 1 &lt;=&gt; 2; // -1\necho 2 &lt;=&gt; 1; // 1\n</code></pre>"},{"location":"02-basics/02-phpbasics/#operador-de-fusio-de-null","title":"Operador de fusi\u00f3 de null ??","text":"<p>Torna el primer operand si existeix i no \u00e9s NULL o el segon operand.</p> <p>Exemple:</p> <pre><code>// Fetches the value of $_GET['user'] and returns 'nobody'\n// if it does not exist.\n$username = $_GET['user']??'nobody';\n// This is equivalent to:\n$username = isset($_GET['user'])?$_GET['user']:'nobody';\n</code></pre> <p>M\u00e9s recursos:</p> <ul> <li>Noves caracter\u00edstiques PHP 7.0</li> <li>Noves caracter\u00edstiques PHP 7.1</li> <li>Noves caracter\u00edstiques PHP 7.2</li> <li>Noves caracter\u00edstiques PHP 7.3</li> <li>Noves caracter\u00edstiques PHP 7.4</li> <li>Noves caracter\u00edstiques PHP 8.0</li> <li>Noves caracter\u00edstiques PHP 8.1</li> </ul>"},{"location":"02-basics/02-phpbasics/#credits","title":"Cr\u00e8dits","text":"<ul> <li>Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html</li> </ul>"},{"location":"02-basics/99-activities/","title":"Activitats","text":""},{"location":"02-basics/99-activities/#php-basic","title":"PHP B\u00e0sic","text":"<ol> <li> <p><code>201tresfrases.php</code>: Mostra 3 frases, cadascuna en un par\u00e0graf utilitzant les tres possibilitats que hi ha de mostrar contingut. Despr\u00e9s, introdueix dos comentaris, un de bloc i un altre d'una l\u00ednia.</p> </li> <li> <p><code>202calculs.php</code>: Escriu un programa que utilitze les variables <code>$x</code> i <code>$y</code>. Assigna'ls els valors <code>166</code> i <code>999</code> respectivament. Tot seguit, mostra per pantalla el valor de cada variable, la suma, la resta, la divisi\u00f3 i la multiplicaci\u00f3.</p> </li> <li> <p><code>203dadesPersonals.php</code>: Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula.     </p> Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 </li> <li> <p><code>204dadesPersonales.html</code> i <code>204dadesPersonales.php</code>: \u00c9s el mateix exercici que l'anterior, per\u00f2 separant la l\u00f2gica. En el primer fitxer crearem el formulari per a introduir les dades i despr\u00e9s recollirem les dades i generarem la taula en el segon arxiu.</p> </li> <li> <p><code>205anys.php</code>: Despr\u00e9s de llegir l'edat d'una persona per la URL, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 67 anys. No cal que faces un formulari, pots provar-ho directament via URL: <code>205anys.php?edad=33</code>.</p> </li> </ol> <p>Tip: <code>$currentYear = date(\"Y\")</code>;</p> <ol> <li><code>206diners.php</code>: A partir d'una quantitat de diners, mostrar la seva descomposici\u00f3 en bitllets (500, 200, 100, 50, 20, 10, 5) i monedes (2, 1) perqu\u00e8 el nombre d'elements sigui m\u00ednim. No es pot utilitzar cap instrucci\u00f3 condicional. Per exemple, en introduir <code>139</code> ha de mostrar:</li> </ol> <p><pre><code>1 bitllet de 100\n0 bitllet de 50\n1 bitllet de 20\n1 bitllet de 10\n1 bitllet de 5\n2 moneda de 2\n</code></pre>   Tip: Pots for\u00e7ar a realitzar la divisi\u00f3 sencera mitjan\u00e7ant la funci\u00f3 <code>intdiv($dividend, $divisor)</code> o passar un nombre flotant a sencer pots fer servir la funci\u00f3 <code>intval()</code>.</p> <ol> <li> <p><code>207posnegzero.php</code>: A partir d'un n\u00famero, mostra per pantalla si el n\u00famero \u00e9s positiu, negatiu o zero.</p> </li> <li> <p><code>208mayor3.php</code>: Sense fer \u00fas de condicions que utilitzen dins de la condici\u00f3 els operadors l\u00f2gics, mostra el m\u00e9s gran de tres n\u00fameros (a, b i c).</p> </li> <li> <p><code>209mayor3c.php</code>: Utilitza en les condicions els operadors l\u00f2gics.</p> </li> <li> <p><code>210nomEdad.php</code>: A partir d'una edat mostra per pantalla:</p> </li> </ol> <pre><code> nad\u00f3 si t\u00e9 menys de 3 anys\n nen si t\u00e9 entre 3 i 12 anys\n adolescent entre 13 i 17 anys\n adult entre 18 i 66\n jubilat a partir de 67\n</code></pre>"},{"location":"02-basics/99-activities/#exercicis-dinvestigacio","title":"Exercicis d'investigaci\u00f3","text":"<ol> <li> <p>Investiga perqu\u00e8 serveix l'operador nau espacial, disponible des de PHP7 (https://www.php.net/manual/es/migration70.new-features.php). Explica amb un parell de l\u00ednies el seu prop\u00f2sit i mitjan\u00e7ant el codi demostra el seu \u00fas.</p> </li> <li> <p>Investiga per a qu\u00e8 serveix la instrucci\u00f3 <code>match()</code>, disponible des de PHP8 (https://www.php.net/manual/ca/control-structures.match.php). Explica amb un parell de l\u00ednies el seu prop\u00f2sit i mitjan\u00e7ant el codi demostra el seu \u00fas.</p> </li> </ol>"},{"location":"02-basics/99-activities/#dates","title":"Dates","text":"<ol> <li> <p><code>213Dates.php</code>: Crea un fitxer que realitza les seg\u00fcents tasques:</p> <ol> <li>Mostra la data i hora actuals amb el format: <code>dd/mm/yyyy hh:mm:ss</code></li> <li>Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte.</li> <li>Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies.</li> <li>Mostra el nombre de dies que han passat des de l'1 de gener.</li> <li>Mostra la data i hora actuals de Nova York.</li> <li>Mostra el dia de la setmana que era l'1 de gener d'enguany.</li> </ol> </li> </ol>"},{"location":"02-basics/99-activities/#cadenes","title":"Cadenes","text":"<ol> <li> <p><code>214Cadenes.php</code>: Crea una p\u00e0gina que reba un nom. Amb la directiva de tipus estricta (<code>declare( strict_types = 1 );</code>) aplica les seg\u00fcents funcions: </p> <ol> <li>Elimina els espais del principi i el final del nom si els hi haguera (trim). </li> <li>Elimina la lletra <code>a</code> del principi i el final del nom si els hi haguera (trim). </li> <li>Mostra la variable <code>nom</code> en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules (strtoupper, strtolower, ucfirst). </li> <li>Mostra el codi ascii de la primera lletra del nom (ord). </li> <li>Mostra la longitud del nom (strlen). </li> <li>Mostra el nombre de vegades que apareix la lletra <code>a</code> (maj\u00fascula o min\u00fascula, substr_count). </li> <li>Mostra la posici\u00f3 de la primera <code>a</code> existent en el nom, siga maj\u00fascula o min\u00fascula (strpos). Si no hi ha cap mostrar\u00e0 -1. </li> <li>El mateix, per\u00f2 amb l''\u00faltima <code>a</code>. </li> <li>Mostra el nom substituint la lletra <code>o</code> pel n\u00famero <code>0</code>, siga maj\u00fascula o min\u00fascula (str_replace). </li> <li>Indica si el nom comen\u00e7a per <code>al</code> o no. </li> </ol> </li> <li> <p><code>215Cadenes.php</code>: Utilitza la funci\u00f3 <code>parse_url</code> per a extraure de la url les seg\u00fcents parts: </p> <ol> <li>El protocol utilitzat (en l'exemple \"http\").  </li> <li>El nom d'usuari (en l'exemple \"username\").</li> <li>El path de la url (en l'exemple \"/path\").</li> <li>El querystring de la url (en l'exemple \"arg=value\").</li> </ol> <pre><code>$url = \"http://username:password@hostname:9090/path?arg=value#anchor\";\n</code></pre> </li> </ol>"},{"location":"02-basics/99-activities/#bucles","title":"Bucles","text":"<ol> <li> <p><code>220parells050.php:</code> Escriu un programa que mostre els n\u00fameros parells del 0 al 50 (dintre d'una llista desordenada).</p> <p><code>220parellsAB.php</code>: A partir de l'anterior, refacciona perqu\u00e8 funcione amb els par\u00e0metres <code>inici</code> i <code>fi</code>.</p> </li> <li> <p><code>221suma110.php</code>: Escriu un programa que sume els n\u00fameros de l'1 al 10.</p> <p><code>221sumaAB.php</code>: A partir de l'anterior, refacciona perqu\u00e8 funcione amb <code>inici</code> i <code>fi</code>.</p> </li> <li> <p><code>222potencia.php</code>: A partir d'una base i exponent, mitjan\u00e7ant l'acumulaci\u00f3 de productes, calcula la pot\u00e8ncia utilitzant l'instrucci\u00f3 <code>for</code>.</p> <p><code>222potenciaWhile.php</code>: Reescriu l'exercici anterior fent \u00fas de <code>while</code>. <code>222potenciaDoWhile.php</code>: Reescriu l'exercici anterior fent \u00fas sols de <code>do-while</code>.</p> </li> <li> <p><code>223taulaMultiplicar.php</code>: Mostra dins d'una taula HTML la taula de multiplicar d'un <code>n\u00famero</code>. Utiliza <code>&lt;thead&gt;</code> amb els seus respectius <code>&lt;th&gt;</code> y <code>&lt;tbody</code>&gt; per a dibujar la tabla. Per exemple:</p> a * b = a*b 7 * 1 = 7 7 * 2 = 14 ... 7 * 10 = 70 </li> <li> <p><code>224formulari.html</code>: Crea un formulario que permeta llegir una <code>quantitat</code>.  <code>224llegirDades.php</code>: A partir de <code>quantitat</code>, prepara un formulari amb tantes caixes (textbox) com el valor de <code>quantitat</code> rebut. Finalment, en <code>224sumarDades.php</code>: a partir de les dades de totes les caixes de text de la p\u00e0gina anterior, suma i mostra el total.</p> </li> <li> <p><code>225formulari.html</code> i <code>225taula.php</code>: A partir d'un nombre de <code>files</code> i <code>columnes</code>, crear una taula amb aquesta mida. Les cel\u00b7les han d'estar emplenades amb els valors de les coordenades de cada cel\u00b7la.</p> </li> <li><code>226formulari.html</code> i <code>226quadrat.php</code>: Basant-te en l'exercici anterior, omple la taula de manera que nom\u00e9s les vores tinguin contingut, quedant-se la resta de cel\u00b7les en blanc. </li> <li><code>227formulari.html</code> i <code>227equis.php</code>: Basant-te en l'exercici anterior, ara nom\u00e9s ha d'apar\u00e8ixer el contingut dels dos diagonals.</li> <li><code>228quadratMultiplicar.php</code>: Crea un programa que mostre per pantalla un quadrat exactament igual (fixa't b\u00e9 a les cap\u00e7aleres, tant de les files com de les columnes) al de la imatge amb les taules de multiplicar.</li> </ol>"},{"location":"02-basics/99-activities/#arrays","title":"Arrays","text":"<ol> <li> <p><code>230aleatoris50.php</code>: Omple un array amb 50 n\u00fameros aleatoris compresos entre el 0 i el 99, i despr\u00e9s mostra'l en una llista desordenada. Per crear un nombre aleatori, utilitzeu la funci\u00f3 <code>rand(inici, fi)</code>. Per exemple:</p> <pre><code>$num = rand(0, 99)\n</code></pre> </li> <li> <p><code>231bola8.html</code>: Prepara un formulari amb una caixa de text que fa\u00e7a una pregunta a l\\'usuari. <code>231bola8.php</code>: A partir de l'anterior, crea un programa que mostre la pregunta rebuda i genere una resposta de manera aleat\u00f2ria entre un conjunt de respostes predefinides, emmagatzemades en un array: Si, no, potser, \u00e9s clar que s\u00ed, per suposat que no, no ho tinc clar, segur, jo diria que s\u00ed, ni de conya, etc..</p> <p>Aquest exercici es basa en el joc de la Bola 8 m\u00e0gica.</p> </li> <li> <p><code>232mates.php</code>: A partir de l'exercici 230, genera un array aleatori de 33 elements amb n\u00fameros compresos entre el 0 i 100 i calcula:</p> <ul> <li>El major</li> <li>El menor</li> <li>La mitjana</li> </ul> </li> <li> <p><code>233sexos.php</code>: Omple un array de 100 elements de manera aleat\u00f2ria amb valors <code>M</code> o <code>F</code>. Un cop completat, torna a rec\u00f3rrer-lo i calcula quants elements hi ha de cadascun dels valors. Per aix\u00f2, emmagatzema el resultat en un array associatiu <code>['M' =&gt; 44, 'F' =&gt; 56]</code>.</p> <p>Finalment, mostra el resultat per pantalla</p> </li> <li> <p><code>234monedes.php</code>: Torna a fer l'exercici 206, el de les monedes (500, 200, 100, 50, 20, 10, 5, 2, 1), per\u00f2 fent \u00fas d'arrays i un bucle. Emmagatzema el resultat en un array associatiu. Mostra el resultat en una llista desordenada nom\u00e9s amb les quantitats que tenen algun valor.</p> </li> <li> <p><code>235altures.php</code>: Mitjan\u00e7ant un array associatiu, emmagatzema el nom i l'al\u00e7ada de 5 persones (<code>nom =&gt; altura</code>). Posteriorment, recorre l'array i mostra-ho en una taula HTML. Finalment afegeix una darrera fila a la taula amb l'al\u00e7ada mitjana.</p> </li> <li> <p><code>236persones.php</code>: Mitjan\u00e7ant un array bidimensional, emmagatzema el nom, al\u00e7ada i email de 5 persones. Per aix\u00f2, crea un array de persones, sent cada persona un array associatiu: <code>[ ['nom'=&gt;'Aitor', 'altura'=&gt;182, 'email'=&gt;'aitor@correo.com'],[ \u2026],\u2026 ]</code> Posteriorment, recorre l'array i mostra'l en una taula HTML.</p> </li> <li> <p><code>237llegirQuantitat.html</code> i <code>237llegirPersones.php</code>: a partir d'un formulari amb un camp de <code>quantitat</code> de persones, generar un nou formulari per llegir el nom, al\u00e7ada i email de <code>quantitat</code> persones. <code>237gestionarPersones.php</code>: A partir de les persones introdu\u00efdes, mostrar les vostres dades en una taula, i posteriorment, destacar les dades del m\u00e9s alt i la del m\u00e9s baix.</p> </li> <li> <p><code>238taulaDistints.php</code>: Omple un array bidimensional de 6 files per 9 columnes amb n\u00fameros aleatoris compresos entre 100 i 999 (tots dos inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap. Mostra a continuaci\u00f3 per pantalla el contingut de l'array de manera que:</p> <ul> <li>La columna del m\u00e0xim ha d'apar\u00e8ixer en blau.</li> <li>La fila del m\u00ednim ha d'apar\u00e8ixer en verd</li> <li>La resta de n\u00fameros han d'apar\u00e8ixer en negre.</li> </ul> </li> <li> <p><code>239Arrays.php</code>: Crea una p\u00e0gina i resol els exercicis seg\u00fcents utilitzant funcions d'arrays:</p> <ol> <li>Crea un array amb els noms de diversos alumnes de la classe incloent el teu. </li> <li>Mostra el nombre d'elements que t\u00e9 l'array (count). </li> <li>Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i  mostra-la (implode).</li> <li>Mostra l'array en un ordre aleatori diferent al que ho vas crear (shuffle). </li> <li>Mostra l'array ordenat alfab\u00e8ticament (sort). </li> <li>Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d (array_filter).</li> <li>Mostra l'array en l'ordre invers al que es va crear (rsort). </li> <li>Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array (array_search).</li> </ol> </li> <li> <p><code>240Ciutats.php</code>: Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents:</p> <ul> <li>Madrid, MAD, 3.223.334</li> <li>Sevilla, AN  , 688.711</li> <li>Murcia, MU,  447.182</li> <li>M\u00e1laga, AN,  571.026</li> <li>Zaragoza, AR, 666.880</li> <li>Val\u00e8ncia, CV,     791.413</li> <li>Barcelona, CAT, 1.620.343</li> </ul> <p>Copia <code>index.php</code> i crea un nou document <code>cituats.php</code>. Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i  habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats.</p> <p>Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic.</p> </li> <li> <p><code>241Alumnes.php</code>: Resol els exercicis seg\u00fcents utilitzant funcions d'arrays: </p> <ol> <li>Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. </li> <li>Crea una taula HTML en la qual es mostren totes les dades dels alumnes. </li> <li>Utilitza la funci\u00f3 <code>array_column</code> per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla.    </li> <li>Crea un array amb 10 n\u00fameros i utilitza la funci\u00f3 <code>array_sum</code> per a obtenir la suma dels 10 nombres. </li> <li>Sense usar bucles for calcula la mitjana d'edat de l'alumnat.     </li> </ol> </li> <li> <p><code>242CiutatsOpcional.php</code>: Modifica la soluci\u00f3 del exercici <code>ciutats.php</code> perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la  comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa.</p> <p>Per exemple: </p> Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% <p>Pista: Caldr\u00e0 modificar l'array  <code>$ciutats</code> i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. </p> <p>Dades: Municipis de Espa\u00f1a</p> </li> </ol>"},{"location":"02-basics/99-activities/#funcions","title":"Funcions","text":"<ol> <li> <p><code>250arrayParell.php</code>: Crea les funcions seg\u00fcents:</p> <ul> <li>Una funci\u00f3 que esbrina si un nombre \u00e9s parell: <code>esParell(int $num): bool</code>.</li> <li>Una funci\u00f3 que retorne un array de mida <code>$tam</code> amb n\u00fameros aleatoris compresos entre <code>$min</code> i <code>$max</code> : <code>arrayAleatori(int $tam, int $min, int $max): array</code>.</li> <li>Una funci\u00f3 que reba un <code>array</code> amb n\u00fameros aleatoris per refer\u00e8ncia i torne la quantitat de nombres parells que hi ha emmagatzemats: <code>arrayParells(array &amp;$array): int</code>.</li> </ul> </li> <li> <p><code>251parametrosVariables.php</code>: Crea les funcions seg\u00fcents:</p> <ul> <li>Una funci\u00f3 que retorne el nombre m\u00e9s gran de tots els n\u00fameros rebuts com a par\u00e0metres: function <code>major(): int</code>. Utilitza les funcions <code>func_get_args()</code>, etc... No pots fer servir la funci\u00f3 <code>max()</code>.</li> <li>Una funci\u00f3 que concatene tots els par\u00e0metres rebuts separant-los amb un espai: <code>function concatenar(...$paraules) : string</code>. Utilitza l'operador <code>.</code>.</li> </ul> </li> <li> <p><code>252matematiques.php</code>: Afegeix les funcions seg\u00fcents:</p> <ul> <li><code>digits(int $num): int</code> \u2192 retorna la quantitat de d\u00edgits d'un n\u00famero.</li> <li><code>digitN(int $num, int $pos): int</code> \u2192 torna el d\u00edgit que ocupa, comen\u00e7ant per l'esquerra, la posici\u00f3 <code>$pos</code>.</li> <li><code>llevarPerDarrere(int $num, int $quantitat): int</code> \u2192 li treu per darrere (dreta) <code>$quantitat</code> d\u00edgits.</li> <li><code>llevarPerDavant(int $num, int $quantitat): int</code> \u2192 li treu per davant (esquerra) <code>$quantitat</code> d\u00edgits.</li> </ul> </li> </ol> <p>Per provar les funcions, feu \u00fas tant de pas d'arguments posicionals com arguments amb nom.</p> <ol> <li><code>253biblioteca.php</code>: crea un fitxer amb funcions per sumar, restar, multiplicar i dividir dos n\u00fameros.</li> <li> <p><code>254arrayFunciones.php</code>: fent \u00fas d'un array que emmagatzeme el nom de les funcions del fitxer anterior, a partir de dos n\u00fameros rebuts per URL, recorre l'array i invoca les funcions de manera din\u00e0mica fent \u00fas de funcions variable.</p> </li> <li> <p><code>255funcions.php</code>: Escriu una funci\u00f3 per retornar una etiqueta HTML <code>&lt;img /&gt;</code>. </p> <p>La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text    alternatiu, al\u00e7ada i amplada.</p> </li> <li> <p><code>256funcions.php</code>: Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa.</p> <p>Per exemple, si passem <code>photo.png</code> a la funci\u00f3, i la variable global cont\u00e9 <code>/images</code>, llavors l\u2019atribut <code>src</code> de    l'etiqueta  retornada ser\u00e0 <code>/images/photo.png</code>. </p> <p>Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les   imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de <code>/images</code> a    <code>http://images.example.com/.</code></p> </li> <li> <p><code>257funciocolors.php</code>:  Els colors web com <code>#ffffff</code> i <code>#cc3399</code> es realitzen concatenant els valors hexadecimals de color per a vermell,  verd i blau. </p> <p>Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per   utilitzar-lo en una p\u00e0gina web. </p> <p>Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF.</p> <p>Pot resultar \u00fatil utilitzeu la funci\u00f3 <code>dechex()</code> integrada, que es troba documentada a http://www.php.net/</p> <p>Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids.</p> <p>Implementa 3 exemples d\u2019\u00fas.</p> </li> </ol> <p>258.<code>258funcionsSQL.php</code>: Crea una funci\u00f3 anomenada <code>insert</code>  que ens genere una sent\u00e8ncia INSERT INTO en SQL.  </p> <pre><code>Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres:  \n      1. El nom de la taula  \n      2.   Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula.\n\n  La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma:\n\n  ```\n  \u201cINSERT INTO nom_taula (nom dels camps separats per comes) \n    VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant)  \n  ```\nDe moment, no farem res amb els valors dels camps.\n\nAjuda: utilitza les funcions `sprintf`, `implode` i `array_keys`\n</code></pre> <ol> <li> <p><code>259funcionsSQL2.php</code>: A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0  per a indicar si volem generar la query amb els noms dels camps o no. </p> <p>El par\u00e0metre tindr\u00e0 el valor <code>true</code> per defecte.</p> <p>Si el seu valor \u00e9s <code>true</code> generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s <code>false</code> la generar\u00e0 aix\u00ed: </p> <pre><code>INSERT INTO nom_taula VALUES (valors dels camps separats per comes amb el car\u00e0cter \u2018:\u2019 davant)\n</code></pre> </li> <li> <p><code>260funcionsSQLReferencia.php</code>: Repeteix l'exercici anterior amb els seg\u00fcents canvis: </p> <p>La cadena resultant es passar\u00e0 per refer\u00e8ncia.</p> <p>Passarem la cadena de la seg\u00fcent forma: </p> <pre><code>  INSERT INTO taula (camps) VALUES (valors) </code></pre> <p>Dins de la funci\u00f3 substituirem el seg\u00fcent: </p> <ol> <li>El text taula pel nom de la taula. </li> <li>El text camps pels noms dels camps separats per comes</li> <li>El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant. </li> </ol> </li> </ol>"},{"location":"02-basics/99-activities/#credits","title":"Cr\u00e8dits","text":"<ul> <li>Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html</li> </ul>"},{"location":"03-phpoo/0301-phpoo-basic/","title":"POO en PHP. Conceptes b\u00e0sics","text":""},{"location":"03-phpoo/0301-phpoo-basic/#introduccio","title":"Introducci\u00f3","text":"<p>La programaci\u00f3 orientada a objectes (OOP, per les seues sigles en angl\u00e8s) \u00e9s un paradigma de programaci\u00f3.</p> <p>Paradigma:</p> <p>Teoria [\u2026] el nucli central de la qual [\u2026] suministra la base i el model per resoldre problemes i avan\u00e7ar en el coneixement.</p> <p>Per la qual cosa podem definir la programaci\u00f3 orientada a objecte com un m\u00e8tode -provat i estudiat- el qual es basa en les interaccions d'objectes per resoldre les necessitats d'un sistema inform\u00e0tic.</p> <p>Un objecte \u00e9s una estructura que cont\u00e9 dades i el codi que els maneja.</p> <p>L'estructura dels objectes es defineix en les classes. En elles s'escriu el codi que defineix el comportament dels objectes i s'indiquen els membres que formaran part dels objectes d'aquesta classe. Entre els membres de una classe pot haver-hi:</p> <ul> <li>M\u00e8todes. S\u00f3n els membres de la classe que contenen el codi de la     mateixa. Un m\u00e8tode \u00e9s com una funci\u00f3. Pot rebre par\u00e0metres i     retornar valors.</li> <li>Atributs o propietats. Emmagatzemen informaci\u00f3 sobre el estat de     l'objecte al que pertanyen (i per tant, el seu valor pot ser     diferent per a cadascun dels objectes de la mateixa classe).</li> </ul> <p>A la creaci\u00f3 d'un objecte basat en una classe se li anomena instanciar una classe i a l'objecte obtingut tamb\u00e9 se li coneix com a inst\u00e0ncia d'aqueixa classe.</p> <p>Els pilars fonamentals de la POO s\u00f3n:</p> <ul> <li>Her\u00e8ncia. \u00c9s el proc\u00e9s de crear una classe a partir de una altra,     heretant el seu comportament i caracter\u00edstiques i podent     redefinir-los.</li> <li>Abstracci\u00f3. L'objectiu principal es gestionar la complexitat ocultant detalls innecessaris a l'usuari. Aix\u00f2 li permet implementar l\u00f2gica m\u00e9s complexa sobre la base de la abstracci\u00f3 sense entendre o, incl\u00fas, sense pensar en tota la seua complexitat oculta.</li> <li>Polimorfisme. Un mateix m\u00e8tode pot tenir comportaments diferents en     funci\u00f3 de l'objecte amb que s'utilitze.</li> <li>Encapsulaci\u00f3. La idea \u00e9s mantindre en una mateix lloc (unitat de codi) les dades i el     codi que els manipula. Aquest concepte tamb\u00e9 s'utilitza sovint per ocultar la representaci\u00f3 interna, o estat, d'un objecte des de l'exterior. Aix\u00f2 s'anomena ocultaci\u00f3 d'informaci\u00f3.</li> </ul> <p>Els avantatges m\u00e9s importants que aporta la programaci\u00f3 orientada a objectes s\u00f3n:</p> <ul> <li>Modularitat. La POO permet dividir els programes en parts o     m\u00f2duls m\u00e9s xicotets, que s\u00f3n independents uns d'uns altres per\u00f2     poden comunicar-se entre ells.</li> <li>Extensibilitat. Si es desitgen afegir noves caracter\u00edstiques a     una aplicaci\u00f3, la POO facilita aquesta tasca de dues formes: afegint     nous m\u00e8todes al codi, o creant nous objectes que estenguen el     comportament dels ja existents.</li> <li>Manteniment. Els programes desenvolupats utilitzant POO s\u00f3n m\u00e9s     senzills de mantenir, a causa de la modularitat abans comentada.     Tamb\u00e9 ajuda seguir certes convencions en escriure'ls, per exemple,     escriure cada classe en un fitxer propi. No ha d'haver-hi dues     classes en un mateix fitxer, ni un altre codi a part del propi de     la classe.</li> </ul>"},{"location":"03-phpoo/0301-phpoo-basic/#caracteristiques-basiques-de-lus-dobjectes-en-php","title":"Caracter\u00edstiques b\u00e0siques de l'\u00fas d'objectes en PHP","text":"<p>Segurament tot, o la majoria del que acabes de veure, ja ho coneixies, i \u00e9s fins i tot probable que s\u00e0pigues utilitzar algun llenguatge de programaci\u00f3 orientat a objectes, aix\u00ed que anem a veure directament les peculiaritats pr\u00f2pies de PHP en el que fa refer\u00e8ncia a la POO.</p> <p>En PHP podemos utilitzar els dos paradigmes de la programaci\u00f3: estructurada i orientada a objectes.</p> <pre><code> // utilitzant programaci\u00f3 estructurada\n$dwes = mysqli_connect('localhost', 'dwes', 'abc123.', 'dwes');\n// utilizant POO\n$dwes = new mysqli();\n$dwes-&gt;connect('localhost', 'dwes', 'abc123.', 'dwes');\n</code></pre> <p>No obstant a\u00e7\u00f2, el llenguatge PHP original no es va dissenyar amb caracter\u00edstiques d'orientaci\u00f3 a objectes. Nom\u00e9s a partir de la versi\u00f3 3, es van comen\u00e7ar a introduir alguns trets de POO en el llenguatge. A\u00e7\u00f2 es va potenciar en la versi\u00f3 4, encara que encara de forma molt rudiment\u00e0ria. Per exemple, en PHP4:</p> <ul> <li>Els objectes es passen sempre per valor, no per refer\u00e8ncia.</li> <li>No es pot definir el nivell d'acc\u00e9s per als membres de la classe.     Tots s\u00f3n p\u00fablics.</li> <li>No existeixen les interf\u00edcies.</li> <li>No existeixen m\u00e8todes destructors.</li> </ul> <p>En PHP5 es va reescriure i potenciar el suport d'orientaci\u00f3 a objectes del llenguatge, ampliant les seues caracter\u00edstiques i millorant el seu rendiment i el seu funcionament general. Les caracter\u00edstiques de POO que  suporta PHP5 inclouen:</p> <ul> <li>M\u00e8todes est\u00e0tics.</li> <li>M\u00e8todes constructors i destructors.</li> <li>Her\u00e8ncia.</li> <li>Interf\u00edcies.</li> <li>Classes abstractes.</li> </ul> <p>Entre les caracter\u00edstiques que no inclou PHP5, i que pots con\u00e8ixer d'altres llenguatges de programaci\u00f3, estan:</p> <ul> <li>Her\u00e8ncia m\u00faltiple.</li> <li>Sobrec\u00e0rrega de m\u00e8todes (tenir diversos m\u00e8todes amb el mateix nom,     per\u00f2 amb funcionalitats diferents. Els m\u00e8todes sobrecarregats han de     tenir diferents par\u00e0metres. Quan es diu al m\u00e8tode, s'utilitza una o     una altra versi\u00f3 en funci\u00f3 dels par\u00e0metres amb que es realitze la     trucada (podent distingir per el seu nombre i per el seu tipus,     segons el llenguatge de programaci\u00f3 utilitzat)) (inclosos els     m\u00e8todes constructors).</li> <li>Sobrec\u00e0rrega d'operadors (similar a la sobrec\u00e0rrega de m\u00e8todes. Es     poden definir diverses funcionalitats a un mateix operador, i     s'utilitzar\u00e0 una o una altra en funci\u00f3 del tipus dels operands que     s'usen en cada instant).</li> </ul> <p>PHP 7 incorpora millores en el rendiment i el tipat d'arguments, valors de retorn i atributs (des de la versi\u00f3 7.4)</p> <p>Quant a les novetats aportades per PHP 8 cal destacar: l'operador <code>nullsafe</code>, la propagaci\u00f3 de propietats en els constructors, la uni\u00f3 de tipus que permet definir tipus m\u00faltiples.</p> <p>Objectes sempre es passen per refer\u00e8ncia</p> <p>Els objectes  que s'envien o reben com a par\u00e0metres sempre es passen per refer\u00e8ncia.</p>"},{"location":"03-phpoo/0301-phpoo-basic/#definicio-de-classes","title":"Definici\u00f3 de classes","text":"<p>La declaraci\u00f3 de una classe en PHP es fa utilitzant la paraula <code>class</code>. A continuaci\u00f3 i entre claus, han de  figurar els membres de la classe.</p> <p>Conv\u00e9 fer-ho de forma ordenada, primer les propietats o atributs, i despr\u00e9s els m\u00e8todes, cadascun amb el seu codi respectiu.</p> <pre><code>class Product {\nprivate string $code;\npublic string $name;\npublic float $price;\npublic function getSummaryLine(): string {\nreturn $this-&gt;name;\n}\n}\n</code></pre> <p>En UML la classe anterior es representaria aix\u00ed:</p> classDiagram   class Product {     -string code     +string name     +float price     +string getSummaryLine()   }   <p>Com coment\u00e0vem abans, \u00e9s preferible que cada classe figure en el seu propi fitxer (<code>Product.php</code>). A m\u00e9s, molts programadors prefereixen utilitzar per a les classes noms que comencen per lletra maj\u00fascula, per a, d'aquesta forma, distingir-los dels objectes i altres variables.</p> <p>Una vegada definida la classe, podem usar la paraula <code>new</code> per a instanciar objectes de la seg\u00fcent forma:</p> <pre><code>$product = new Product();\n</code></pre> <p>Perqu\u00e8 la l\u00ednia anterior s'execute sense error, pr\u00e8viament hem d'haver declarat la classe. Per a a\u00e7\u00f2, en aqueix mateix fitxer haur\u00e0s de incloure la classe posant alguna cosa com:</p> <pre><code>require('Product.php');\n</code></pre> <p>Els atributs de una classe s\u00f3n similars a les variables de PHP. \u00c9s possible indicar un valor en la declaraci\u00f3 de la classe. En aquest cas, tots els objectes que s'instancien a partir de aqueixa classe, partiran amb aqueix valor per defecte en l'atribut.</p> <p>Per a accedir des d'un objecte als seus atributs o als m\u00e8todes de la classe, has d'utilitzar l'operador fletxa (fixa't que nom\u00e9s es posa el s\u00edmbol $ davant del nom de l'objecte):</p> <pre><code>$product-&gt;name = 'Samsung Galaxy S';\necho $product-&gt;getSummaryLine(); \n</code></pre>"},{"location":"03-phpoo/0301-phpoo-basic/#visibilitat","title":"Visibilitat","text":"<p>Quan es declara una propietat o un m\u00e8tode, s'ha d'indicar el seu nivell d'acc\u00e9s (o visibilitat). Els principals nivells s\u00f3n:</p> <ul> <li><code>public</code>. Els atributs declarats com <code>public</code> poden utilitzar-se     directament per els objectes de la classe. \u00c9s el cas de l'atribut     <code>$name</code> anterior.</li> <li><code>private</code>. Els atributs declarats com <code>private</code> nom\u00e9s poden ser     accedits i modificats per els m\u00e8todes definits en la classe, no     directament per els objectes de la mateixa. \u00c9s el cas de l'atribut     <code>$code</code>.</li> <li><code>protected</code>. Una propietat o m\u00e8tode <code>protected</code> sols pot ser accedida per la classe on es defineix o per un subclasse. No \u00e9s accessible des de fora.</li> </ul> <p>Un dels motius per a crear atributs privats \u00e9s que el seu valor forma part de la informaci\u00f3 interna de l'objecte i no ha de formar part de la seua interf\u00edcie (els punts de comunicaci\u00f3 amb altres objectes). Un altre motiu \u00e9s mantenir cert control sobre els seus possibles valors. Per exemple, si no vols que es puga canviar lliurement el valor del codi d'un producte. O necessites con\u00e8ixer quin ser\u00e0 el nou valor abans d'assignar-lo. En aquests casos, se solen definir aqueixos atributs com a privats i a m\u00e9s es creen dins de la classe m\u00e8todes per a permetre'ns obtenir i/o modificar els valors d'aqueixos atributs. Per exemple:</p> <pre><code>private string $code;\npublic function setCode(string $newCode): boolean {\nif (!existsCode($newCode)) {\n$this-&gt;code = $newCode;\nreturn true;\n}\nreturn false;\n}\npublic function getCode(): string { return $this-&gt;code; }\n</code></pre> <p>Encara que no \u00e9s obligatori, el nom del m\u00e8tode que ens permet obtenir el valor de un atribut sol comen\u00e7ar per <code>get</code>, i el que ens permet modificar-lo per <code>set</code>. Aquest m\u00e8todes solen anomenar-se <code>getters</code> i <code>setters</code> o <code>accessors</code>.</p>"},{"location":"03-phpoo/0301-phpoo-basic/#constructor","title":"Constructor","text":"<p>Com ja has vist, per a instanciar objectes d'una classe s'utilitza la paraula <code>new</code>:</p> <pre><code>$product = new Product();\n</code></pre> <p>En PHP7 pots definir en les classes m\u00e8todes constructors, que s'executen quan es crea l'objecte.</p> <p>El constructor d'una classe ha d'anomenar-se <code>__construct</code>. Es poden utilitzar, per exemple,  per assignar valors a atributs.</p> <pre><code>class Product {\nprivate string $code;\npublic string $name;\npublic function __construct()\n{\n$this-&gt;code = \"\";\n}\n\u2026\n}\n</code></pre> <p>El constructor d'una classe pot cridar a altres m\u00e8todes o tenir par\u00e0metres, en aquest cas hauran de passar-se quan es crea l'objecte. No obstant a\u00e7\u00f2, nom\u00e9s pot haver-hi un m\u00e8tode constructor en cada classe.</p> <pre><code>class Product {\nprivate string $code;\npublic string $name;\npublic function __construct(string $code) {\n$this-&gt;$code = $code;\n}\n...\n}\n$product = new Product('GALAXYS');\n</code></pre> <p>Si com en aquest exemple, definim un constructor en el qual cal passar el codi, sempre que instancies un nou objecte d'aqueixa classe haur\u00e0s d'indicar el seu codi.</p> <p>En PHP8 podem definir les propietats de la seg\u00fcent manera:</p> <p><pre><code>class Product {    \npublic string $name;\npublic function __construct(private string $code) {        \n}\n...\n}\n</code></pre> D'aquest forma ens estalviem diverses l\u00ednies de codi.</p>"},{"location":"03-phpoo/0301-phpoo-basic/#la-pseuodovariable-this","title":"La pseuodovariable <code>$this</code>","text":"<p>Quan des d'un objecte s'invoca un m\u00e8tode de la classe, a aquest se li passa sempre una refer\u00e8ncia a l'objecte que ha fet la crida. Aquesta refer\u00e8ncia s'emmagatzema en la pseudovariable <code>$this.</code> S'utilitza, per exemple, en el codi anterior per a tenir acc\u00e9s als atributs privats de l'objecte (que nom\u00e9s s\u00f3n accessibles des dels m\u00e8todes de la classe).</p> <pre><code>echo \"&lt;p&gt;\" . $this-&gt;code . \"&lt;/p&gt;\";\n</code></pre>"},{"location":"03-phpoo/0301-phpoo-basic/#constants-de-classe","title":"Constants de classe","text":"<p>A m\u00e9s de m\u00e8todes i propietats, en una classe tamb\u00e9 es poden definir constants,  utilitzant la paraula <code>const</code>. \u00c9s important que no confongues els atributs amb les constants. S\u00f3n conceptes diferents: les constants no poden canviar el seu  valor (\u00f2bviament, d'ah\u00ed el seu nom), no usen el car\u00e0cter <code>$</code>, s'escriuen en  maj\u00fascules (per convenci\u00f3) i el seu valor est\u00e0 associat a la classe, \u00e9s a dir,  no existeix una c\u00f2pia del mateix en cada objecte. </p> <p>Per tant, per a accedir a les constants d'una classe, s'ha d'utilitzar el  nom de la classe i l'operador <code>::</code>, anomenat operador de resoluci\u00f3 d'\u00e0mbit  (que s'utilitza per a accedir a els elements de una classe).</p> <pre><code>class DB {\nconst USUARIO = 'dwes';\n...\n}\necho DB::USUARIO;\n</code></pre> <p>\u00c9s important ressaltar que no \u00e9s necessari que existisca cap objecte de una classe per a poder accedir al valor de les constants que definisca.</p> <p>PHP-FIG</p> <p>El PHP Framework Interop Group \u00e9s un grup de treball on est\u00e0 involucrada gent que treballa en diferents frameworks amb l'objectiu de posar en com\u00fa les t\u00e8cniques que usen en els diferents projectes per poder integrar-les i compartir-les  i poder treballar millor junts.</p> <p>Les recomanacions PSR-1 i PSR-12  s\u00f3n recomanacions sobre l'estil de programaci\u00f3 amb l'objectiu d'aplicar estandards comuns i  aix\u00ed facilitar la lectura del codi realitzar per altres.</p> <p>Algunes recomancions que cal seguir:</p> <ol> <li>Les classes s'han de declarar en <code>StudlyCaps</code>. Per exemple: <code>Product</code>.</li> <li>Les constants de classes s'HAN DE declarar en maj\u00fascules i separats amb gui\u00f3 baix. Per exemple: <code>const IMAGE_PATH</code>.      </li> <li>Sobre els noms de les propietats la \u00fanica recomanaci\u00f3 \u00e9s ser consistent. Aix\u00ed, PODEM usar <code>$camelCase</code>. La mateixa recomanaci\u00f3 aplicarem a les variables.</li> <li>Els m\u00e8todes S'HAN DE declarar en <code>camelCase()</code>.</li> </ol> <p>M\u00e9s informaci\u00f3 en Est\u00e1ndares</p>"},{"location":"03-phpoo/0301-phpoo-basic/#utilitzacio-dobjectes","title":"Utilitzaci\u00f3 d'objectes","text":"<p>Ja saps com instanciar un objecte utilitzant <code>new</code>, i com accedir a els seus m\u00e8todes i atributs p\u00fablics amb l'operador fletxa:</p> <pre><code>$product = new Product();\n$product-&gt;name= 'Samsung Galaxy S';\necho $product-&gt;getSummaryLine();\n</code></pre> <p>Una vegada creat un objecte, pots utilitzar l'operador <code>instanceof</code> per a comprovar si \u00e9s o no una inst\u00e0ncia de una classe determinada.</p> <pre><code>if ($product instanceof Product) {\n\u2026\n}\n</code></pre> <p>Des de PHP7, pots indicar en les funcions i m\u00e8todes de quina classe han de ser els objectes que es passen com a par\u00e0metres. Per a a\u00e7\u00f2, has d'especificar el tipus abans del par\u00e0metre.</p> <pre><code>public function sellProduct(Product $product) {\n\u2026\n}\n</code></pre> <p>Si quan es realitza la crida, el par\u00e0metre no \u00e9s del tipus adequat, es produeix un error que podries capturar. </p> <p>Una caracter\u00edstica de la POO que has de tenir molt en compte \u00e9s qu\u00e8 succeeix amb els objectes quan els passes a una funci\u00f3, o simplement quan executes un codi com el seg\u00fcent:</p> <pre><code>$product1 = new Product();\n$product1-&gt;name = 'Samsung Galaxy S';\n$product2 = $product1;\n</code></pre> <p>El codi anterior simplement crearia un nou identificador del mateix objecte. A\u00e7\u00f2 \u00e9s, quan s'utilitze qualsevol dels identificadors per a canviar el valor de algun atribut, aquest canvi es  veuria tamb\u00e9 reflectit en accedir utilitzant l'altre identificador. Recorda que, encara que hi haja dos o m\u00e9s identificadors del mateix objecte, en realitat tots es refereixen a l'\u00fanica c\u00f2pia que s'emmagatzema  del mateix.</p>"},{"location":"03-phpoo/0301-phpoo-basic/#comparacio-dobjectes","title":"Comparaci\u00f3 d'Objectes","text":"<p>En utilitzar l'operador de comparaci\u00f3 (<code>==</code>), es comparen d'una manera senzilla les variables de cada objecte, \u00e9s a dir: dues inst\u00e0ncies d'un objecte s\u00f3n iguals si tenen els mateixos atributs i valors (els valors es comparen amb <code>==</code>), i s\u00f3n inst\u00e0ncies de la mateixa classe.</p> <p>Quan s'utilitza l'operador identitat (<code>===</code>), les variables d'un objecte s\u00f3n id\u00e8ntiques si i nom\u00e9s s\u00ed fan refer\u00e8ncia a la mateixa inst\u00e0ncia de la mateixa classe.</p>"},{"location":"03-phpoo/0301-phpoo-basic/#herencia","title":"Her\u00e8ncia","text":"<p>L'her\u00e8ncia \u00e9s un mecanisme de la POO que ens permet definir noves classes sobre la base d'una altra ja existent. Les noves classes que hereten tamb\u00e9 es coneixen amb el nom de subclasses. La classe de la qual hereten es diu classe base o superclasse.</p> <p>Per exemple, en la nostra tenda web anem a tenir productes de diferents tipus. En principi hem creat per a manejar-los una classe anomenada <code>Product</code>, amb alguns atributs i un m\u00e8tode que genera una eixida personalitzada en format HTML del codi.</p> <pre><code>class Product {\npublic string $code;\npublic string $name;    \n...       \npublic function show() {\necho \"&lt;p&gt;\" . $this-&gt;code . \"&lt;/p&gt;\";\n}\n}\n</code></pre> <p>Aquesta classe \u00e9s molt \u00fatil si l'\u00fanica informaci\u00f3 que tenim dels diferents productes \u00e9s la que es mostra dalt. Per\u00f2, si vols personalitzar la informaci\u00f3 que vas a tractar de cada tipus de producte (i emmagatzemar, per exemple per als televisors, les polzades que tenen o la seua tecnologia de fabricaci\u00f3), pots crear noves classes que hereten de <code>Product</code>. Per exemple, <code>TV</code>, <code>Computer</code>, <code>Phone</code>.</p> <pre><code>class TV extends Product {\npublic float $size;\npublic string $technology;\n}\n</code></pre>"},{"location":"03-phpoo/0301-phpoo-basic/#la-paraula-reservada-extends","title":"La paraula reservada <code>extends</code>","text":"<p>Com pots veure, per a definir una classe que herete d'una altra, simplement has de utilitzar la paraula <code>extends</code> indicant la superclasse. </p> <p>Els nous objectes que s'instancien a partir de la subclasse  s\u00f3n tamb\u00e9 objectes de la classe base; es pot comprovar utilitzant l'operador <code>instanceof</code>.</p> <pre><code>$tv = new TV();\nif ($tv instanceof Product) {\n// Aquest codi s'executa doncs la condici\u00f3 \u00e9s certa\n\u2026\n}\n</code></pre> <p>La nova classe hereta tots els atributs i m\u00e8todes p\u00fablics de la classe base, per\u00f2 no els privats. Si vols crear en la classe base un m\u00e8tode no visible a l'exterior (com els privats) que s'herete a les subclasses, has d'utilitzar la paraula protected en lloc de private. A m\u00e9s, pots redefinir el comportament dels m\u00e8todes existents en la classe base, simplement creant en la subclasse un nou m\u00e8tode amb el mateix nom.</p> <pre><code>class TV extends Producte { \npublic float $size;\npublic string $technology;\npublic function show() {\nprint \"&lt;p&gt;\" . $this-&gt;size . \" polzades&lt;/p&gt;\";\n}\n}\n</code></pre>"},{"location":"03-phpoo/0301-phpoo-basic/#bibliografia","title":"Bibliografia","text":"<ul> <li>Jos\u00e9 Luis Comesa\u00f1a.\u00a0 Apuntes de formaci\u00f3n a distancia del m\u00f3dulo     \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y     licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en     l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019].     Disponible en     &lt;https://github.com/statickidz/TemarioDAW/tree/master/DWES&gt;</li> <li>Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de     2016).</li> <li>Janssen, Thorben. \u00abOOP Concept for Beginners: What Is Encapsulation\u00bb. Stackify, 7 gener 2022, https://stackify.com/oop-concept-for-beginners-what-is-encapsulation/ [data de consulta: 11 de setembre de 2022].  </li> <li>Janssen, Thorben. \u00abOOP Concept for Beginners: What Is Abstraction?\u00bb Stackify, 23 novembre 2017, https://stackify.com/oop-concept-abstraction/ [data de consulta: 11 de setembre de 2022].</li> </ul>"},{"location":"03-phpoo/0302-phpoo-advanced/","title":"PPO en PHP. Conceptes avan\u00e7ants","text":""},{"location":"03-phpoo/0302-phpoo-advanced/#metodes-i-propietats-estatiques","title":"M\u00e8todes i propietats est\u00e0tiques","text":"<p>Els m\u00e8todes i propietats est\u00e0tics (o de classe) s\u00f3n aquells accessibles directament des de la classe, sense necessitat d'inst\u00e0nciar-la.</p> <p>Es declaren amb la paraula reservada <code>static</code> i s'accedeix a ells amb l'operador d'\u00e0mbit <code>::</code>.</p> <p>Si volem accedir a un m\u00e8tode est\u00e0tic, es posa davant el nom de la classe:</p> <pre><code>Product::newProduct().\n</code></pre> <p>Si des d'un m\u00e8tode volem accedir a una propietat est\u00e0tica de la mateixa classe, s'utilitza la referencia <code>self</code>: <code>self::$numberOfProducts</code></p> <pre><code>class Product {\nconst IVA = 0.23;\nprivate static $numberOfProducts = 0; \npublic static function newProducts() {\nself::$numberOfProducts++;\n}\n}\nProduct::newProducts();\n$tax = Product::IVA;\n</code></pre> <p>Tamb\u00e9 podem tindre classes normals que tinguen alguna propietat est\u00e0tica:</p> <pre><code>class Product {\nconst IVA = 0.23;\nprivate static int $numberOfProducts = 0; \nprivate string $code;\npublic function __construct(string $code) {\nself::$numOfProducts++;\n$this-&gt;code = $code;\n}\npublic function getSummaryLine() : string {\nreturn \"El producte \".$this-&gt;code.\" \u00e9s el n\u00famero \".self::$numOfProducts;\n}\n}\n$prod1 = new Product(\"PS5\");\n$prod2 = new Product(\"XBOX Series X\");\n$prod3 = new Product(\"Nintendo Switch\");\necho $prod3-&gt;getSummaryLine();\n</code></pre>"},{"location":"03-phpoo/0302-phpoo-advanced/#classes-abstractes","title":"Classes abstractes","text":"<p>Les classes abstractes s\u00f3n classes que no es poden instanciar, per la qual cosa actuaran de superclasse i ser\u00e0 obligatori crear subclasses per a fer \u00fas d'ella. \u00c9s a dir, una classe amb el modificador <code>abstract</code> no pot tenir objectes que la instancien, per\u00f2 s\u00ed podr\u00e0 utilitzar-se de classe base i les seues subclasses s\u00ed podran utilitzar-se per a instanciar objectes.</p> <pre><code>abstract class Product {\n...\n}\n</code></pre>"},{"location":"03-phpoo/0302-phpoo-advanced/#metodes-abstractes","title":"M\u00e8todes abstractes","text":"<p>Un m\u00e8tode en el qual s'indique <code>abstract</code>, ha de ser redefinit obligat\u00f2riament per les subclasses, i no podr\u00e0 contenir codi.</p> <pre><code>class Product {\n\u2026\nabstract public function show();\n}\n</code></pre> <p>Anem a fer una petita modificaci\u00f3 en la nostra classe <code>Product</code>. Per a facilitar la creaci\u00f3 de nous objectes, crearem un constructor al que se li passar\u00e0 un array amb els valors dels atributs del nou producte.</p> <pre><code>class Product {\npublic $code;\npublic $name;\npublic $shortName;\npublic $price;\npublic function show(): void {\necho \"&lt;p&gt;\" . $this-&gt;code . \"&lt;/p&gt;\";\n}\npublic function __construct($row) {\n$this-&gt;code = $row['code'];\n$this-&gt;name = $row['name'];\n$this-&gt;shortName = $row['short_name'];\n$this-&gt;price = $row['price'];\n}\n}\n</code></pre> <p>Questi\u00f3</p> <p>Qu\u00e8 passa ara amb la classe <code>TV</code>, qu\u00e8 hereta de <code>Product</code>? Quan crees un nou objecte d'aqueixa classe, es cridar\u00e0 al constructor de Product? Pots crear un nou constructor espec\u00edfic perqu\u00e8 redefinisca el comportament de la classe base?</p> <p>Comen\u00e7ant per aquesta \u00faltima pregunta, \u00f2bviament pots definir un nou constructor per a les classes heretades que redefinisquen el comportament del que existeix en la classe base, tal com faries amb qualsevol altre m\u00e8tode. I depenent de si programes o no el constructor en la classe heretada, es cridar\u00e0 o no autom\u00e0ticament al constructor de la classe base.</p> <p>En PHP5+, si la classe heretada no t\u00e9 constructor propi, es cridar\u00e0 autom\u00e0ticament al constructor de la classe base (si existeix). No obstant a\u00e7\u00f2, si la classe heretada defineix el seu propi constructor, haur\u00e0s de ser tu el que realitze la crida al constructor de la classe base si ho consideres necessari, utilitzant per a a\u00e7\u00f2 la paraula <code>parent</code> i l'operador de resoluci\u00f3 d'\u00e0mbit.</p> <pre><code>class TV extends Product {\npublic $size;\npublic $technology;\npublic function show() {\nprint \"&lt;p&gt;\" . $this-&gt;size . \" polzades&lt;/p&gt;\";\n}\npublic function __construct($row) {\nparent::__construct($row);\n$this-&gt;size = $row['size'];\n$this-&gt;technology = $row['technology'];\n}\n}\n</code></pre> <p>Ja has vist amb amb anterioritat com s'utilitzava la paraula clau <code>self</code> per a tenir acc\u00e9s a la classe actual. La paraula <code>parent</code> \u00e9s semblant. En utilitzar <code>parent</code> fas refer\u00e8ncia a la classe base de la actual, tal com apareix rere <code>extends</code>.</p>"},{"location":"03-phpoo/0302-phpoo-advanced/#interficies","title":"Interf\u00edcies","text":"<p>Un interf\u00edcie (interface) \u00e9s com una classe buida que solament cont\u00e9 declaracions de m\u00e8todes.  Es defineixen utilitzant la paraula <code>interface</code>. Per exemple, abans vam veure que pod\u00edem crear noves classes heretades de <code>Product</code>, com <code>TV</code> o <code>Ordinador</code>. Tamb\u00e9 vam veure que en les subclasses podies redefinir el comportament del m\u00e8tode perqu\u00e8 generara una eixida en HTML diferent per a cada tipus de producte.</p> <p>Si vols assegurar-te que tots els tipus de productes tinguen un m\u00e8tode <code>show</code>, pots crear un interface com el seg\u00fcent.</p> <pre><code>interface IShow {\npublic function show(): Void;\n}\n</code></pre> <p>I quan crees les subclasses haur\u00e0s d'indicar amb la paraula <code>implements</code> que han de implementar els m\u00e8todes declarats en aquest interface.</p> <pre><code>class TV extends Product implements IShow {\n\u2026\npublic function show() {\necho \"&lt;p&gt;\" . $this-&gt;size . \" polzades&lt;/p&gt;\";\n}\n\u2026\n}\n</code></pre> <p>Tots els m\u00e8todes que es declaren en un <code>interface</code> han de ser p\u00fablics. A m\u00e9s de m\u00e8todes, els interf\u00edcies podran contenir constants per\u00f2 no atributs.</p> <p>Un interface \u00e9s com un contracte que la classe ha de complir. En implementar tots els m\u00e8todes declarats en la interf\u00edcie s'assegura la interoperabilitat entre classes. Si saps que una classe implementa un interf\u00edcie determinada saps quins noms tenen els seus m\u00e8todes, quins par\u00e0metres els has de passar i, probablement, podr\u00e0s esbrinar f\u00e0cilment amb quins objectiu han sigut escrits.</p> <p>Per exemple, en la llibreria de PHP est\u00e0 definit la interf\u00edcie <code>countable</code>.</p> <pre><code>Countable {\nabstract public int count(void)\n}\n</code></pre> <p>Si crees una classe per a la cistella de la compra en la tenda web, podries implementar aquesta interf\u00edcie per a contar els productes que figuren en la mateixa.</p> <p>Abans vas aprendre que en PHP5 una classe nom\u00e9s pot heretar d'una altra. En PHP5 no existeix l'her\u00e8ncia m\u00faltiple. No obstant a\u00e7\u00f2, s\u00ed \u00e9s possible crear classes que implementen diverses interf\u00edcies, simplement separant la llista d'interf\u00edcies per comes despr\u00e9s de la paraula <code>implements</code>.</p> <pre><code>class TV extends Product implements IShow, Countable {\n\u2026\n}\n</code></pre> <p>L'\u00fanica restricci\u00f3 \u00e9s que els noms dels m\u00e8todes que s'hagen d'implementar en els diferents interf\u00edcies no coincidisquen. \u00c9s a dir, en el nostre exemple, la interf\u00edcie <code>IShow</code> no podria contenir el m\u00e8tode <code>count</code>, doncs aquest ja est\u00e0 declarat en <code>Countable</code>.</p> <p>Des de PHP7 tamb\u00e9 es poden crear nous interf\u00edcies heretant d'uns altres ja existents. Es fa de la mateixa forma que amb les classes, utilitzant la paraula <code>extends</code>.</p>"},{"location":"03-phpoo/0302-phpoo-advanced/#classes-abstractes-vs-interficies","title":"Classes abstractes vs interf\u00edcies","text":"<p>Un dels dubtes m\u00e9s comuns en POO, \u00e9s quina soluci\u00f3 adoptar en algunes situacions: interf\u00edcies o classes abstractes. Ambdues permeten definir regles per a les classes que els implementen o hereten respectivament. I cap permet instanciar objectes. Les difer\u00e8ncies principals entre ambdues opcions s\u00f3n:</p> <ul> <li>En les classes abstractes, els m\u00e8todes poden contenir codi. Si van a     existir diverses subclasses amb un comportament com\u00fa, es podria     programar en els m\u00e8todes de la classe abstracta. Si s'opta per un     interface, caldria repetir el codi en totes les classes que ho     implemente.</li> <li>Les classes abstractes poden contenir atributs, i les interf\u00edcies     no.</li> <li>No es pot crear una classe que herete de dues classes abstractes,     per\u00f2 s\u00ed es pot crear una classe que implemente diverses interf\u00edcies.</li> </ul> <p>Per exemple, en la botiga online va a haver-hi dos tipus d'usuaris: clients i empleats. Si necessites crear en la teua aplicaci\u00f3 objectes de tipus Usuari (per exemple, per a manejar de forma conjunta als clients i als empleats), hauries de crear una classe no abstracta amb aqueix nom, de la qual heretarien Client i Empleat.</p> <p>Podeu llegir tamb\u00e9 l'article  Clases abastractas e interfaces en PHP </p> <pre><code>class Usuari {\n...\n}\nclass Client extends Usuari {\n...\n}\nclass Empleat extends Usuari {\n...\n}\n</code></pre> <p>Per\u00f2 si no f\u00f3ra aix\u00ed, hauries de decidir si crees o no <code>Usuari</code>, i si ho faries com una classe abstracta o com una interf\u00edcie.</p> <p>Si per exemple, volgueres definir en un \u00fanic lloc els atributs comuns a Client i a Empleat, hauries de crear una classe abstracta Usuari de la qual hereten.</p> <pre><code>abstract class Usuari {\npublic string $dni;\nprotected string $nom;\n...\n}\n</code></pre> <p>Per\u00f2 a\u00e7\u00f2 no podries fer-ho si ja tens planificada alguna relaci\u00f3 d'her\u00e8ncia per a una d'aquestes dues classes.</p> <p>Per a finalitzar amb les interf\u00edcies, a la llista de funcions de PHP relacionades amb la POO pots afegir les seg\u00fcents.</p> Funci\u00f3 Exemple Significat get_declared_interf\u00edcies print_r (get_declared_interf\u00edcies()); Retorna un array amb els noms dels interf\u00edcies declarats. interface_exists if (interface_exists('iShow') Retorna true si existeix l'interface que s'indica, o false en cas contrari."},{"location":"03-phpoo/0302-phpoo-advanced/#trets-traits","title":"Trets (Traits)","text":"<p>Des de la seva versi\u00f3 5.4.0, PHP implementa una metodologia de reutilitzaci\u00f3 de codi anomenada <code>Traits</code>.</p> <p>Els trets (\u00abtraits\u00bb en angl\u00e8s) s\u00f3n un mecanisme de reutilitzaci\u00f3 de codi en llenguatges d'her\u00e8ncia simple, com PHP. L'objectiu d'un tret \u00e9s el de reduir les limitacions pr\u00f2pies de l'her\u00e8ncia simple permetent que els desenvolupadors reutilitzen a voluntat conjunts de m\u00e8todes sobre diverses classes independents i pertanyents a classes jer\u00e0rquiques diferents. </p> <p>Un Trait \u00e9s similar a una classe, per\u00f2 amb l'\u00fanic objectiu d'agrupar funcionalitats molt espec\u00edfiques i d'una manera coherent. No es pot instanciar directament un <code>Trait</code>. \u00c9s per tant un afegit a l'her\u00e8ncia tradicional, i habilita la composici\u00f3 horitzontal de comportaments; \u00e9s a dir, permet combinar membres de classes sense haver d'usar her\u00e8ncia.</p> <pre><code>trait Saludar {\nfunction decirHola(){\nreturn \"hola\";\n}\n}\ntrait Despedir {\nfunction decirAdios(){\nreturn \"adi\u00f3s\";\n}\n}\nclass Comunicacion {\nuse Saludar, Despedir;\n}\n$comunicacion = new Comunicacion;\necho $comunicacion-&gt;decirHola() . \", que tal. \" . $comunicacion-&gt;decirAdios();\n</code></pre> <p>En l'exemple anterior la classe <code>Comunicacion</code> necessita reutilitzar els m\u00e8todes <code>Saludar::decirHola()</code> i  <code>Despedir::decirAdios()</code> com que en PHP no hi ha her\u00e8ncia m\u00faltiple mitjan\u00e7ant els <code>trait</code> es pot aconseguir  reutilitzar-les.</p>"},{"location":"03-phpoo/0302-phpoo-advanced/#clonacio-dobjectes","title":"Clonaci\u00f3 d'Objectes","text":"<p>Per crear una c\u00f2pia d'un objecte s'utilitza la paraula clau <code>clone</code> (que invoca, si fos possible, al m\u00e8tode  <code>__clone()</code> de l'objecte). No es pot cridar el m\u00e8tode <code>__clone()</code> d'un objecte directament.</p> <pre><code>$copia_objecte = clone $objecte;\n</code></pre> <p>Quan es clona un objecte, PHP7 dur\u00e0 a terme una c\u00f2pia superficial de les propietats de l'objecte. Les propietats que siguen refer\u00e8ncies a altres variables (per exemple, objectes), mantindran les refer\u00e8ncies.</p> <p>Compte: si els atributs s\u00f3n objectes no es clonaran.</p>"},{"location":"03-phpoo/0302-phpoo-advanced/#classes-i-metodes-finals","title":"Classes i m\u00e8todes finals","text":"<p>Existeix una forma d'evitar que les classes heretades puguen redefinir el comportament dels m\u00e8todes existents en la superclasse: utilitzar la paraula <code>final</code>.</p> <p>Si en el nostre exemple hagu\u00e9rem fet:</p> <pre><code>class Product { \npublic string $code; \npublic string $name;         \npublic float $price;\npublic final function show() {\nprint \"&lt;p&gt;\" . $this-&gt;code . \"&lt;/p&gt;\";\n}\n}\n</code></pre> <p>En aquest cas el m\u00e8tode <code>show</code> no podria redefinir-se en la classe <code>TV</code>.</p> <p>Tamb\u00e9 es pot declarar una classe utilitzant <code>final</code>. En aquest cas no podran crear-se classes heretades utilitzant-les com a base.</p> <pre><code>final class Product {\n...\n}\n</code></pre>"},{"location":"03-phpoo/0302-phpoo-advanced/#metodes-magics","title":"M\u00e8todes m\u00e0gics","text":"<p>Totes les classes PHP ofereixen un conjunt de m\u00e8todes, tamb\u00e9 coneguts com a m\u00e8todes m\u00e0gics que es poden sobreescriure per substituir el seu comportament. Alguns d\u2019ells ja els han utilitzat.</p> <p>Davant de qualsevol dubte, \u00e9s convenient consultar la documentaci\u00f3 oficial.</p> <p>Els m\u00e9s destacables s\u00f3n:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct ()</code> \u2192 S'invoca en perdre la refer\u00e8ncia. S'utilitza per tancar una connexi\u00f3 amb una base de dades, tancar un fitxer, etc.</li> <li><code>__toString ()</code> \u2192 representaci\u00f3 de l'objecte com a cadena</li> <li><code>__get(propietat)</code>, <code>__set(propietat, valor)</code> \u2192 permetria l'acc\u00e9s a la propietat privada, tot i que sempre \u00e9s m\u00e9s llegible/mantenible codificar el getter/setter.</li> <li><code>__isset(propietat)</code>, <code>__unset (propietat)</code> \u2192 us permet esbrinar o eliminar el valor d'una propietat.</li> <li><code>__sleep()</code>, <code>__wakeup ()</code> \u2192 S'executen quan es recuperen (Unserialize) o emmagatzemen un objecte serialitzat (serialitze), i s'utilitzen per definir quines propietats estan serialitzades.</li> <li><code>__call ()</code>, <code>__callstatic ()</code> \u2192 s'executen cridant a un m\u00e8tode que no siga p\u00fablic. Permeten m\u00e8todes de sobrec\u00e0rrega.</li> </ul>"},{"location":"03-phpoo/0302-phpoo-advanced/#espai-de-noms","title":"Espai de noms","text":"<p>Des de PHP 5.3 permeten organitzar classes/interf\u00edcies, funcions o constant de manera similar als paquets java.</p> <p>Recomanaci\u00f3</p> <p>Crea un espai de nom \u00fanic per fitxer i creeu una estructura de directoris respecte als nivells/subnivells (com es fa a java)</p> <p>Es declara a la primera l\u00ednia per la paraula clau <code>namespace</code> seguit del nom de l'espai de nom assignat (cada subnivell est\u00e0 separat amb la barra invertida <code>\\</code>):</p> <p>Per exemple, per col\u00b7locar la classe <code>Product</code> dins de l'espai de noms <code>Dwes\\Examples</code> far\u00edem:</p> <pre><code>&lt;?php\nnamespace Dwes\\Examples;\nconst IVA = 0.21;\nclass Product {\npublic string $name;\npublic function show(): void {\necho \"&lt;p&gt; prod:\". $ this-&gt; name . \"&lt;/p&gt;\";\n}\n}\n</code></pre>"},{"location":"03-phpoo/0302-phpoo-advanced/#acces","title":"Acc\u00e9s","text":"<p>Per fer refer\u00e8ncia a un recurs que cont\u00e9 un espai de noms, primer cal tenir -lo disponible mitjan\u00e7ant <code>include</code> o <code>require</code>. Si el recurs es troba al mateix espai de noms, es fa un acc\u00e9s directe (es coneix com a acc\u00e9s sense qualificar).</p> <p>Hi ha realment tres tipus d\u2019acc\u00e9s:</p> <ul> <li>Sense qualificar: <code>recurs</code></li> <li>Qualificat: <code>\\rutaRelativa\\recurs</code>. No cal posar l'espai de noms complet.</li> <li>Totalment qualificat: <code>\\rutaAbsoluta\\recurs</code></li> </ul> <pre><code>&lt;?php\nnamespace Dwes\\Examples;\ninclude_once(\"Product.php\");\necho IVA; // sin cualificar\necho Utils\\IVA; // acceso cualificado. Dar\u00eda error, no existe \\Dwes\\Exemples\\Utilitats\\IVA\necho \\Dwes\\Exemples\\IVA; // totalmente cualificado\n$p1 = new Product(); // lo busca en el mismo namespace y encuentra \\Dwes\\Ejemplos\\Producto\n$p2 = new Model\\Product(); // dar\u00eda error, no existe el namespace Model. Est\u00e1 buscando \\Dwes\\Ejemplos\\Model\\Producto\n$p3 = new \\Dwes\\Examples\\Product(); // \\Dwes\\Ejemplos\\Producto\n</code></pre> <p>Per a evitar la refer\u00e8ncia qualificada podem declarar l'\u00fas mitjan\u00e7ant <code>use</code> (similar a fer un <code>import</code> en Java). Es faria  en la cap\u00e7alera, despr\u00e9s del <code>namespace</code>:</p> <p>Els tipus possibles s\u00f3n:</p> <ul> <li><code>use const nomQualificatConstant</code></li> <li><code>use function nomQualificatFuncio</code></li> <li><code>use nomQualificatClasse</code></li> <li><code>use nomQualificatClase as Alias</code> // per a canviar de nom elements</li> </ul> <p>Per exemple, si volem utilitzar la classe <code>\\Dwes\\Examples\\Product</code> des d'un recurs que es trobe en l'arrel, per exemple en <code>index.php</code>, far\u00edem:</p> <pre><code>&lt;?php\ninclude_once(\"Dwes\\Examples\\Product.php\");\nuse const Dwes\\Exemples\\IVA;\nuse \\Dwes\\Exemples\\Product;\necho IVA;\n$p1 = new Product();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resum, <code>use</code> permit acceder sense haver de qualificar-los a recursos que es troben en un altre namespace. Si estem en el mateix espai de noms, no necesitem usar <code>use</code>.</p>"},{"location":"03-phpoo/0302-phpoo-advanced/#organitzacio","title":"Organitzaci\u00f3","text":"<p>Cada projecte, a mesura que creix, ha d\u2019organitzar el seu codi font. Es planteja una organitzaci\u00f3 en qu\u00e8 els fitxers que interaccionen amb el navegador es col\u00b7loquen a l\u2019arrel i les classes que definim entra dins d\u2019un <code>namespace</code>.</p> <p>Organitzaci\u00f3, includes i uses</p> <ul> <li>Posarem cada recurs en un fitxer independent.</li> <li>A la primera l\u00ednia indicarem el seu namespace (si no est\u00e0 a l'arrel).</li> <li>Si utilitzem altres recursos, farem un <code>include_once</code> d'aquests recursos (classes, interf\u00edcies, etc ...).<ul> <li>Cada recurs ha d\u2019incloure tots els altres recursos a qu\u00e8 fa\u00e7a refer\u00e8ncia: la classe dels quals hereta, interf\u00edcies que implementen, les classes utilitzades/rebudes com a par\u00e0metres, etc.</li> </ul> </li> <li>Si els recursos es troben en un espai de noms diferents dels que som, utilitzarem <code>use</code> amb la ruta completa i, a continuaci\u00f3, l'utilitzarem sense refer\u00e8ncies qualificades.</li> </ul>"},{"location":"03-phpoo/0302-phpoo-advanced/#autoload","title":"Autoload","text":"<p>No \u00e9s tedi\u00f3s haver de fer els <code>require</code> de les classes? La funcionalitat autoload arriba al rescat.</p> <p>Aix\u00ed, aquesta funcionalitat permet que les classes  que s\u2019utilitzaran es carreguen autom\u00e0ticament i eviten haver de fer el <code>include_once</code> de cadascuna d'elles. Per fer-ho s'utilitza la funci\u00f3 <code>spl_autoload_register</code></p> <pre><code>&lt;?php\nspl_autoload_register( function( $nombreClase ) {\ninclude_once $nombreClase.'.php';\n} );\n?&gt;\n</code></pre> <p>\u00bfPer qu\u00e8 s'anomena autoload?</p> <p>Perqu\u00e8 abans es realitzaba mitjan\u00e7ant el m\u00e8tode m\u00e0gic <code>__autoload()</code>, el qual est\u00e0 deprecated des de PHP 7.2</p> <p>I com organitzem ara el codi per aprofitar-nos de la c\u00e0rrega autom\u00e0tica?</p> <p>Per facilitar la cerca dels recursos per incloure, \u00e9s recomanable posar totes les classes de la mateixa carpeta. Les  situarem dins de <code>src</code> (no \u00e9s obligatori, \u00e9s la convenci\u00f3 que seguirem). Altres directoris que podem crear s\u00f3n <code>test</code> per fer les proves phpunit que despr\u00e9s realitzarem, o la carpeta del views on s\u2019emmagatzemaran les vistes del projecte.</p> <p>Com que hem col\u00b7locat tots els nostres recursos dins de <code>src</code>, ara el nostre <code>autoload.php</code> (que col\u00b7loquem al directori arrel) nom\u00e9s mirar\u00e0 dins d\u2019aquest directori:</p> <pre><code>&lt;?php\nspl_autoload_register( function( $className ) {\ninclude_once \"src/\".$className.'.php';\n} );\n?&gt;\n</code></pre> <p>Autoload i rutes err\u00f2nies</p> <p>A Ubuntu, quan fa la classe que rep com a par\u00e0metre, les barres de l\u2019espai de noms (<code>\\</code>) s\u00f3n diferents de les de les rutes (<code>/</code>).Per tant, utilitzem millor aquesta implementaci\u00f3 del fitxer <code>autoload.php</code>:</p> <pre><code>&lt;?php\nspl_&lt;?php\nspl_autoload_register(function($className) {\n$ruta = \"src\\\\\".$className.'.php';\n$ruta = str_replace(\"\\\\\", \"/\", $ruta); // Sustituimos las barras\ninclude_once $ruta;\n}\n);\n</code></pre>"},{"location":"03-phpoo/0302-phpoo-advanced/#bibliografia","title":"Bibliografia","text":"<ul> <li>Jos\u00e9 Luis Comesa\u00f1a.\u00a0 Apuntes de formaci\u00f3n a distancia del m\u00f3dulo     \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y     licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en     l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019].     Disponible en     \\&lt;https://github.com/statickidz/TemarioDAW/tree/master/DWES&gt;</li> <li>Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de     2016).</li> <li>Medrano, Aitor, i Luis Alema\u00f1. \u00ab3.- PHP Orientado a Objetos - Desarrollo Web en Entorno Servidor\u00bb. Desarrollo Web en Entorno Servidor, https://aitor-medrano.github.io/dwes2122/03phpoo.html. Consulta 15 octubre 2022.</li> </ul>"},{"location":"03-phpoo/0303-errorhandling/","title":"Gesti\u00f3 d'errors i excepcions","text":"<p>De ben segur que a mesura que has anat resolent exercicis o simplement provant codi, t'has trobat amb errors de programaci\u00f3. Alguns s\u00f3n reconeguts per l'entorn de desenvolupament i pots corregir-los abans d'executar. Altres apareixen al navegador en forma de missatge d'error a l'executar l'script.</p> <p>A difer\u00e8ncia d'altres llenguatges de programaci\u00f3 que tenen una gesti\u00f3 d'excepcions m\u00e9s completa PHP mant\u00e9 una gesti\u00f3 d'excepcions lleugera ja que distingeix entre errors i excepcions.  Aix\u00ed, mentre no es produisca una excepci\u00f3 o un error fatal l'execuci\u00f3 del programa continuar\u00e0.</p> <p>No obstant aix\u00f2, en PHP 7 canvia la majoria dels errors notificats per PHP. En lloc de notificar errors a trav\u00e9s  de l'mecanisme de notificaci\u00f3 d'errors tradicional de PHP 5, la majoria dels errors ara s\u00f3n  notificats llan\u00e7ant excepcions <code>Error</code>.</p> <p>A l'igual que les excepcions normals, les excepcions <code>Error</code> es propagaran fins a arribar al primer bloc <code>catch</code> coincident. Si no hi ha blocs coincidents, ser\u00e0 invocat qualsevol  gestor d'excepcions predeterminat definit amb <code>set_exception_handler ()</code>, i si no hi hagu\u00e9s  cap gestor d'excepcions predeterminat, l'excepci\u00f3 ser\u00e0 convertida en un error fatal i ser\u00e0 gestionada  com un error tradicional.</p> <p>A causa de que la jerarquia d'<code>Error</code> no hereta de <code>Exception</code>, el codi que empre blocs <code>catch  (Exception $e) {...}</code> per gestionar excepcions no capturades en PHP 5 trobareu que  aquests <code>Errors</code> no s\u00f3n capturats per aquests blocs. Es requereix, per tant, un bloc  <code>catch (Error $e) {...}</code> o un gestor <code>set_exception_handler()</code>.</p>"},{"location":"03-phpoo/0303-errorhandling/#errors","title":"Errors","text":"<p>PHP defineix una classificaci\u00f3 dels errors que es poden produir en l'execuci\u00f3 d'un programa i ofereix m\u00e8todes per ajustar el tractament dels mateixos. Per fer refer\u00e8ncia a cada un dels nivells d'error, PHP defineix una s\u00e8rie de constants. Cada nivell s'identifica per una constant. Per exemple, la constant <code>E_NOTICE</code> fa refer\u00e8ncia a avisos que poden indicar un error en executar el programa, i la constant <code>E_ERROR</code> engloba errors fatals que provoquen que s'interrompa for\u00e7osament l'execuci\u00f3.</p> <p>La llista completa de constants la pots consultar al manual de PHP, on tamb\u00e9 es descriu el tipus d'errors que representa : http://es.php.net/manual/es/errorfunc.constants.php</p>"},{"location":"03-phpoo/0303-errorhandling/#canviar-el-comportament-de-php","title":"Canviar el comportament de PHP","text":"<p>La configuraci\u00f3 inicial de com va a tractar-se cada error segons el seu nivell es realitza en <code>php.ini</code> el fitxer de configuraci\u00f3 de PHP. Entre els principals par\u00e0metres que pots ajustar estan:</p> <ul> <li><code>error_reporting</code>. Indica quins tipus d'errors es notificaran. El     seu valor es forma utilitzant els operadors a nivell de bit per     combinar les constants anteriors. El seu valor per defecte \u00e9s <code>E_ALL     &amp; ~ E_NOTICE</code> que indica que es notifiquin tots els errors (<code>E_ALL</code>)     excepte els avisos a temps d'execuci\u00f3 (<code>E_NOTICE</code>).</li> <li><code>display_errors</code>. En el seu valor per defecte (<code>On</code>), fa que els     missatges s'envien a la sortida est\u00e0ndard (i per tant es mostrin al     navegador). S'ha de desactivar (<code>Off</code>) en els servidors que s'usen per      a producci\u00f3.</li> </ul> <p>Hi ha altres par\u00e0metres que podem utilitzar en <code>php.ini</code> per ajustar el comportament de PHP quan es produeix un error. http://es.php.net/manual/es/errorfunc.configuration.php</p> <p>Des codi, pots fer servir la funci\u00f3 <code>error_reporting</code> amb les constants anteriors per establir el nivell de notificaci\u00f3 en un moment determinat. Per exemple, si en algun lloc del teu codi figura una divisi\u00f3 en la qual hi haja la possibilitat que el divisor siga zero, quan aix\u00f2 passe obtindr\u00e0s un missatge d'error al navegador. Per evitar-ho, pots desactivar la notificaci\u00f3 de errors de nivell <code>E_WARNING</code> abans de la divisi\u00f3 i restaurar al seu valor normal a continuaci\u00f3:</p> <pre><code>error_reporting(E_ALL &amp; ~ E_NOTICE &amp; ~ E_WARNING);\n$resultat = $dividend/$divisor;\nerror_reporting (E_ALL &amp; ~ E_NOTICE);\n</code></pre>"},{"location":"03-phpoo/0303-errorhandling/#notificacio-derror-en-entorns-de-produccio","title":"Notificaci\u00f3 d'error en entorns de producci\u00f3","text":"<pre><code>; PHP comes packaged with two INI files. One that is recommended to be used\n; in production environments and one that is recommended to be used in\n; development environments.\n; php.ini-production contains settings which hold security, performance and\n; best practices at its core. But please be aware, these settings may break\n; compatibility with older or less security conscience applications. We\n; recommending using the production ini in production and testing environments.\n; display_errors\n;   Default Value: On\n;   Development Value: On\n;   Production Value: Off\n; display_startup_errors\n;   Default Value: Off\n;   Development Value: On\n;   Production Value: Off\n; error_reporting\n;   Default Value: E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_DEPRECATED\n;   Development Value: E_ALL\n;   Production Value: E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT\n; html_errors\n;   Default Value: On\n;   Development Value: On\n;   Production value: On\n; log_errors\n;   Default Value: Off\n;   Development Value: On\n;   Production Value: On\n</code></pre>"},{"location":"03-phpoo/0303-errorhandling/#gestio-global-dels-errors","title":"Gesti\u00f3 global dels errors","text":"<p>En utilitzar la funci\u00f3 <code>error_reporting</code> nom\u00e9s controles quin tipus d'errors va a notificar PHP. A vegades pot ser suficient, per\u00f2 per obtenir m\u00e9s control sobre el proc\u00e9s existeix tamb\u00e9 la possibilitat de gestionar de forma personalitzada els errors. \u00c9s a dir, pots programar una funci\u00f3 perqu\u00e8 siga la que executa PHP cada vegada que es produeix un error. El nom d'aquesta funci\u00f3 s'indica utilitzant <code>set_error_handler</code> i ha de tenir com a m\u00ednim dos par\u00e0metres obligatoris (el nivell de l'error i el missatge descriptiu) i fins tres opcionals amb informaci\u00f3 addicional  sobre el error (el nom del fitxer en qu\u00e8 es produeix, el nombre de l\u00ednia,  i un bolcat de l'estat de les variables en aquest moment).</p> <pre><code>set_error_handler (\"miGestorDeErrores\");\n$resultat = $dividend / $divisor;\nrestore_error_handler ();\nfunction miGestorDeErrores ($nivell, $missatge)\n{\nswitch ($nivell) {\ncase E_WARNING:\necho \"Error de tipus WARNING: $missatge. &lt;br /&gt;\";\nbreak;\ndefault:\necho \"Error de tipus no especificat: $ missatge. &lt;br /&gt;\";\n}\n}\n</code></pre> <p>La funci\u00f3 <code>restore_error_handler</code> restaura el gestor d'errors original de PHP (m\u00e9s concretament, el que s'estava fent servir abans de la crida a <code>set_error_handler</code>).</p>"},{"location":"03-phpoo/0303-errorhandling/#errorexception","title":"ErrorException","text":"<p>Gr\u00e0cies a la combinaci\u00f3 de la classe <code>ErrorException</code> i el m\u00e8tode <code>set_error_handler</code>  podem convertir f\u00e0cilment els errors en excepcions de tipus <code>ErrorException</code>:</p> <pre><code>&lt;?php\nfunction exception_error_handler($severidad, $mensaje, $fichero, $l\u00ednea) {\nif (!(error_reporting() &amp; $severidad)) {\n// Este c\u00f3digo de error no est\u00e1 incluido en error_reporting\nreturn;\n}\nthrow new ErrorException($mensaje, 0, $severidad, $fichero, $l\u00ednea);\n}\nset_error_handler(\"exception_error_handler\");\n/* Desencadenar la excepci\u00f3n */\nstrpos();\n?&gt;\n</code></pre>"},{"location":"03-phpoo/0303-errorhandling/#excepcions","title":"Excepcions","text":"<p>A partir de la versi\u00f3 5 es va introduir en PHP un model d'excepcions similar a l'existent en altres llenguatges de programaci\u00f3:</p> <ul> <li>El codi susceptible de produir algun error s'introdueix en un bloc     <code>try</code>.</li> <li>Quan es produeix algun error, es llan\u00e7a una excepci\u00f3 utilitzant la     instrucci\u00f3 <code>throw</code>.</li> <li>Despr\u00e9s del bloc <code>try</code> ha d'haver com a m\u00ednim un bloc <code>catch</code>     encarregat de processar el error.</li> <li>Si un cop acabat el bloc <code>try</code> no s'ha llan\u00e7at cap excepci\u00f3, es     continua amb la execuci\u00f3 en la l\u00ednia seg\u00fcent al bloc o blocs     <code>catch</code>.</li> </ul> <p>Per exemple, per llan\u00e7ar una excepci\u00f3 quan es produeix una divisi\u00f3 per zero podries fer:</p> <pre><code>try {\nif ($divisor == 0)\nthrow new Exception ( \"Divisi\u00f3 per zero.\");\n$resultat = $dividend/$divisor;\n}\ncatch (Exception $e) {\necho \"S'ha produ\u00eft el seg\u00fcent error:\". $ e-&gt; getMessage ();\n}\n</code></pre> <p>PHP ofereix una classe base <code>Exception</code> per utilitzar com a gestor d'excepcions. Per llan\u00e7ar una excepci\u00f3 no cal indicar cap par\u00e0metre, encara que de forma opcional es pot passar un missatge d'error (com en l'exemple anterior) i tamb\u00e9 un codi d'error.</p> <p>Entre els m\u00e8todes que podeu utilitzar amb els objectes de la classe <code>Exception</code> estan:</p> <ul> <li><code>getMessage</code>. Retorna el missatge, en cas que s'hagi posat algun.</li> <li><code>getCode</code>. Retorna el codi d'error si existeix.</li> </ul> <p>Les funcions internes de PHP i moltes extensions com MySQLi usen el sistema d'errors vist anteriorment. Nom\u00e9s les extensions m\u00e9s modernes orientades a objectes, com \u00e9s el cas de PDO, utilitzen aquest model d'excepcions. En aquest cas, el m\u00e9s com\u00fa \u00e9s que l'extensi\u00f3 definisca els seues propis controladors d'errors heretant de la classe <code>Exception</code>.</p> <p>Classe ErrorException</p> <p>Com hem dit abans, utilitzant la classe <code>ErrorException</code> \u00e9s possible traduir els errors a excepcions.http://es.php.net/manual/es/class.errorexception.php</p> <p>Concretament, la classe PDO permet definir la f\u00f3rmula que far\u00e0 servir quan es produeixi un error, utilitzant l'atribut <code>PDO::ATTR_ERRMODE</code>. Les possibilitats s\u00f3n:</p> <ul> <li><code>PDO::ERRMODE_SILENT</code>. No es fa res quan ocorre un error. \u00c9s el     comportament per defecte.</li> <li><code>PDO::ERRMODE_WARNING</code>. Genera un error de tipus E_WARNING quan es     produeix un error.</li> <li><code>PDO::ERRMODE_EXCEPTION</code>. Quan es produeix un error llan\u00e7a una     excepci\u00f3 utilitzant el gestor propi PDOException.</li> </ul> <p>\u00c9s a dir, que si vols utilitzar excepcions amb l'extensi\u00f3 PDO, has de configurar la connexi\u00f3 fent:</p> <pre><code>$dwes-&gt; setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n</code></pre> <p>Per exemple, el seg\u00fcent codi: <pre><code>$dwes = new PDO(\"mysql:host=localhost;dbname=dwes\", \"dwes\", \"abc123.\");\n$dwes-&gt; setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\ntry {\n$sql = \"SELECT * FROM stox\";\n$result = $dwes-&gt;query ($sql);\n...\n}\ncatch (PDOException $p) {\necho \"Error\". $p-&gt; getMessage (). \"&lt;br /&gt;\";\n}\n</code></pre></p> <p>Captura l'excepci\u00f3 que llan\u00e7a PDO a causa de que la taula no existeix. El bloc <code>catch</code> mostra el seg\u00fcent missatge:</p> <pre><code>Error SQLSTATE [42S02]: Base table or view not found: 1146 Table 'dwes.stox' does not exist\n</code></pre>"},{"location":"03-phpoo/0303-errorhandling/#el-bloc-finally","title":"El bloc <code>finally</code>","text":"<p>En PHP 5.5 i posterior, es pot utilitzar un bloc <code>finally</code> despr\u00e9s o en lloc dels blocs <code>catch</code>. El codi de dins el bloc <code>finally</code> sempre s'executar\u00e0 despr\u00e9s dels blocs <code>try</code> i <code>catch</code>, independentment que s'haja llan\u00e7at una excepci\u00f3 o no, i abans que l'execuci\u00f3 normal continue.</p> <p>Com que el contingut del bloc <code>finally</code> sempre s'executa \u00e9s ideal per a alliberar recursos en cas d'error, com una connexi\u00f3 a base de dades o a la connexi\u00f3 a un servei proporcionats per tercers.<code></code></p>"},{"location":"03-phpoo/0303-errorhandling/#multiples-catch","title":"M\u00faltiples catch","text":"<p>\u00c9s possible afegir m\u00e9s d'un <code>cath</code> de la seg\u00fcent manera:</p> <pre><code>try {\n...\n} catch (FooException e) {\n...\n} catch (BarException e) {\n...\n} catch (Exception e) {\n...   \n}\n</code></pre> <p>A partir de PHP 7.1 tamb\u00e9 \u00e9s possible fer-ho aix\u00ed:</p> <pre><code>try {\n...\n} catch (FooException | BarException | Exception e) {\n...\n}\n</code></pre>"},{"location":"03-phpoo/0303-errorhandling/#ampliant-les-excepcions","title":"Ampliant les excepcions","text":"<p>\u00c9s possible crear excepcions personalitzades heretant de la classe <code>Exception</code>.</p> <pre><code>class NegativeIdException extends Exception {\npublic function __construct($message = null) {\n$this-&gt;message = $message ?: 'ID Negatiu.';\nparent::__construct($message);\n}\n}\n</code></pre> <p>Despr\u00e9s l'utilitzarem aix\u00ed:</p> <pre><code>try {\n$post = new Post(-1, \"Hola m\u00f3n\", \"Aquest \u00e9s el primer post del blog\", new DateTime(), \"Vicent\");\n} catch (NegativeIdException $e) {\necho \"No es pot posar un ID negatiu\";\n} catch (Exception $e) {\necho \"Excepci\u00f3 desconeguda\".  $e-&gt;getMessage();\n}\n</code></pre> <p>Les excepcions personalitzades ens permeten una gesti\u00f3 m\u00e9s senzilla dels errors i major flexibilitat a l'hora de gestionar les possibles situacions d'errors.</p>"},{"location":"03-phpoo/0303-errorhandling/#interficie-throwable","title":"Interf\u00edcie Throwable","text":"<p>Throwable \u00e9s la interf\u00edcie base per a qualsevol objecte que puga ser llan\u00e7at  mitjan\u00e7ant una sent\u00e8ncia <code>throw</code> en PHP 7, incloent <code>Error</code> i <code>Exception</code>.</p> <p>Les classes de PHP no poden implementar la interf\u00edcie <code>Throwable</code> directament,  de manera que han d'estendre en el seu lloc <code>Exception</code>.</p> <p>Aquesta nova interf\u00edcie t\u00e9 per objectiu unificar les dos tipologies d'exceptions. Tant <code>Exception</code> com  <code>Error</code> implementen la interf\u00edcie <code>Throwable</code>. </p>"},{"location":"03-phpoo/0303-errorhandling/#bibliografia","title":"Bibliografia","text":"<ul> <li>Jos\u00e9 Luis Comesa\u00f1a.\u00a0 Apuntes de formaci\u00f3n a distancia del m\u00f3dulo     \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y     licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en     l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019].     Disponible en     \\&lt;https://github.com/statickidz/TemarioDAW/tree/master/DWES&gt;</li> <li>Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de     2016) .</li> </ul>"},{"location":"03-phpoo/0399-activities/","title":"Activitats","text":""},{"location":"03-phpoo/0399-activities/#poo-basic","title":"POO B\u00e0sic","text":"<ol> <li> <p>Crea una classe <code>Employee</code> que represente un empleat amb el seu nom, cognoms i sou. Encapsula les  propietats mitjan\u00e7ant m\u00e8todes getters/setters i afegeix els seg\u00fcents m\u00e8todes:</p> <ol> <li>Obtenir el nom complet: <code>getFullname(): string</code>.</li> <li>Que torne un boole\u00e0 indicant si deu o no pagar impostos (es paguen quan el sou \u00e9s superior a 3333\u20ac): <code>mustPayTaxes():bool</code>.</li> </ol> </li> <li> <p>Afegeix una propietat privada que que emmagatzeme una s\u00e8rie de n\u00fameros de tel\u00e8fons. Afegiu els seg\u00fcents m\u00e8todes:</p> <ol> <li><code>public function addPhone(string $phone): void</code> \u2192 Afegeix un tel\u00e8fon a l'array</li> <li><code>public function listPhones(): string</code> \u2192 Torna els tel\u00e8fons en separats per comes</li> <li><code>public function emptyPhones(): void</code> \u2192 Elimina tots els tel\u00e8fons</li> </ol> </li> <li> <p>Crea el constructor amb els par\u00e0metres nom i cognoms. Si el constructor rep un tercer par\u00e0metre, ser\u00e0 el sou. Si no, s\u2019assignaran 1000\u20ac com a sou inicial. Fes una versi\u00f3 fent \u00fas de la propagaci\u00f3 de propietats de PHP8.</p> </li> <li> <p>Afegeix una constant <code>MAX_SALARY</code> amb el valor del sou que ha de pagar impostos, i modifica el codi per utilitzar la constant.</p> </li> <li> <p>Completa el seg\u00fcent m\u00e8tode amb una cadena HTML que mostre les dades d'un empleat dins d'un par\u00e0graf i tots els tel\u00e8fons mitjan\u00e7ant una llista ordenada (haur\u00e0s de crear un getter per als tel\u00e8fons):</p> <p><code>public static function toHtml (Employee $emp): string</code></p> </li> <li> <p>Representa la classe en UML.</p> </li> <li> <p>Crea una classe anomenada <code>Card</code> que contindr\u00e0 la informaci\u00f3      relativa una carta de la baralla francesa amb les seguents propietats:</p> <ul> <li><code>suit</code>, string, privada.</li> <li><code>symbol</code>, string, privada.</li> <li><code>value</code>, entera, privada.</li> </ul> <p>El constructor i el seus getters i setters.</p> <p>Crea cinc objects diferents en un array i mostra'ls de forma aleat\u00f2ria. </p> classDiagram class Card {     -string suit     -string symbol     -int value     +void function __construct (string, string, int) }   </li> <li> <p>Crea una classe anomenada <code>CardCollection</code> que contindr\u00e0 la propietat      <code>cards</code> que ser\u00e0 un array de cartes (objectes <code>Card</code>).</p> <p>Hi haur\u00e0 dues formes d'inserir cartes, mitjan\u00e7ant el m\u00e8tode <code>CardCollection::add(array $array)</code> que rebr\u00e0 un array de cartes i els afegir\u00e0 a la propietat <code>cards</code> i el m\u00e8tode <code>CardCollecion::addCard(Card $card)</code> que rebr\u00e0 una carta i la inserir\u00e0 en la propietat <code>cards</code>.</p> <p>A m\u00e9s, contindr\u00e0 el m\u00e8tode <code>shuffle()</code> que ordenar\u00e0 les cartes de forma aleat\u00f2ria.</p> <p>Inst\u00e0ncia la classe, afig 5 cartes, reordena-les i mostra-les.</p> classDiagram class CardCollection {      -cards: array      +add(cards: array)      +addCard(card: Card): void      shuffle()      getCards() array } class Card {     -suit: string     -symbol: string     -value: int     __construct (suit: string, symbol: string, value: int) }  CardCollection \"1\"--\"*\" Card  </li> <li> <p>Crea el m\u00e8todo <code>writer</code> en la classe <code>CardCollection</code> de forma que mostre en format lliure la col\u00b7leci\u00f3 de cartes. Amb aquest m\u00e8tode afegirem una nova capa d'abstracci\u00f3 ja que no caldr\u00e0 accedir directament als m\u00e8todes de la classe <code>Card</code> per representar-les.  </p> </li> <li> <p>Implementa la interf\u00edcie <code>Iterator</code> en <code>CardCollection</code> de forma que es puguen rec\u00f3rrer la col\u00b7lecci\u00f3 de cartes en un <code>foreach</code>;</p> </li> <li> <p>Fent \u00fas de les classes anteriors crearem una aplicaci\u00f3 b\u00e0sica en la que s'enfronten dos jugadors. Un exemple de partida podria ser el seg\u00fcent:</p> <p></p> <p>La classe <code>CardCollection</code> quedar\u00e0 aix\u00ed:</p> classDiagram class CardCollection {      -cards: array      add(cards: array)      addCard(card: Card) void      ...      deal(amount: int) array      play() Card }   <p>Els requisits seran els seg\u00fcents:</p> <ul> <li>Es repartiran 5 cartes per jugador.</li> <li>El m\u00e8tode <code>deal</code> que repartir\u00e0 el n\u00famero de cartes que s'indique com a par\u00e0metre eliminant-les de la col\u00b7lecci\u00f3.</li> <li>El m\u00e8tode <code>play</code> jugar\u00e0 una carta que s'eliminar\u00e0 de la col\u00b7lecci\u00f3.</li> <li>Cada tirada la guanya el jugador que t\u00e9 la carta m\u00e9s alta, segons el valor.</li> <li>La partida la guanya el jugador que ha guanyat m\u00e9s vegades.</li> <li>En cas d'empat es repartir\u00e0 una nova carta a cada jugador.</li> </ul> <p>Aix\u00ed que en la aplicaci\u00f3 interactuaran 3 objectes de tipus <code>CardCollection</code>.</p> </li> <li> <p><code>abastract_game</code>: en l'activitat anterior vam crear tres objectes de tipus <code>CardCollection</code>.  Podem observar que alguns m\u00e8todes, com per exemple <code>deal</code> (repartir) tenen sentit en l'objecte quan representen la m\u00e0 d'un jugador.</p> <p>Podem replantejar la soluci\u00f3 de la seg\u00fcent manera:</p>  classDiagram      direction LR      class CardCollection {                 &lt;&lt; abstract &gt;&gt;           #cards: array           +add(cards: Card[])           +addCard(card: Card) void           getCards() Card[]      }       class Card {          -suit: string          -symbol: string          -value: int          __construct (suit: string, symbol: string, value: int)       }        class Deck {                               shuffle()           deal(amount: int = 1) Card[]      }       class Hand {                               play() Card      }       CardCollection \"1\"--\"*\" Card      Deck --|&gt; CardCollection      Hand --|&gt; CardCollection          <p>En el diagrama anterior definim <code>CardCollection</code> com una classe abstracta, d'ella hereten dos classes <code>Deck</code> que representa la baralla i <code>Hand</code> que representa les cartes d'un jugador. Cada classe exten la funcionalitat afegint els seus propis m\u00e8todes.</p> <p>Recorda que una classe abstracta \u00e9s un tipus de classe que no s'inst\u00e0ncia i sols poden ser heretades traslladant aix\u00ed un funcionamient obligatori a les classes filles (o subclasses). </p> <p>Modifica la soluci\u00f3 a l'activitat anterior amb la nova jerarquia de classes.</p> </li> </ol>"},{"location":"03-phpoo/0399-activities/#errors-i-excepcions","title":"Errors i excepcions","text":"<ol> <li><code>320-error-handling</code>: modifica l'activitat 303, <code>Empleat.php</code> de forma en cas que el sou siga negatiu llance una excepci\u00f3 amb el missage \"El sou no pot ser negatiu\". Captura l'excepci\u00f3 i mostra el missatge.</li> <li><code>321-error-handling</code>: modifica l'activitat anterior llan\u00e7ant en esta ocasi\u00f3 una excepci\u00f3 personalitzada <code>InvalidWageException</code> amb el missatge per defecte \"El sou no pot ser negatiu\". Captura l'exceptic\u00f3 i mostra el missatge.</li> </ol>"},{"location":"03-phpoo/0399-activities/#projecte-truiter","title":"Projecte: Truiter","text":"<p>En les seg\u00fcents activitats anem a posar en marxa el que ser\u00e0 el nostre projecte. Cal tenir en compte que es tracta d'un projecte de caracter did\u00e0ctic, aix\u00ed que algunes coses poden no ser del tot correctes des del punt de vista de la qualitat del codi.</p> <p>Per al projecte disposarem de la seg\u00fcent estructura de directoris:</p> <pre><code>.\n\u251c\u2500\u2500 index.php\n\u251c\u2500\u2500 src                \n\u2514\u2500\u2500 views\n</code></pre> <p><code>src</code> contindr\u00e0 les classes i <code>views</code> les vistes.</p> <ol> <li>Crea una classe per representar usuaris (<code>User</code>). Aquesta classe contindr\u00e0 les propietats necess\u00e0ries per a emmagatzemar un usuari de l'aplicaci\u00f3. El constructor rebr\u00e0 com a par\u00e0metres el nom i el nom d'usuari. En el cos del constructor assigna a la data de creaci\u00f3 la data actual.</li> </ol> Codi de prova <pre><code>&lt;?php\n// index.php\n$user = new User('Bart Simpson', 'bart');\n?&gt;\n&lt;p&gt;&lt;?= $user-&gt;getName() ?&gt; (@&lt;?= $user-&gt;getUsername() ?&gt;) - Creation\n     date: &lt;?= $user-&gt;getCreatedAt()-&gt;format('d-m-Y h:i:s') ?&gt;&lt;/p&gt;\n</code></pre> Navegador <p><pre>\n Bart Simpson (@bart) - Creation date: 11-10-2022 10:24:27\n </pre></p> <ol> <li>Crea una classe per representar tweets (<code>Tweet</code>). Aquesta classe contindr\u00e0 les propietats necess\u00e0ries per a emmagatzemar un tweet. Crea els setters i els getters. El constructor rebr\u00e0 com a par\u00e0metres el text i l'autor. En el cos del constructor assigna a la data de creaci\u00f3 la data actual i al n\u00famero de likes 0.</li> </ol> classDiagram      direction LR      class Tweet {           -text: string           -createdAt: DateTime           -attachments: array           -author: User           -likeCount: int           __construct(text: string, user: User)      }      class User {           createdAt: DateTime           name: string           verified: bool           username: string           __construct(user: string, username: string)      }        Tweet \"1\"--\"1\" User  Codi de prova <pre><code>&lt;?\n$user = new User('Bart Simpson', 'bart');\n// fem un delay de 4 segons perqu\u00e8 les dates de creaci\u00f3 no coincidisquen\nsleep(4);\n$tweet = new Tweet('Hola m\u00f3n!', $user);\n?&gt;\n&lt;h2&gt;Users&lt;/h2&gt;\n&lt;p&gt;&lt;?= $user-&gt;getName() ?&gt; (@&lt;?= $user-&gt;getUsername() ?&gt;) - Creation\ndate: &lt;?= $user-&gt;getCreatedAt()-&gt;format('d-m-Y h:i:s') ?&gt;&lt;/p&gt;\n&lt;h2&gt;Tweets&lt;/h2&gt;\n&lt;?php $tweetUser = $tweet-&gt;getAuthor() ?&gt;\n&lt;p&gt;&lt;?= $tweetUser-&gt;getName() ?&gt; (@&lt;?= $tweetUser-&gt;getUsername() ?&gt;) - Creation\ndate: &lt;?= $tweet-&gt;getCreatedAt()-&gt;format('d-m-Y h:i:s') ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?=$tweet-&gt;getText() ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?=$tweet-&gt;getLikeCount() ?&gt;&lt;/p&gt;\n&lt;hr /&gt;\n</code></pre> Navegador <pre>\n<p>Users\n Bart Simpson (@bart) - Creation date: 12-10-2022 10:42:51</p>\n<p>Tweets\n Bart Simpson (@bart) - Creation date: 12-10-2022 10:42:55\n Hola m\u00f3n!\n Like counter: 0</p>\n</pre> <ol> <li>Crea la seg\u00fcent jerarquia de classes que represent els diferents tipus de mitj\u00e0 que poden adjuntar a un tuit:</li> </ol> classDiagram      direction BT      class Media {            &lt;&lt; abstract &gt;&gt;           __construct(caption, width, height)            -caption: string           -width: int                     -height: int           getHeight() int           getWidth() int           getSummary()* string           setHeight(height)            getCaption() string           setCaption(caption)            setWidth(width)       }      class Photo {           __construct(caption, width, height, altText)            -altText :string           getSummary() string           getAltText()            setAltText(altText)       }      class Video {           __construct(caption, width, height, duration)            -duration: int           setDuration(duration)            getSummary() string           getDuration() int      }       Photo  --&gt;  Media       Video  --&gt;  Media   Codi de prova <pre><code>&lt;?php\n// index.php\n...\n$video = new Video('V\u00eddeo 1', 1080, 1024, 25);\n$photo = new Photo('Foto 1', 800, 600, 'Text alternatiu');\n?&gt;\n&lt;h2&gt;Media&lt;/h2&gt;\n...\n&lt;?= $video-&gt;getSummary();?&gt;\n&lt;?= $photo-&gt;getSummary();?&gt;\n</code></pre> Navegador <p>Media</p> <p>V\u00eddeo 1 [1080x1024] (25 s)</p> <p>Foto 1 (Text alternatiu) [800x600] </p> <ol> <li>Arribats a aquest punt anem a relacionar totes les classes que hem creat mitjan\u00e7ant la classe <code>Twitter</code>. Crea la classe      representada en el gr\u00e0fic tenint en compte que <code>users</code> \u00e9s un array d'usuaris, <code>tweets</code> \u00e9s un array de tuits i <code>attachements</code>      un array de mitjans. S'han omitit algunes propietats i m\u00e8todes per simplicar el diagrama UML.</li> </ol>  classDiagram      direction LR      class Twitter {           - tweets: array           - users: array           - numberOfTweets: int           - numberOfUsers: int           + __construct()                      + likeTweet(user, tweet) void           + addTweet(tweet) void           + setTweets(tweets) void           + getNumberOfUsers() int           + setNumberOfUsers(numberOfUsers) void           + getTweets() array           + addUser(user) void           + setNumberOfTweets(numberOfTweets) void           + setUsers(users) void           + getNumberOfTweets() int           + getUsers() array      }      class User {       }        class Tweet {           - attachments: array           + getAttachments() array           + addAttachment(media) void                }       class Media {                  &lt;&lt; abstract &gt;&gt;      }      class Photo {      }       class Video {      }       Twitter \"0\" -- \"*\" Tweet      Tweet \"0\" -- \"*\" Media      Twitter \"0\" -- \"*\" User       Photo  --&gt;  Media       Video  --&gt;  Media    Codi de prova <pre><code>&lt;?php\n$twitter = new Twitter();\n$user = new User('Bart Simpson', 'bart');\n$twitter-&gt;addUser($user);\n// fem un delay de 4 segons perqu\u00e8 les dates de creaci\u00f3 no coincidisquen\nsleep(4);\n$userH = new User('Homer Simpson', 'homerj');\n$twitter-&gt;addUser($userH);\n$users = $twitter-&gt;getUsers();\nsleep(4);\n$tweet = new Tweet('Hola m\u00f3n!', $user);\n$video = new Video('V\u00eddeo 1', 1080, 1024, 25);\n$photo = new Photo('Foto 1', 1080, 1024, 'Text alternatiu');\n$tweet-&gt;addAttachment($video);\n$tweet-&gt;addAttachment($photo);\n$twitter-&gt;addTweet($tweet);\n$twitter-&gt;LikeTweet($user, $tweet);\n$twitter-&gt;LikeTweet($userH, $tweet);\n$tweet = new Tweet(\"Kids, just because I don\u2019t care doesn\u2019t mean I\u2019m not listening.\", $userH);\n$twitter-&gt;addTweet($tweet);\n$tweet = new Tweet(\"I\u2019ve learned that life is one crushing defeat after another until you just wish Flanders was dead.\", $userH);\n$twitter-&gt;addTweet($tweet);\n$tweets = $twitter-&gt;getTweets();\n?&gt;\n&lt;h1&gt;Welcome to Truiter&lt;/h1&gt;\n&lt;p&gt;&lt;?= $twitter-&gt;getNumberOfUsers() ?&gt; users, &lt;?= $twitter-&gt;getNumberOfTweets() ?&gt; tweets.&lt;/p&gt;\n&lt;h2&gt;Users&lt;/h2&gt;\n&lt;?php foreach ($users as $user) : ?&gt;\n&lt;p&gt;&lt;?= $user-&gt;getName() ?&gt; (@&lt;?= $user-&gt;getUsername() ?&gt;) - Creation\n     date: &lt;?= $user-&gt;getCreatedAt()-&gt;format('d-m-Y h:i:s') ?&gt;&lt;/p&gt;\n&lt;?php endforeach; ?&gt;\n&lt;h2&gt;Tweets&lt;/h2&gt;\n&lt;?php foreach ($tweets as $tweet) : ?&gt;\n&lt;?php $tweetUser = $tweet-&gt;getAuthor() ?&gt;\n&lt;p&gt;&lt;?= $tweetUser-&gt;getName() ?&gt; (@&lt;?= $tweetUser-&gt;getUsername() ?&gt;) - Creation\n     date: &lt;?= $tweet-&gt;getCreatedAt()-&gt;format('d-m-Y h:i:s') ?&gt;&lt;/p&gt;\n&lt;blockquote&gt;&lt;?= $tweet-&gt;getText() ?&gt;&lt;/blockquote&gt;\n&lt;p&gt;Like counter: &lt;?= $tweet-&gt;getLikeCount(); ?&gt;&lt;/p&gt;\n&lt;?php if (count($tweet-&gt;getAttachments()) &gt; 0) : ?&gt;\n&lt;h3&gt;Attachments&lt;/h3&gt;\n&lt;ul&gt;\n&lt;?php foreach ($tweet-&gt;getAttachments() as $attachment) : ?&gt;\n&lt;li&gt;&lt;?= $attachment-&gt;getSummary() ?&gt;&lt;/li&gt;\n&lt;?php endforeach; ?&gt;\n&lt;/ul&gt;\n&lt;?php endif ;?&gt;\n&lt;hr/&gt;\n&lt;?php endforeach; ?&gt;\n</code></pre> Navegador <pre>\n<p>Welcome to Truiter\n 2 users, 3 tweets.   \nUsers\n Bart Simpson (@bart) - Creation date: 13-10-2022 09:45:52\n Homer Simpson (@homerj) - Creation date: 13-10-2022 09:45:56   \nTweets\n Bart Simpson (@bart) - Creation date: 13-10-2022 09:46:00\n      Hola m\u00f3n!\n Like counter: 2\n Attachments\n - V\u00eddeo 1 [1080x1024] ( 25 s)\n - Foto 1 (Text alternatiu) [1080x1024]</p>\n<p>Homer Simpson (@homerj) - Creation date: 13-10-2022 09:46:00\n      Kids, just because I don\u2019t care doesn\u2019t mean I\u2019m not listening.\n Like counter: 0</p>\n<p>Homer Simpson (@homerj) - Creation date: 13-10-2022 09:46:00\n      I\u2019ve learned that life is one crushing defeat after another until you \n      just wish Flanders was dead.\n Like counter: 0</p>\n</pre> <ol> <li> <p>Implementa la c\u00e0rrega autom\u00e0tica (autoload) de classes tenint en compte que:</p> <ul> <li>Les classes estaran en el directori <code>src/App</code>.</li> <li>L'espai de noms ser\u00e0 App.</li> </ul> <p>Crea les excepcions InvalidWidthMediaException i InvalidHeightMediaException que es llan\u00e7aran quan alguna de les dimensions dels mitjans siga inferior a 300 p\u00edxels. Guarda-les en el directori src/App/Exceptions amb el namespace corresponent.</p> </li> </ol>"},{"location":"04-web-programming/04-01-forms/","title":"Processament de formularis","text":"<p>Fins ara ens hem centrat a con\u00e8ixer les caracter\u00edstiques del llenguatge PHP. En aquesta unitat posarem el focus en les caracter\u00edstiques pr\u00f2pies de les aplicacions web i com crear-les amb PHP. Aix\u00ed, veurem com enviar informaci\u00f3 mitjan\u00e7ant formularis, com processar-la i com podem mantenir informaci\u00f3 entre les diferents sol\u00b7licituds HTTP, \u00e9s a dir, mantenir l'estat. </p>"},{"location":"04-web-programming/04-01-forms/#variables-predefinides","title":"Variables predefinides","text":"<p>Les variables predefinides s\u00f3n variables internes de PHP que poden usar-se des de qualsevol \u00e0mbit, per aix\u00f2 s'anomenen variables superglobals. Es tracta d'arrays associatius que contenen un conjunt de valors de diferent naturalesa.</p> <ul> <li><code>$_SERVER</code>. Cont\u00e9 informaci\u00f3 sobre l'entorn del servidor web i d'execuci\u00f3.</li> <li><code>$_GET</code>, <code>$_POST</code> i <code>$_COOKIE</code> contenen les variables que s'han passat al script actual utilitzant, respectivament, els m\u00e8todes <code>GET</code> (par\u00e0metres en la URL), <code>POST</code> i mitjan\u00e7ant cookies HTTP.</li> <li><code>$_REQUEST</code> junta en un solament el contingut dels tres arrays anteriors, <code>$_GET</code>, <code>$_POST</code> i <code>$_COOKIE</code>. </li> <li><code>$_ENV</code> cont\u00e9 les variables que es puguen haver passat a PHP des de l'entorn en qu\u00e8 s'executa. </li> <li><code>$_FILES</code> cont\u00e9 els fitxers que es puguen haver pujat al servidor utilitzant el m\u00e8tode POST. </li> <li><code>$_SESSION</code> cont\u00e9 les variables de sessi\u00f3 disponibles per al gui\u00f3 actual.</li> </ul> <p>Superglobals</p> <p>Trobar\u00e0s m\u00e9s informaci\u00f3 sobre les variables superglobals en  Superglobals</p>"},{"location":"04-web-programming/04-01-forms/#que-es-una-peticio-http","title":"Qu\u00e8 \u00e9s una petici\u00f3 HTTP?","text":"<p>Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'unes URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres.</p> <p>Hi ha diferents m\u00e8todes (<code>METHOD</code>) per a realitzar una petici\u00f3 (<code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, <code>PATCH</code>, etc.). Els m\u00e9s habituals s\u00f3n <code>GET</code>, que ja coneixes, i <code>POST</code>. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API.</p> <p></p>"},{"location":"04-web-programming/04-01-forms/#metode-get","title":"M\u00e8tode GET","text":"<p>El m\u00e8todo de sol\u00b7licitud GET t\u00e9 les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que </li> <li>s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. </li> <li>El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. </li> <li>La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 2048 car\u00e0cters.</li> </ul> <p>Exemple de petici\u00f3 GET </p> <p>Inspecci\u00f3 de la petici\u00f3 </p> <p>Inspecci\u00f3 de la petici\u00f3 </p>"},{"location":"04-web-programming/04-01-forms/#accedir-a-les-dades-de-la-peticio-get","title":"Accedir a les dades de la petici\u00f3 GET","text":"<p>Per a accedir a les dades usem la variable superglobal <code>$_GET</code>.</p> <p><code>$_GET</code> \u00e9s un array associatiu les claus del qual coincidiran amb els noms que li hem donat als par\u00e0metres.</p> <p>Per a accedir als par\u00e0metres de la petici\u00f3 anterior:</p> <pre><code>echo $_GET['nom'].' '.$_GET['cognom']; // Homer Simpson\n</code></pre>"},{"location":"04-web-programming/04-01-forms/#metode-post","title":"M\u00e8tode POST","text":"<p>El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>S'utilitza per a enviar dades a un recurs.</li> <li>Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari.</li> <li>La petici\u00f3 no es guarda en cau.</li> <li>No es pot utilitzar en un enlla\u00e7.</li> <li>No roman en l'historial.</li> <li>No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres.</li> <li>Es solen utilitzar en els formularis.</li> </ul>"},{"location":"04-web-programming/04-01-forms/#evitar-el-csrf","title":"Evitar el CSRF","text":"<p>En tota p\u00e0gina que reba par\u00e0metres POST has de comprovar el HTTP referer del navegador, i que aquest siga de dins de la teua web. En PHP el referer que envia el navegador s'emmagatzema en <code>$_SERVER['HTTP_REFERER']</code>. \u00c9s a dir, sols processarem peticions  que vinguen del teu lloc web.</p> <p>M\u00e9s informaci\u00f3</p> <p>En el seg\u00fcent enlla\u00e7 trobareu m\u00e9s informaci\u00f3 relativa als atacs CSRF CSRF: explicaci\u00f3n del ataque Cross Site Request Forgery</p> <p>Seria tal com:</p> <pre><code>if(parse_url($_SERVER['HTTP_REFERER'], PHP_URL_HOST)!=$_SERVER['HTTP_HOST']) \ndie('Anti-CSRF'); \n</code></pre> <p>Important</p> <p>Amb aquest codi estem obligant que el navegador envie un referer si o s\u00ed. Per tant nom\u00e9s ha d'utilitzar-se en p\u00e0gines a les quals el navegador accedisca des d'una altra p\u00e0gina de la nostra web.</p> <p>\u00d2bviament no podem col\u00b7locar-ho en la primera p\u00e0gina a la qual s'accedeix a la nostra web (<code>index.php</code> o similar), ja que si l'usuari a escrit l'adre\u00e7a a m\u00e0 en la barra del navegador no s'enviar\u00e0 referer cap i saltar\u00e0 el sistema.</p>"},{"location":"04-web-programming/04-01-forms/#definicio-de-formularis","title":"Definici\u00f3 de formularis","text":"<p>Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina <code>index.php</code> (atribut <code>action</code> de l'element <code>form</code>).</p> <p>Utilitza el m\u00e8tode <code>post</code> indicat en l'atribut <code>method</code>:</p> <pre><code>&lt;form action=\"index.php\" method=\"post\"&gt;\n&lt;label for=\"nom\"&gt;Nom&lt;/label&gt;\n&lt;input type=\"text\" name=\"nom\" value=\"\"&gt;\n&lt;br /&gt;\n&lt;label for=\"cognom\"&gt;Cognom&lt;/label&gt;\n&lt;input type=\"text\" name=\"cognom\" value=\"\"&gt;\n&lt;br /&gt;\n&lt;input type=\"submit\" value=\"Enviar\"&gt;\n&lt;/form&gt;\n</code></pre> <p>Inspecci\u00f3 de la petici\u00f3: Headers </p> <p>Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres </p>"},{"location":"04-web-programming/04-01-forms/#accedir-a-les-dades-de-la-peticio-post","title":"Accedir a les dades de la petici\u00f3 POST","text":"<p>Usem la variable superglobal <code>$_POST</code>. Funciona igual que <code>$_GET</code>, per\u00f2 amb els noms (atribut <code>name</code>) que li hem donat als camps del formulari.</p> <p>En depuraci\u00f3 podem mostar totes les dades rebudes:</p> <pre><code>var_dump ($_POST);\nprint_r($_POST)\n</code></pre> <p>Per a mostrar les dades individualment:</p> <pre><code>echo $_POST['nom'];\necho $_POST['cognom'];\n</code></pre>"},{"location":"04-web-programming/04-01-forms/#accedir-a-parametres-no-existents","title":"Accedir a par\u00e0metres no existents","text":"<p>Errors del tipus  </p> <p><pre><code>Notice: Undefined index: nom in /home/ubuntu/index.php on line 6\n</code></pre> ens indiquen que la clau <code>nom</code>  no existeix en l'array <code>$_POST</code>. La variable supergloblal <code>$_POST</code> est\u00e0 buida si no s'ha enviat el formulari.</p> <p>Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament:</p> <pre><code>if ($_SERVER['REQUEST_METHOD'] === 'POST')\n{\n}\n</code></pre>"},{"location":"04-web-programming/04-01-forms/#parametres-multivalents","title":"Par\u00e0metres multivalents","text":"<p>Hi ha elements HTML que envien diversos valors:     - <code>select multiple</code>   - <code>checkbox</code></p> <p>Per recollir les dades, el nom de l\u2019element ha de ser una matriu (array).</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n&lt;option value=\"c\"&gt;C&lt;/option&gt;\n&lt;option value=\"java\"&gt;Java&lt;/option&gt;\n&lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n&lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>Aix\u00ed doncs, recopilant les dades:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\nforeach ($lenguajes as $lenguaje) {\necho \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"04-web-programming/04-01-forms/#validacio-de-formularis","title":"Validaci\u00f3 de formularis","text":"<p>Sempre hem de comprovar que les dades que envia el formulari s\u00f3n correctes.</p> <p>Les validacions a realitzar s\u00f3n les seg\u00fcents:</p> <ol> <li>Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final.</li> <li>Els camps correu electr\u00f2nic, data o URL han de tenir el format esperat.</li> <li>Tots els camps s'han de filtrar amb <code>htmlspecialchars</code> per a evitar atacs de Cross-site Scripting (XSS).</li> </ol> <p>Aquest article sobre Cross-site Scripting \u00e9s molt il\u00b7lustratiu: PHP Form Validation</p> <p>Validem en el client o el servidor?</p> <p>La resposta \u00e9s senzilla: en els dos llocs. La validaci\u00f3 en el client millora la usabilitat mentre que la validaci\u00f3 en el servidor ens permet una validaci\u00f3 m\u00e9s robusta i segura.</p>"},{"location":"04-web-programming/04-01-forms/#valors-buits","title":"Valors buits","text":"<ol> <li>Els camps requerits no haurien de quedar-se buits.</li> <li>Per a verificar que un valor no queda buit podem utilitzar diverses funcions:<ul> <li>La funci\u00f3 <code>empty()</code></li> <li>La funci\u00f3 <code>isset()</code>.</li> <li>L'operador coalesce <code>??</code>.</li> </ul> </li> </ol>"},{"location":"04-web-programming/04-01-forms/#espais-en-blanc","title":"Espais en blanc","text":"<ol> <li>Hem d'eliminar els espais en blanc del principi i final dels camps.</li> <li>S'utilitza la funci\u00f3 <code>trim</code></li> </ol>"},{"location":"04-web-programming/04-01-forms/#escapar-lentrada","title":"Escapar l'entrada","text":"<p>Sempre hem de filtrar l'entrada amb <code>htmlspecialchars</code> abans de mostrar el camp amb <code>echo</code> o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'HTMLl en l'entitat corresponent, aix\u00ed no interferir\u00e0 en el programa.</p>"},{"location":"04-web-programming/04-01-forms/#comprovar-lemail","title":"Comprovar l'email","text":"<p>Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 <code>filter_var</code> </p> <p><pre><code>filter_var($email, FILTER_VALIDATE_EMAIL)\n</code></pre> o la funci\u00f3 <code>filter_input</code> quan obtenin les dades directament d'una variable externa.</p> <pre><code>// suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email'\n$email = filter_input(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL)\n</code></pre>"},{"location":"04-web-programming/04-01-forms/#filter_input","title":"filter_input","text":"<p><pre><code>filter_input(int $type, string $variable_name[, int $filter=FILTER_DEFAULT[, mixed $options]]):mixed\n</code></pre> La funci\u00f3 <code>filter_input</code> agafa una variable externa (<code>$_GET</code>, <code>$_POST</code>, etc) concreta pel seu nom i aplica el filtre indicat.</p> <p>Els filtres poden sanejar o validar les variables externes.</p> <p>Per exemple, si volem agafar el valor del par\u00e0metre nom  del querystring (<code>http://localhost/index.php?nom=&lt;h1&gt;Homer&lt;/h1&gt;</code>) usarem el tipus <code>INPUT_GET</code>.</p> <p>El filtre <code>FILTER_SANITIZE_STRING</code> elimina etiquetes, i opcionalment elimina o codifica caracters especials.</p> <pre><code>$nom = filter_input(INPUT_GET, 'nom', FILTER_SANITIZE_STRING).  // $nom = Homer\n</code></pre> <p>M\u00e9s informaci\u00f3 en:</p> <ul> <li>filter_var</li> <li>filter_input</li> </ul>"},{"location":"04-web-programming/04-01-forms/#comprovar-la-data","title":"Comprovar la data","text":"<ul> <li>Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte.</li> <li>Podem utilitzar el m\u00e8tode est\u00e0tic <code>createFromFormat</code> de la classe <code>DateTime</code></li> </ul> <p>M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php</p>"},{"location":"04-web-programming/04-01-forms/#exemple","title":"Exemple","text":"<pre><code>$data1 = \"2001-05-02\"; // Data \u00e9s de tipus string\n// DateTime::createFromFormat converteix una cadena de text a on objecte DateTime\n// ens tornar\u00e0 una inst\u00e0ncia de DateTime o FALSE en cas d'error.\n$dt1 = DateTime::createFromFormat('Y-m-d', $data1);  \nif ($dt1 === false) {\necho \"La data d'inici \u00e9s incorrecta\";\n}\n</code></pre> <p>https://www.php.net/manual/es/function.strtotime.php</p> <p>Tamb\u00e9 \u00e9s habitual trobar els controls de data separats en 3 elements <code>input</code>. Un per a l\u2019any, l\u2019altre per a mes i l\u2019altre per al dia.</p>"},{"location":"04-web-programming/04-01-forms/#bones-practiques-en-lobtencio-de-dades-des-de-lexterior","title":"Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior","text":"<p>Cal seguir les seg\u00fcents bones pr\u00e0ctiques:</p> <ol> <li>No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP.</li> <li>Sanegeu i valideu l\u2019entrada de dades sempre.</li> <li>Les funcions <code>filter_var()</code> i <code>filter_input()</code> poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters).</li> <li>Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n dades que venen de l'exterior.</li> </ol> <p>A manera de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux.</p> <p></p> <p>En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5:</p> <ul> <li>Formularios en HTML en MDN web docs.</li> <li>Formularios en HTML5 en MDN web docs.</li> <li>HTML Forms en W3CSchools.</li> </ul>"},{"location":"04-web-programming/04-01-forms/#reomplint-un-formulari","title":"Reomplint un formulari","text":"<p>Un sticky form \u00e9s un formulari que recorda els seus valors. Per fer -ho, hem d\u2019omplir els atributs de valor dels elements HTML amb la informaci\u00f3 que contenia:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n// Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n// Generamos el formulario\n$nombre = $_POST['nombre'] ?? \"\";\n$modulos = $_POST['modulos'] ?? [];\n?&gt;\n&lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n&lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n&lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n&lt;/p&gt;\n&lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n&lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n&lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n&lt;/p&gt;\n&lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n&lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n&lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n&lt;/p&gt;\n&lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n&lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"04-web-programming/04-01-forms/#pujada-de-fitxers","title":"Pujada de fitxers","text":"<p>Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal <code>$_FILES</code>.</p> <p>En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius.</p>"},{"location":"04-web-programming/04-01-forms/#formulari","title":"Formulari","text":"<p>Per poder utilitzar el tipus <code>file</code> en l'element <code>input</code> cal que el formulari incloga l'atribut <code>enctype</code> amb el valor <code>multipart/form-data</code>. </p> <p>El valor de l'atribut <code>name</code> de l'element <code>input</code> ser\u00e0 l'\u00edndex de l'array associatiu <code>$_FILES</code> que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer.</p> <p>En el seg\u00fcent exemple:</p> <p><pre><code>&lt;form action=\"upload.php\" enctype=\"multipart/form-data\" method=\"POST\"&gt;\n&lt;input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"10240\"&gt;\n&lt;input type=\"file\" name=\"image\" /&gt;\n&lt;input type=\"submit\" value=\"Upload\" /&gt;\n&lt;/form&gt;\n</code></pre> Emprarem <code>$_FILES['image']</code> per obtenir les dades de l'arxiu penjat.</p>"},{"location":"04-web-programming/04-01-forms/#variable-superglobal-_files","title":"Variable superglobal <code>$_FILES</code>","text":"<p>Cada element en <code>$_FILES</code> \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n:</p> <ul> <li><code>name</code>. El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva.</li> <li><code>type</code>. El tipus MIME del fitxer dedu\u00eft pel navegador.</li> <li><code>size</code>. La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0.</li> <li><code>tmp_name</code>. El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat. </li> </ul>"},{"location":"04-web-programming/04-01-forms/#moure-el-fitxer","title":"Moure el fitxer","text":"<p>Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 <code>move_uploaded_file</code> per a guardar-lo en la ubicaci\u00f3 definitiva. </p> <p>La funci\u00f3 <code>is_uploaded_file</code> ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s.</p> <p><code>move_uploaded_file</code> ja fa eixa comprovaci\u00f3 en executar-se.</p>"},{"location":"04-web-programming/04-01-forms/#gestio-derrors","title":"Gesti\u00f3 d'errors","text":"<p>PHP torna un codi d'error en <code>$_FILES</code>. El codi es pot trabar en la clau <code>error</code>. Per exemple: <code>$_FILES['image']['error']</code>. </p> <p>Els missates d'error m\u00e9s importants s\u00f3n:</p> <ul> <li><code>UPLOAD_ERR_OK</code>: La pujada ha sigut correcta.</li> <li><code>UPLOAD_ERR_INI_SIZE</code>: La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva <code>upload_max_filesize</code>.</li> <li><code>UPLOAD_ERR_FORM_SIZE</code>: La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en <code>max_file_size</code>. </li> <li><code>UPLOAD_ERR_NO_FILE</code>: No s'ha enviat cap fitxer.</li> </ul> <p>En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3.</p>"},{"location":"04-web-programming/04-02-state/","title":"Manteniment de l\u2019estat","text":"<p>Recorda que HTTP \u00e9s un protocol sense estat, el que significa que un cop un servidor web completa la sol\u00b7licitud d\u2019un client d\u2019un recurs, la connexi\u00f3 entre els dos acaba. Dit d\u2019una altra manera, no hi ha manera que un servidor recorde una que una seq\u00fc\u00e8ncia de sol\u00b7licituds prov\u00e9 del mateix client.</p> <p>Info</p> <p>Mantenir l\u2019estat \u00e9s poder fer el seguiment d\u2019una sequ\u00e8ncia de sol\u00b7licituds d\u2019un client.</p> <p>No obstant aix\u00f2 mantenir l\u2019estat, poder fer el seguiment d\u2019una seq\u00fc\u00e8ncia de sol\u00b7licituds d\u2019un client, \u00e9s molt \u00fatil. No podeu crear una aplicaci\u00f3 que tinga cistella de la compra, per exemple, si no podeu mantenir l\u2019estat. Heu de saber quan un usuari afegeix articles a la cistella o els elimina i el contingut final de la cistella si el client decideix adquirir els productes.</p> <p>Per solucionar aquesta manca d\u2019estat de la web tenim disponibles diverses t\u00e8cniques com l\u2019\u00fas cookies o de sessions que veurem a continuaci\u00f3.</p> <p>Combinant mecanismes d\u2019autenticaci\u00f3 i t\u00e8cniques per a mantenir l\u2019estat podem crear aplicacions web segures.</p>"},{"location":"04-web-programming/04-02-state/#galletes-cookies","title":"Galletes (cookies)","text":"<p>Una galleta \u00e9s un fitxer de text que un lloc web guarda a l'entorn de l'usuari de navegador. El seu \u00fas m\u00e9s t\u00edpic \u00e9s l'emmagatzematge de les prefer\u00e8ncies de l'usuari (per exemple, l'idioma en que s'han de mostrar les p\u00e0gines), perqu\u00e8 no haja de tornar a indicar-les la propera vegada que visiteu el lloc.</p> <p>Si utilitzes Firefox com a navegador, pots accedir a <code>Desenvolupador web</code> \u2013 <code>Inspector d'emmagatzematge</code> des del men\u00fa principal. Entre les seves caracter\u00edstiques et permet consultar i editar les galetes emmagatzemades en el mateix.</p> <p></p> <p>En PHP, per emmagatzemar una galleta al navegador de l'usuari, pots utilitzar la funci\u00f3 <code>setcookie</code>. L'\u00fanic par\u00e0metre obligatori que has de fer servir \u00e9s el nom de la galleta, per\u00f2 admet diversos par\u00e0metres m\u00e9s opcionals.</p> <pre><code> setcookie(\nstring $name,\nstring $value = \"\",\nint $expires = 0,\nstring $path = \"\",\nstring $domain = \"\",\nbool $secure = false,\nbool $httponly = false\n): bool\n</code></pre> <p>Info</p> <p>Per a m\u00e9s informaci\u00f3 consulta: https://www.php.net/manual/es/function.setcookie.php.</p> <p>Per exemple, si vols emmagatzemar en una galleta la data del darrer acc\u00e9s d'un usuari, pots fer:</p> <pre><code>setcookie (\"last_visit_date\", (string) time(), time() + 3600);\n</code></pre> <p>Els dos primers par\u00e0metres s\u00f3n el nom de la galeta i el seu valor. El tercer \u00e9s la data de caducitat de la mateixa en format <code>timestamp</code> (en l'exemple, una hora des del moment en qu\u00e8 s'execute). En cas de no figurar aquest par\u00e0metre, la galeta s'eliminar\u00e0 quan es tanque el navegador. Tingues en compte que tamb\u00e9 es poden aplicar restriccions a les p\u00e0gines del lloc que poden accedir a una galeta en funci\u00f3 de la ruta.</p> <p>Les galetes es transmeten entre el navegador i el servidor web utilitzant les cap\u00e7aleres del protocol  HTTP. Per aix\u00f2, les sent\u00e8ncies <code>setcookie</code> s'han d'enviar abans que el navegador mostre cap informaci\u00f3 a pantalla.</p> <p></p> <p>Podeu trobar m\u00e9s informaci\u00f3 en Ultimate Guide to HTTP Cookies</p> <p>El proc\u00e9s de recuperaci\u00f3 de la informaci\u00f3 que emmagatzema una galleta \u00e9s molt simple. Quan accedeixes a un lloc web, el navegador li envia de forma autom\u00e0tica tot el contingut de les galetes que emmagatzema relatives a aquest lloc en concret. Des PHP pots accedir a aquesta informaci\u00f3 per mitj\u00e0 de la variable superglobal <code>$_COOKIE</code>.</p> <p>Warning</p> <p>Sempre que utilitzeu galetes en una aplicaci\u00f3 web, heu de tenir en compte que en \u00faltima inst\u00e0ncia la seva  disponibilitat est\u00e0 controlada pel client. Per exemple, alguns usuaris deshabiliten les galetes al navegador perqu\u00e8  pensen que la informaci\u00f3 que emmagatzemen pot suposar un potencial problema de seguretat. O que la informaci\u00f3 que emmagatzemen pot arribar a perdre perqu\u00e8 l'usuari decideix formatar l'equip o simplement eliminar-les de sistema.</p> <p>Si un cop emmagatzemada una galeta al navegador vols eliminar-la abans que expire, pots utilitzar  la mateixa funci\u00f3 <code>setcookie</code> per\u00f2 indicant una data de caducitat anterior a l'actual.</p> <p>Question</p> <p>Quina \u00e9s la durada per defecte d'una galeta si no s'indica la data de caducitat, com en la seg\u00fcent crida a la funci\u00f3 <code>setcookie</code>?</p> <pre><code>setcookie (\"idioma\", \"espanyol\");\n</code></pre> <ol> <li>Fins que es tanque el navegador de l'usuari.</li> <li>1 hora.</li> </ol>"},{"location":"04-web-programming/04-02-state/#problemes-de-seguretat-relacionats-amb-galletes","title":"Problemes de seguretat relacionats amb galletes","text":"<p>A l'hora de fer \u00fas de galetes, cal ser conscient dels potencials problemes de seguretat que  poden patir.</p> <p>En l'article Ultimate Guide to HTTP Cookies s'exposen tres dels problemes m\u00e9s rellevants i la seua sol\u00b7luci\u00f3.</p> <p>Aquest article \u00e9s una refer\u00e8ncia molt completa dels possibles valors i atributs que es poden fer servir les galetes: Set-Cookie headers</p>"},{"location":"04-web-programming/04-02-state/#maneig-de-sessions","title":"Maneig de sessions","text":"<p>Com acabes de veure, una forma per guardar informaci\u00f3 particular de cada usuari \u00e9s utilitzar galetes (cookies). No obstant aix\u00f2, hi ha diversos problemes associats a les galetes, com el nombre d'elles que admet el navegador, o la seva grand\u00e0ria m\u00e0xima. Per solucionar aquests inconvenients, existeixen les sessions. El terme sessi\u00f3 fa refer\u00e8ncia al conjunt d'informaci\u00f3 relativa a un usuari concret.</p> <p>Aquesta informaci\u00f3 pot ser tan simple com el nom de l'usuari mateix, o m\u00e9s complexa, com els articles que ha dipositat a la cistella de compra d'una botiga en l\u00ednia.</p> <p>Cada usuari diferent d'un lloc web t\u00e9 la seva pr\u00f2pia informaci\u00f3 de sessi\u00f3. Per distingir una sessi\u00f3 d'una altra s'usen els identificadors de sessi\u00f3 (SID). Un SID \u00e9s un atribut que s'assigna a cada un dels visitants d'un lloc web i l'identifica. D'aquesta manera, si el servidor web coneix el SID d'un usuari, pot relacionar-lo amb tota la informaci\u00f3 que posseeix sobre ell, que es mant\u00e9 en la sessi\u00f3 de l'usuari. Aquesta informaci\u00f3 s'emmagatzema en el servidor web, generalment en fitxers tot i que tamb\u00e9 es poden utilitzar altres mecanismes d'emmagatzematge com bases de dades. Com ja haur\u00e0s suposat, la q\u00fcesti\u00f3 ara \u00e9s: \u00bfi on s'emmagatzema aquest SID, identificador de la sessi\u00f3, que \u00e9s \u00fanic per a cada usuari? Doncs hi ha dues maneres de mantenir el SID entre les p\u00e0gines d'un lloc web que visita l'usuari:</p> <ul> <li>Utilitzant galetes.</li> <li>Propagant el SID en un par\u00e0metre de la URL. El SID s'afegeix com una part m\u00e9s de la URL, de la forma:</li> </ul> <p>http://www.misitioweb.com/tienda/listado.php&amp;PHPSESSID=34534fg4ffg34ty</p> <p>En l'exemple anterior, el SID \u00e9s el valor del par\u00e0metre <code>PHPSESSID</code>.</p> <p>Cap de les dues maneres \u00e9s perfecta. Ja saps els problemes que t\u00e9 la utilitzaci\u00f3 de cookies. Malgrat aix\u00f2, \u00e9s el millor m\u00e8tode i el m\u00e9s utilitzat. Propagar el SID com a part de la URL comporta majors desavantatges, com la impossibilitat de mantenir el SID entre diferents sessions, o el fet que compartir la URL amb una altra persona implica compartir tamb\u00e9 l'identificador de sessi\u00f3.</p> <p>La bona not\u00edcia, \u00e9s que el proc\u00e9s de maneig de sessions en PHP est\u00e0 automatitzat en gran mida. Quan un usuari visita un lloc web, no cal programar un procediment per veure si hi ha un SID previ i carregar les dades associades amb el mateix. Tampoc has d'utilitzar la funci\u00f3 <code>setcookie</code> si vols emmagatzemar els SID en galetes, o anar passant el SID entre les p\u00e0gines web del teu lloc si et decideixes per propagar. Tot aix\u00f2 PHP ho fa autom\u00e0ticament.</p> <p>Server side cookies</p> <p>A la informaci\u00f3 que s'emmagatzema en la sessi\u00f3 d'un usuari tamb\u00e9 se li coneix com a galetes en la part de servidor (server side cookies). Has de tenir en compte que encara aquesta informaci\u00f3 no viatja entre el client i el servidor, s\u00ed que ho fa el SID, b\u00e9 com a part de l'URL o en una cap\u00e7alera HTTP si es guarda en una galleta. En tots dos casos, aix\u00f2 planteja un possible problema de seguretat. El SID pot ser aconseguit per una altra persona, i a partir de la mateixa obtenir la informaci\u00f3 de la sessi\u00f3 de l'usuari. La manera m\u00e9s segura d'utilitzar sessions \u00e9s emmagatzemant els SID en galetes i utilitzar HTTPS per a xifrar la informaci\u00f3 que es transmet entre el servidor web i el client.</p>"},{"location":"04-web-programming/04-02-state/#configuracio","title":"Configuraci\u00f3","text":"<p>Per defecte, PHP inclou suport per a la gesti\u00f3 de sessions. Abans, per\u00f2, d'utilitzar sessions en el teu lloc web, has de configurar correctament PHP utilitzant els seg\u00fcents directives en el fitxer <code>php.ini</code> segons corresponga:</p> Directiva significat <code>session.use_cookies</code> Indica si s'han d'usar cookies (1) o propagaci\u00f3 a la URL (0) per emmagatzemar el SID. <code>session.use_only_cookies</code> S'ha d'activar (1) quan fas servir cookies per emmagatzemar els SID, i a m\u00e9s no vols que es reconeguin els SID que es puguin passar com part de la URL (aquest m\u00e8tode es pot usar per usurpar l'identificador d'un altre usuari) <code>session.save_handler</code> S'utilitza per indicar a PHP com ha de emmagatzemar les dades de la sessi\u00f3 de l'usuari. Hi ha quatre opcions: en fitxers (files), en mem\u00f2ria (Mm), en una base de dades SQLite (sqlite) o utilitzant per a aix\u00f2 funcions que ha de definir el programador (user). El valor per defecte (Files) funcionar\u00e0 sense problemes en la majoria dels casos. <code>session.name</code> Determina el nom de la galleta que s'utilitzar\u00e0 per guardar el SID. La seva valor per defecte \u00e9s PHPSESSID. <code>session.auto_start</code> El seu valor per defecte \u00e9s 0, i en aquest cas haur\u00e0s de fer servir la funci\u00f3 session_start per gestionar l'inici de les sessions. Si fas servir sessions al lloc web, pot ser bona idea canviar el seu valor a 1 per que PHP activi de forma autom\u00e0tica el maneig de sessions. <code>session.cookie_lifetime</code> Si utilitzes l'URL per propagar el SID, aquest es perdr\u00e0 quan tanque el navegador. No obstant aix\u00f2, si utilitzes galetes, el SID es mantindr\u00e0 mentre no es destruisca la galleta. En el seu valor per defecte (0), les galetes es destrueixen quan es tanca el navegador. Si vols que es mantingui el SID durant m\u00e9s temps, has d'indicar en aquesta directiva aquest temps en segons. <code>session.gc_maxlifetime</code> Indica el temps en segons que s'ha de mantenir activa la sessi\u00f3, encara que no hi hagi cap activitat per part de l'usuari. El seu valor per defecte \u00e9s 1440. \u00c9s a dir, passats 24 minuts des de l'\u00faltima activitat per part de l'usuari, es tanca la sessi\u00f3 autom\u00e0ticament. <code>session.cookie_path</code> Indica la ruta que ha d'existir per a enviar la galleta de sessi\u00f3. <code>session.cookie_domain</code> Domini que ha d'haver perqu\u00e8 s'envie la <code>cookie</code>. Quan no s'indica valor la galleta s'envia sols al nom complet de host que l'ha enviada. <code>session.cookie_secure</code> Quan t\u00e9 el valor <code>On</code> la galleta sols s'enviar\u00e0 si les urls s\u00f3n HTTPS. <code>session.cookie_httponly</code> Quan t\u00e9 el valor <code>On</code> s'indica als navegadors que el JavaScript no pot llegir-les. <p>La funci\u00f3 <code>phpinfo</code>, de la qual ja vam parlar amb anterioritat, t'ofereix informaci\u00f3 sobre la configuraci\u00f3 actual de les directives de sessi\u00f3.</p> <p>Cal saber</p> <p>La majoria de directives de PHP es poden modificar en temps d'execuci\u00f3 amb la funci\u00f3 <code>ini_set</code>. </p> <p>En la documentaci\u00f3 de PHP tens informaci\u00f3 sobre aquestes i altres directives que permeten configurar el maneig de sessions.</p> <p>https://www.php.net/manual/es/session.configuration.php</p> <p>Question</p> <p>Si la informaci\u00f3 de l'usuari que vols emmagatzemar inclou contingut privat com una contrasenya, \u00bfqu\u00e8 utilitzaries, galetes o la sessi\u00f3 de l'usuari?</p>"},{"location":"04-web-programming/04-02-state/#inici-i-fi-duna-sessio","title":"Inici i fi d'una sessi\u00f3","text":"<p>L'inici d'una sessi\u00f3 pot tenir lloc de dues maneres. Si has activat la directiva <code>session.auto_start</code> en la configuraci\u00f3 de PHP, la sessi\u00f3 comen\u00e7ar\u00e0 autom\u00e0ticament quan un usuari es connecte al teu lloc web. En el cas que aquest usuari ja haja obert una sessi\u00f3 amb anterioritat, i aquesta no s'haja eliminat, en lloc d'obrir una nova sessi\u00f3 es reprendr\u00e0 la anterior. Per a aix\u00f2 s'utilitzar\u00e0 el SID anterior, que estar\u00e0 emmagatzemat en una galleta (recorda que si fas servir propagaci\u00f3 de l'SID, no podr\u00e0s restaurar sessions anteriors; el SID figura a la URL i es perd quan tanques el navegador).</p> <p>Si per contra, decideixes no utilitzar l'inici autom\u00e0tic de sessions, haur\u00e0s executar la funci\u00f3 <code>session_start()</code> per indicar a PHP que inicie una nova sessi\u00f3 o reprenga l'anterior. Anteriorment aquesta funci\u00f3 tornava sempre <code>true</code>, a partir de la versi\u00f3 5.3.0 de PHP el seu comportament \u00e9s m\u00e9s coherent: retorna <code>false</code> en cas de no poder iniciar o restaurar la sessi\u00f3.</p> <p>Com l'inici de sessi\u00f3 requereix utilitzar <code>cookies</code>, i aquestes es transmeten en els encap\u00e7alats HTTP, heu de tenir en compte que per poder iniciar una sessi\u00f3 utilitzant <code>session_start</code>, haur\u00e0s de fer les cridades a aquesta funci\u00f3 abans que la p\u00e0gina web mostre informaci\u00f3 al navegador.</p> <p>A m\u00e9s, totes les p\u00e0gines que necessiten utilitzar la informaci\u00f3 emmagatzemada en la sessi\u00f3, hauran d'executar la funci\u00f3 <code>session_start</code>.</p> <p>Mentre la sessi\u00f3 estiga oberta, pots utilitzar la variable superglobal <code>$_SESSION</code> per afegir informaci\u00f3 a la sessi\u00f3 de l'usuari, o per accedir a la informaci\u00f3 emmagatzemada en la sessi\u00f3. Per exemple, per comptar el nombre de vegades que l'usuari visita la p\u00e0gina, pots fer:</p> <pre><code>&lt;?php\n// Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente\nsession_start();\n// Comprobamos si la variable ya existe\nif (isset($_SESSION['visitas']))\n$_SESSION['visitas']++;\nelse\n$_SESSION['visitas'] = 0;\n?&gt;\n</code></pre> <p>Si en lloc de el nombre de visites, voldries emmagatzemar l'instant en qu\u00e8 es produeix cadascuna, la variable de sessi\u00f3 \"visites\" ha de ser una matriu i per tant haur\u00e0s de canviar el codi anterior per:</p> <pre><code>&lt;?php\n// Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente\nsession_start();\n// En cada visita a\u00f1adimos un valor al array \"visitas\"\n$_SESSION['visitas'][] = mktime();\n?&gt;\n</code></pre> <p>Encara que com ja has vist, pots configurar PHP perqu\u00e8 elimine de forma autom\u00e0tica les dades de una sessi\u00f3 passat cert temps, en ocasions pot ser necessari tancar-la de forma manual en un moment determinat. Per exemple, si utilitzes sessions per recordar la informaci\u00f3 d'autenticaci\u00f3 haur\u00e0s donar-li a l'usuari de la p\u00e0gina web la possibilitat de tancar la sessi\u00f3 quan ho crega convenient.</p> <p>En PHP tens dues funcions per eliminar la informaci\u00f3 emmagatzemada en la sessi\u00f3:</p> <ul> <li><code>session_unset</code>. Elimina les variables emmagatzemades a la sessi\u00f3 actual, per\u00f2 no elimina la informaci\u00f3 de la sessi\u00f3 del dispositiu d'emmagatzematge usat.</li> <li><code>session_destroy</code>. Elimina completament la informaci\u00f3 de la sessi\u00f3 del dispositiu d'emmagatzematge.</li> </ul>"},{"location":"04-web-programming/04-02-state/#aplicacions-practiques","title":"Aplicacions pr\u00e0ctiques","text":""},{"location":"04-web-programming/04-02-state/#autenticacio-dusuaris","title":"Autenticaci\u00f3 d'usuaris","text":"<p>Gr\u00e0cies a les sessions podem emmagatzemar un token \u00fanic per poder saber si un usuari ha iniciat sessi\u00f3 correctament o no.</p>"},{"location":"04-web-programming/04-02-state/#evitar-atacs-csrf","title":"Evitar atacs CSRF","text":"<p>La falsificaci\u00f3 de sol\u00b7licituds entre llocs (CSRF) \u00e9s un tipus d'atac que es produeix quan un lloc web, correu electr\u00f2nic, bloc, missatge instantani o programa malici\u00f3s fa que el navegador web d'un usuari realitze una acci\u00f3 no desitjada en un lloc de confian\u00e7a quan l'usuari s'autentica. </p> <p>En el cas dels formularis hem d'assegurar-nos que l'origen de la petici\u00f3 prov\u00e9 de la nostra aplicaci\u00f3 web. Per a aconseguir-ho caldr\u00e0:</p> <ol> <li>Generar un token \u00fanic quan es sol\u00b7licite mostrar un formulari.</li> <li>Guardar el token en un variable de sessi\u00f3.</li> <li>Incloure en el formulari un camp ocult amb el token.</li> <li>En el moment de processar el formulari comprovarem que el token enviat pel formulari coincideix amb el token emmagatzemat en la variable de sessi\u00f3. Si no \u00e9s aix\u00ed, mostarem un error. </li> </ol>"},{"location":"04-web-programming/04-02-state/#separar-la-logica-dels-formularis","title":"Separar la l\u00f2gica dels formularis","text":"<p>Fins ara, hem creat formularis (self-processing forms) que es processaven en el mateix fitxer.  Combinant variables de sessi\u00f3 i redireccions podem aconseguir separar la l\u00f2gica del formulari en dos fitxer.</p> <p>Si agafem com a exemple la creaci\u00f3 de nous tuits:</p> <p>El fitxer <code>tweet-new.php</code> s'encarregar\u00e0 de mostrar el formulari i el fitxer <code>tweet-process.php</code> s'encarregar\u00e0 de processar-lo.  En cas d'errors de validaci\u00f3 es redirigir\u00e0 a <code>tweet-new.php</code> guardant en una variable de sessi\u00f3 els errors i les dades correctament validades. En cas d'\u00e8xit, <code>tweet-process.php</code> redirigir\u00e0 a la p\u00e0gina <code>index.php</code> guardant en una variable de sessi\u00f3 el missatge d'\u00e8xit, que caldr\u00e0 mostrar en <code>index.php</code>.</p> <p>Redireccions</p> <p>Una redirecci\u00f3 \u00e9s una t\u00e8cnica que permet fer que el servidor web responga amb una URL diferent a l\u2019actual.</p> <p>Per a aconseguir s\u2019utilitza la funci\u00f3 <code>header()</code>.</p> <pre><code>// Send to the browser a new url and send a HTTP redirect code (302)\nheader('Location: /index.php')\n// this function terminate the current script\nexit();\n</code></pre> <p>Compte amb les redireccions</p> <p>\u00c9s molt important fer una correcta gesti\u00f3 dels errors abans de fer una redirecci\u00f3, sin\u00f3 \u00e9s possible que s\u2019amaguen els errors i passen coses estranyes.</p>"},{"location":"04-web-programming/04-03-authentication/","title":"Autenticaci\u00f3 d\u2019usuaris","text":"<p>Moltes vegades \u00e9s important verificar la identitat dels dos extrems d\u2019una comunicaci\u00f3, hi ha m\u00e8todes per identificar tant al servidor en el qual s\u2019allotja el lloc web, com a l\u2019usuari del navegador que es troba en l\u2019altre extrem.</p> <p>Els llocs web que necessiten emprar identificaci\u00f3 de servidor, com les botigues o els bancs, utilitzen el protocol HTTPS. Aquest protocol requereix un certificat digital v\u00e0lid, signat per una autoritat fiable, que \u00e9s verificat pel navegador quan s\u2019accedeix a la p\u00e0gina web. A m\u00e9s, HTTPS utilitza m\u00e8todes de xifrat per crear un canal segur entre el navegador i el servidor, de tal manera que no es puga interceptar la informaci\u00f3 que es transmet pel mateix.</p> <p>Per identificar els usuaris que visiten un lloc web, es poden utilitzar diferents m\u00e8todes com el DNI digital o certificats digitals d\u2019usuari (document digital que cont\u00e9 informaci\u00f3 sobre l\u2019usuari com el nom o l\u2019adre\u00e7a. Aquesta informaci\u00f3 est\u00e0 signada per una altra entitat, anomenada entitat certificadora, que ha de ser de confian\u00e7a i garanteix que la informaci\u00f3 que cont\u00e9 \u00e9s certa), per\u00f2 el m\u00e9s est\u00e8s \u00e9s sol\u00b7licitar a l\u2019usuari certa informaci\u00f3 que nom\u00e9s ell coneix: la combinaci\u00f3 d\u2019un nom d\u2019usuari i una contrasenya.</p> <p>\u00c9s tamb\u00e9 habitual usar un formulari d'inici de sessi\u00f3 que valide les credencials de l'usuari contra una base de dades.  Una vegada identificat, es pot limitar l\u2019\u00fas que pot fer de la informaci\u00f3.</p> <p>Aix\u00ed, pot haver-hi llocs web en els quals els usuaris autenticats poden utilitzar nom\u00e9s una part de la informaci\u00f3 (com els bancs, que permeten als seus clients accedir \u00fanicament a la informaci\u00f3 relativa als seus comptes). Altres llocs web necessiten separar en grups o rols als usuaris autentificats, de tal manera que la informaci\u00f3 a la qual accedeix un usuari dep\u00e8n del grup o rol en qu\u00e8 aquest es trobe. Per exemple, una aplicaci\u00f3 de gesti\u00f3 d\u2019una empresa pot tenir un grup d\u2019usuaris als qui permet visualitzar la informaci\u00f3, i un altre grup d\u2019usuaris que, a m\u00e9s de visualitzar la informaci\u00f3, tamb\u00e9 la poden modificar. Els mecanismes per al manteniment de l'estat s\u00f3n fonamentals per poder dur a terme aquesta tasca.</p> <p>Tamb\u00e9 \u00e9s possible autenticar usuaris mitjan\u00e7ant l'autenticaci\u00f3 HTTP, la qual cosa excedeix l'abast d'aquest m\u00f2dul.</p> <p>Info</p> <p>Has de distingir l\u2019autenticaci\u00f3 dels usuaris i el control d\u2019acc\u00e9s, de la utilitzaci\u00f3 de mecanismes per assegurar les comunicacions entre l\u2019usuari del navegador i el servidor web. Encara que tots dos aspectes solen anar units, s\u00f3n independents.</p> <p>En els exemples d\u2019aquesta unitat, la informaci\u00f3 d\u2019autenticaci\u00f3 (nom i contrasenya dels usuaris) s\u2019envia en text pla des del navegador fins al servidor web. Aquesta pr\u00e0ctica \u00e9s altament insegura i mai s\u2019ha d\u2019usar sense un protocol com HTTPS que permeta xifrar les comunicacions amb el lloc web. No obstant aix\u00f2, la configuraci\u00f3 de servidors web que permeten fer servir el protocol HTTPS per xifrar la informaci\u00f3 que reben i transmeten no forma part dels continguts d\u2019aquest m\u00f2dul. Per aquest motiu, durant aquesta unitat utilitzarem \u00fanicament el protocol no segur HTTP.</p>"},{"location":"04-web-programming/04-03-authentication/#sistema-dautenticacio","title":"Sistema d'autenticaci\u00f3","text":"<p>Per a proveir d'un sistema d'autenticaci\u00f3 senzill necessitarem:</p> <ul> <li>Mostrar el formulari d\u2019inici de sessi\u00f3/contrasenya</li> <li>Comprovar les dades enviades</li> <li>Afegir algun tipus de token a la sessi\u00f3</li> <li>Comprovar el token  per a dur a terme tasques d\u2019usuari espec\u00edfiques</li> <li>Eliminar el token la sessi\u00f3 quan l\u2019usuari la tanque.</li> </ul> <p>El formulari d'inici de sessi\u00f3 podria ser semblant aquest:</p> <pre><code>&lt;form action=\"login.php\" method=\"post\" novalidate&gt;\n&lt;div&gt;\n&lt;label for=\"username\"&gt;Username&lt;/label&gt;\n&lt;input type=\"text\" name=\"username\" id=\"username\"               \nrequired&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;label for=\"password\"&gt;Contrasenya&lt;/label&gt;\n&lt;input type=\"password\" name=\"password\" id=\"password\"\nrequired&gt;\n&lt;/div&gt;\n&lt;input type=\"submit\" value=\"Inicia sessi\u00f3\"&gt;\n&lt;/form&gt;\n</code></pre> <p>Una vegada enviat el processar\u00edem: </p> <pre><code>&lt;?php\n// Comprovem si el formulari ja s\u2019ha enviat\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n$username = $_POST['username'];\n$password = $_POST['password'];\n// Validem que rebem els dos par\u00e0metres\nif (empty($usuario) || empty($password)) {\n$errors[] = \"Heu d'introduir un usuari i una contrasenya\";\n} else {\n// Caldria adaptar-ho segons on tingam les credencials dels usuaris\nif ($username == \"admin\" &amp;&amp; $password == \"admin\") {\n// Emmagatzemem l\u2019usuari a la sessi\u00f3\nsession_start();\n$_SESSION['user'] = $username;\n} else {\n$errors[] = \"L'usuari o la contrasenya no s\u00f3n v\u00e0lides.\";        \n}\n}\n}\n</code></pre> <p>Una vegada iniciada la sessi\u00f3 podr\u00edem controlar que sols els usuaris autenticats pogueren entrar ho far\u00edem aix\u00ed.</p> <pre><code>&lt;?php\n// Recuperem la informaci\u00f3 de la sessi\u00f3\nif(!isset($_SESSION)) {\nsession_start();\n}\n// I comprovem que l'usuari s'ha autenticat\nif (empty($_SESSION['user'])) {\ndie(\"Error - debe &lt;a href='login.php'&gt;identificar-se&lt;/a&gt;.&lt;br /&gt;\");\n}\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Llista de productes&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Benvingut &lt;?= $_SESSION['usuario'] ?&gt;&lt;/h1&gt;\n&lt;p&gt;Polse &lt;a href=\"logout.php\"&gt;ac\u00ed&lt;/a&gt; per a eixir&lt;/p&gt;\n&lt;p&gt;Tornar a l'&lt;a href=\"index.php\"&gt;inici&lt;/a&gt;&lt;/p&gt;\n&lt;h2&gt;Llista de productes&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;Product 1&lt;/li&gt;\n&lt;li&gt;Product 2&lt;/li&gt;\n&lt;li&gt;Product 3&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Per a tancar la sessi\u00f3 eliminar\u00edem la variable de sessi\u00f3 <code>user</code>.</p> <pre><code>&lt;?php\n// Recuperem la informaci\u00f3 de la sessi\u00f3\nsession_start();\n// I la destru\u00efm\nsession_destroy();\nheader(\"Location: index.php\");\nexit();\n?&gt;\n</code></pre>"},{"location":"04-web-programming/04-04-best-practices/","title":"Bones pr\u00e0ctiques","text":"<p>En la seg\u00fcent secci\u00f3 fem un recull d'algunes mesures que cal tenir en compte a l'hora de posar una aplicaci\u00f3 web  en producci\u00f3.</p>"},{"location":"04-web-programming/04-04-best-practices/#usa-sempre-https","title":"Usa sempre HTTPS","text":"<p>Usa sempre HTTPS si no s'enviar\u00e0 tota la informaci\u00f3 en text pla. Contrasenyes incloses.</p>"},{"location":"04-web-programming/04-04-best-practices/#usa-sessions","title":"Usa sessions","text":"<p>A difer\u00e8ncia de les galetes les dades emmagatzemades en les sessions no s'envien mitjan\u00e7ant els encap\u00e7alats HTTP, romanen al servidor.</p> <p>El que s\u00ed s'envia \u00e9s l'identificador de sessi\u00f3. Caldr\u00e0 prendre mesures perqu\u00e8 l'identificador no puga ser accessible per tercers i aix\u00ed poder accedir a les dades emmagatzemades.</p> <p>Segons l'OWASP:</p> <p>Session settings are some of the MOST important values to concentrate on in configuring. It is a good practice to change session.name to something new.</p> <p>I proposen la seg\u00fcent configuraci\u00f3 b\u00e0sica:</p> <pre><code> session.save_path                = /path/PHP-session/\n session.name                     = myPHPSESSID\n session.auto_start               = Off\n session.use_trans_sid            = 0\n session.cookie_domain            = full.qualified.domain.name\n #session.cookie_path             = /application/path/\n session.use_strict_mode          = 1\n session.use_cookies              = 1\n session.use_only_cookies         = 1\n session.cookie_lifetime          = 14400 # 4 hours\n session.cookie_secure            = 1\n session.cookie_httponly          = 1\n session.cookie_samesite          = Strict\n session.cache_expire             = 30\n session.sid_length               = 256\n session.sid_bits_per_character   = 6 # PHP 7.2+\n session.hash_function            = 1 # PHP 7.0-7.1\n session.hash_bits_per_character  = 6 # PHP 7.0-7.1\n</code></pre> <p>Les recomanacions en major detall:</p>"},{"location":"04-web-programming/04-04-best-practices/#control-de-la-vida-de-sessio","title":"Control de la vida de sessi\u00f3","text":"<ol> <li> <p>Fes que expire la sessi\u00f3 despr\u00e9s d\u2019un curt per\u00edode d\u2019inactivitat: ajusteu el temps d\u2019inactivitat a 5 minuts per a aplicacions altament protegides fins a no m\u00e9s de 30 minuts per a aplicacions de baix risc.</p> </li> <li> <p>Habilita l\u2019opci\u00f3 de tancament de sessi\u00f3: caduca i destrueix expl\u00edcitament la sessi\u00f3 en tancar la sessi\u00f3.</p> </li> <li> <p>Eviteu els inicis de sessi\u00f3 persistents (opci\u00f3 \"recordeu-me\"): opcionalment podeu restringir la informaci\u00f3 conservada i revelada per l'aplicaci\u00f3, \u00e9s a dir, obligar a l'usuari a tornar a iniciar sessi\u00f3 abans de realitzar cap operaci\u00f3 cr\u00edtica.</p> </li> <li> <p>Fes que expire la sessi\u00f3 quan hi haja error de seguretat: qualsevol error de seguretat de l'aplicaci\u00f3 hauria de donar lloc a la finalitzaci\u00f3 de la sessi\u00f3.</p> </li> <li> <p>Fes caducar la sessi\u00f3 quan siga de llarga durada: obligaci\u00f3 a reautentificar la sessi\u00f3, que tot i estar actiu ha arribat al temps m\u00e0xim perm\u00e8s, p.e. unes poques hores.</p> </li> <li> <p>Elimineu la galleta de sessi\u00f3 en destruir una sessi\u00f3.</p> </li> </ol>"},{"location":"04-web-programming/04-04-best-practices/#identificador-de-sessio","title":"Identificador de sessi\u00f3","text":"<ol> <li> <p>Utilitzeu nom\u00e9s galetes per propagar l\u2019ID de sessi\u00f3, ja que quan es transmeten mitjan\u00e7ant un par\u00e0metre URL, les sol\u00b7licituds GET poden ser emmagatzemades a l\u2019historial del navegador, a la mem\u00f2ria cau i als marcadors. Aleshores tamb\u00e9 es pot visualitzar f\u00e0cilment.</p> </li> <li> <p>Regenereu l'identificador de sessi\u00f3: regenereu (substitu\u00efu-ne per un de nou) l'identificador de sessi\u00f3, almenys cada cop que canvie el nivell de privilegi de l'usuari. Generalment es pot regenerar abans de qualsevol transacci\u00f3 important, despr\u00e9s d\u2019un determinat nombre de sol\u00b7licituds o despr\u00e9s d\u2019un per\u00edode de temps.</p> </li> <li> <p>Comproveu si l'identificador de sessi\u00f3 \u00e9s v\u00e0lid (de mida i tipus previst) i que ha estat generat per l'aplicaci\u00f3 i no proporcionat per l'usuari.</p> </li> <li> <p>L'identificador de sessi\u00f3 hauria de ser adequadament llarg, imprevisible, dif\u00edcil de reproduir i creat a partir de fonts aleat\u00f2ries d'alta qualitat.</p> </li> </ol>"},{"location":"04-web-programming/04-04-best-practices/#cookie-de-sessio","title":"Cookie de sessi\u00f3","text":"<ol> <li> <p>Definiu el domini de la galleta a quelcom m\u00e9s espec\u00edfic que el domini de primer nivell.</p> </li> <li> <p>No emmagatzeneu res a la galleta (almenys qualsevol informaci\u00f3 sensible com el nom d\u2019usuari o la contrasenya) sols\u2019ID de sessi\u00f3.</p> </li> <li> <p>Definiu el senyalador nom\u00e9s http per desactivar la captura de l'identificador de sessi\u00f3 mitjan\u00e7ant XSS.</p> </li> <li> <p>Quan siga possible, utilitzeu un xifrat fort (SSL) i l'atribut <code>cookie_secure</code> per permetre la transmissi\u00f3 de cookies nom\u00e9s a trav\u00e9s de https.</p> </li> </ol>"},{"location":"04-web-programming/04-04-best-practices/#emmagatzematge-de-dades-de-sessio","title":"Emmagatzematge de dades de sessi\u00f3","text":"<ol> <li> <p>Determineu on s'emmagatzemen les dades de sessi\u00f3 i si es tracta d\u2019un sistema de fitxers o d\u2019una base de dades, determineu qui m\u00e9s podria tenir acc\u00e9s a aquestes dades.</p> </li> <li> <p>Quan s'emmagatzemen les dades de sessi\u00f3 en fitxers, assegureu-vos que l'aplicaci\u00f3 est\u00e0 configurada per utilitzar un directori privat independent (per exemple, la directiva <code>session.save_path</code>). Utilitzeu els permisos del sistema de fitxers per protegir aquests fitxers d\u2019observaci\u00f3 o modificaci\u00f3 d\u2019usuaris diferents dels comptes necessaris per operar el servidor web i les aplicacions. Si aix\u00f2 no \u00e9s possible, cal xifrar les dades de la sessi\u00f3 o contenir nom\u00e9s dades no sensibles. Tingueu en compte que PHP utilitza de manera predeterminada el directori temporal del sistema p\u00fablic.</p> </li> <li> <p>Totes les variables de sessi\u00f3 s\u2019han de validar i sanejar per assegurar-se que siguem correctes i que no cont\u00e9 car\u00e0cters inesperats.</p> </li> </ol>"},{"location":"04-web-programming/04-04-best-practices/#no-coneixer-les-contrasenyes","title":"No con\u00e8ixer les contrasenyes","text":"<p>Al final, tothom crea una aplicaci\u00f3 PHP que es basa en la sessi\u00f3 d\u2019usuari. Els noms d\u2019usuari i les contrasenyes s\u2019emmagatzemen en una base de dades i s\u2019utilitzen posteriorment per autentificar els usuaris despr\u00e9s de l\u2019inici de sessi\u00f3.</p> <p>\u00c9s important que fer hash de les contrasenyes correctament abans d\u2019emmagatzemar-les. El hashing i el xifrat s\u00f3n dues coses molt diferents que sovint es confonen.</p> <p>El hashing \u00e9s una funci\u00f3 irreversible i unidireccional. \u00c9s produeix una cadena de longitud fixa que no es pot invertir. Aix\u00f2 vol dir que podeu comparar un hash amb un altre per determinar si tots dos provenien de la mateixa cadena font, per\u00f2 no podeu determinar la cadena original. Si les contrasenyes no s'emmagatzemen amb hashing i un tercer no autoritzat accedeix a la vostra base de dades, tots els comptes d'usuari estaran compromesos.</p> <p>A difer\u00e8ncia del hashing, el xifrat \u00e9s reversible (sempre que tingueu la clau). El xifratge \u00e9s \u00fatil en altres \u00e0rees, per\u00f2 \u00e9s una estrat\u00e8gia deficient per emmagatzemar contrasenyes de forma segura.</p> <p>Les contrasenyes tamb\u00e9 han de salar-se individualment afegint una cadena aleat\u00f2ria a cada contrasenya abans d'aplicar hashing. Aix\u00f2 evita els atacs de diccionari i l'\u00fas de \"taules de l'arc de Sant Mart\u00ed\" (una llista inversa de hash criptogr\u00e0fics per a contrasenyes comunes.)</p> <p>El hashing i el salat s\u00f3n vitals, ja que sovint els usuaris utilitzen la mateixa contrasenya per a diversos serveis i la qualitat de la contrasenya \u00e9s deficient.</p> <p>Addicionalment, haureu d'utilitzar un algorisme especialitzat en hashing en lloc d'una funci\u00f3 de hash criptogr\u00e0fic de prop\u00f2sit general i r\u00e0pid (per exemple, SHA256). La llista breu d'algorismes de hashing de contrasenya acceptables (a juny de 2018) a utilitzar s\u00f3n:</p> <ul> <li>Argon2 (disponible a PHP 7.2 i versions posteriors)</li> <li>Scrypt</li> <li>Bcrypt (PHP us proporciona aquesta; vegeu m\u00e9s avall)</li> <li>PBKDF2 amb HMAC-SHA256 o HMAC-SHA512</li> </ul> <p>Afortunadament, avui en dia PHP ens ho facilita.</p>"},{"location":"04-web-programming/04-04-best-practices/#hashing-de-contrasenyes-amb-password_hash","title":"Hashing de contrasenyes amb <code>password_hash</code>","text":"<p>A PHP 5.5 s'ha introdu\u00eft <code>password_hash()</code>. En aquest moment est\u00e0 utilitzant BCrypt, l'algorisme m\u00e9s fort actualment suportat per PHP. Tot i aix\u00f2, s'actualitzar\u00e0 en el futur per donar suport a m\u00e9s algoritmes. La biblioteca de <code>password_compat</code> es va crear per proporcionar una compatibilitat de PHP&gt; = 5.3.7.</p> <p>A continuaci\u00f3 hem aplicat hashing a una cadena i, a continuaci\u00f3, apliquem el hashing contra una nova cadena. Com que les dues cadenes d'origen s\u00f3n diferents (\"contrasenya-secreta\" i \"contrasenya-err\u00f2nia\"), aquesta sessi\u00f3 fallar\u00e0.</p> <pre><code>$passwordHash = password_hash(\"contrasenya-secreta\", PASSWORD_DEFAULT);\nif (password_verify(\"contrasenya-err\u00f2nia\", $passwordHash)) {\n// Contrasenya correcta\n} else {\n// Contrasenya incorrecta\n}\n</code></pre> <p><code>password_hash()</code> s'ocupa de la salificaci\u00f3 de contrasenyes. La sal s'emmagatzema, juntament amb l'algorisme i el \"cost\", com a part del hash. <code>password_verify()</code> extreu aix\u00f2 per determinar com comprovar la contrasenya, de manera que no necessiteu un camp de base de dades independent per emmagatzemar les vostres sals.</p> <p>PASSWORD_DEFAULT</p> <p>Actualment utilitza l\u2019algoritme bcrypt (predeterminat a partir de PHP 5.5.0). Observeu que aquesta constant est\u00e0 pensada per a adaptar-se sempre que hi haja un algoritme nou i m\u00e9s fort a PHP. Per aquesta ra\u00f3, la longitud del resultat d\u2019utilitzar aquest identificador pot canviar amb el temps. Per tant, es recomana emmagatzemar el resultat en una columna d\u2019una base de dades de m\u00e9s de 60 caracters (255 caracters seria una bona elecci\u00f3).</p>"},{"location":"04-web-programming/04-04-best-practices/#recursos","title":"Recursos","text":"<ul> <li>The 2018 Guide to Building Secure PHP Software</li> <li>PHP: The Right Way. Security</li> <li>Session Management Basics</li> <li>Ultimate PHP Security Best Practices</li> <li>PHP Session Security Best Practices</li> <li>PHP Sessions in depth</li> <li>Session Management Cheat Sheet</li> </ul>"},{"location":"04-web-programming/04-05-http-authentication/","title":"Autenticaci\u00f3 d'usuaris i control d'acc\u00e9s","text":"<p>Moltes vegades \u00e9s important verificar la identitat dels dos extrems d'una comunicaci\u00f3, hi ha m\u00e8todes per identificar tant al servidor en el qual s'allotja el lloc web, com a l'usuari del navegador que es troba en l'altre extrem.</p> <p>Els llocs web que necessiten emprar identificaci\u00f3 de servidor, com les botigues o els bancs, utilitzen el protocol HTTPS. Aquest protocol requereix d'un certificat digital v\u00e0lid, signat per una autoritat fiable, que \u00e9s verificat pel navegador quan s'accedeix a la p\u00e0gina web. A m\u00e9s, HTTPS utilitza m\u00e8todes de xifrat per crear un canal segur entre el navegador i el servidor, de tal manera que no es puga interceptar la informaci\u00f3 que es transmet pel mateix.</p> <p>Per identificar els usuaris que visiten un lloc web, es poden utilitzar diferents m\u00e8todes com el DNI digital o certificats digitals d'usuari (document digital que cont\u00e9 informaci\u00f3 sobre l'usuari com el nom o l'adre\u00e7a. Aquesta informaci\u00f3 est\u00e0 signada per una altra entitat, anomenada entitat certificadora, que ha de ser de confian\u00e7a i garanteix que la informaci\u00f3 que cont\u00e9 \u00e9s certa), per\u00f2 el m\u00e9s est\u00e8s \u00e9s sol\u00b7licitar a l'usuari certa informaci\u00f3 que nom\u00e9s ell coneix: la combinaci\u00f3 d'un nom d'usuari i una contrasenya.</p> <p>En les unitats anteriors vas aprendre a utilitzar aplicacions web per gestionar informaci\u00f3 emmagatzemada en bases de dades. En la majoria dels casos \u00e9s important implantar en aquest tipus de aplicacions web, les que accedeixen a bases de dades, algun mecanisme de control d'acc\u00e9s que obligui a l'usuari a identificar-se. Un cop identificat, es pot limitar l'\u00fas que pot fer de la informaci\u00f3.</p> <p>Aix\u00ed, pot haver llocs web en els quals els usuaris autenticats poden utilitzar nom\u00e9s una part de la informaci\u00f3 (com els bancs, que permeten als seus clients accedir \u00fanicament a la informaci\u00f3 relativa als seus comptes). Altres llocs web necessiten separar en grups als usuaris autentificats, de tal manera que la informaci\u00f3 a la qual accedeix un usuari dep\u00e8n del grup en qu\u00e8 aquest es trobe. Per exemple, una aplicaci\u00f3 de gesti\u00f3 d'una empresa pot tenir un grup d'usuaris als qui permet visualitzar la informaci\u00f3, i un altre grup d'usuaris que, a m\u00e9s de visualitzar la informaci\u00f3, tamb\u00e9 la poden modificar.</p> <p>Autenticaci\u00f3, control d'acc\u00e9s i seguretat en les comunicacions</p> <p>Has distingir l'autenticaci\u00f3 dels usuaris i el control d'acc\u00e9s, de la utilitzaci\u00f3 de mecanismes per assegurar les comunicacions entre l'usuari de el navegador i el servidor web. Encara que tots dos aspectes solen anar units, s\u00f3n independents.</p> <p>En els exemples d'aquesta unitat, la informaci\u00f3 d'autenticaci\u00f3 (nom i contrasenya dels usuaris) s'envia en text pla des del navegador fins al servidor web. Aquesta pr\u00e0ctica \u00e9s altament insegura i mai s'ha d'usar sense un protocol com HTTPS que permeta xifrar les comunicacions amb el lloc web. No obstant aix\u00f2, la configuraci\u00f3 de servidors web que permeten fer servir el protocol HTTPS per xifrar la informaci\u00f3 que reben i transmeten no forma part dels continguts d'aquest m\u00f2dul. Per aquest motiu, durant aquesta unitat utilitzarem \u00fanicament el protocol no segur HTTP.</p>"},{"location":"04-web-programming/04-05-http-authentication/#mecanismes-dautenticacio-via-http","title":"Mecanismes d'autenticaci\u00f3 via HTTP","text":"<p>El protocol HTTP ofereix un m\u00e8tode senzill per autenticar els usuaris. El proc\u00e9s \u00e9s el seg\u00fcent:</p> <ul> <li>El servidor web ha de proveir algun m\u00e8tode per definir els usuaris que s'utilitzaran i com es poden autentificar. A m\u00e9s, s'hauran de definir els recursos als quals es restringeix l'acc\u00e9s i quina llista de control d'acc\u00e9s (ACL - llista de permisos sobre un objecte (fitxer, directori, etc.), que indica quins usuaris poden utilitzar l'objecte i les accions concretes que poden realitzar amb el mateix (lectura, escriptura, esborrat, etc.)) s'aplica a cada un.</li> <li>Quan un usuari no autenticat intenta accedir a un recurs restringit, el servidor web respon amb un error de \"Acc\u00e9s no autoritzat\" (codi 401).</li> <li>El navegador rep l'error i obre una finestra per sol\u00b7licitar a l'usuari que es autentifiqui mitjan\u00e7ant el seu nom i contrasenya.</li> <li>La informaci\u00f3 d'autenticaci\u00f3 de l'usuari s'envia a servidor, que la verifica i decideix si permet o no l'acc\u00e9s a el recurs sol\u00b7licitat. Aquesta informaci\u00f3 es mant\u00e9 en el navegador per utilitzar-se en posteriors peticions a aquest servidor.</li> </ul> <p>Al servidor web Apache, el que has estat utilitzant en anteriors unitats, hi ha una utilitat en l\u00ednia d'ordres, <code>htpasswd</code>, que permet emmagatzemar en un fitxer una llista d'usuaris i els seus respectives contrasenyes. La informaci\u00f3 relativa a les contrasenyes s'emmagatzema xifrada; tot i aix\u00ed, \u00e9s convenient crear aquest fitxer en un lloc no accessible pels usuaris de servidor web.</p> <p>http://httpd.apache.org/docs/2.0/es/howto/auth.html</p> <p>Per exemple, per crear el fitxer d'usuari i afegir-li el usuari \"dwes\", pots fer:</p> <pre><code>sudo htpasswd -c users dwes\n</code></pre> <p>i introduir la contrasenya corresponent a aquest usuari.</p> <p>L'opci\u00f3 <code>-c</code> indica que s'ha de crear el fitxer, per la qual cosa nom\u00e9s haur\u00e0s de fer-la servir quan introdueixis el primer usuari i contrasenya. Fixa't que en l'exemple anterior, el fitxer es crea a la ruta /etc/apache2/users, que en principi no \u00e9s accessible via web.</p> <p>Per indicar-li a l'servidor Apache quins recursos tenen acc\u00e9s restringit, una opci\u00f3 \u00e9s crear un fitxer <code>.htaccess</code> en el directori en qu\u00e8 es trobin, amb les seg\u00fcents directives:</p> <pre><code>AuthName \"Contingut restringit\"\nAuthType Basic\nAuthUserFile /etc/apache2/users\nrequereix valid-user\n</code></pre> <p>El significat de cadascuna de les directives anteriors \u00e9s el seg\u00fcent:</p> Directiva significat AuthName Nom de domini que es far\u00e0 servir en l'autenticaci\u00f3. Si el client s'autentica correctament, aquesta mateixa informaci\u00f3 d'autenticaci\u00f3 s'utilitzar\u00e0 autom\u00e0ticament en la resta de les p\u00e0gines de el mateix domini. AuthType M\u00e8tode d'autenticaci\u00f3 que es far\u00e0 servir. A m\u00e9s de l'm\u00e8tode Basic, Apache tamb\u00e9 permet utilitzar el m\u00e8tode Digest. AuthUserFile Cam\u00ed de l'arxiu de credencials que has creat amb htpasswd. Require Permet indicar que nom\u00e9s puguin accedir alguns usuaris o grups d'usuaris concrets. Si indiquem \"valid-user\", podran accedir tots els usuaris que es s'autentifiquin correctament. <p>A m\u00e9s, haur\u00e0s de assegurar-te que en la configuraci\u00f3 d'Apache s'utilitza la directiva <code>AllowOverride</code> perqu\u00e8 s'aplique correctament la configuraci\u00f3 que figura en els fitxers <code>.htaccess</code>. M\u00e9s detalls en http://httpd.apache.org/docs/2.0/es/mod/core.html#allowoverride</p> <p>A l'incloure l'opci\u00f3 <code>-c</code> el que fem \u00e9s crear un nou fitxer, amb la qual cosa eliminem el contingut anterior del mateix.</p>"},{"location":"04-web-programming/04-05-http-authentication/#mecanismes-dautenticacio","title":"Mecanismes d'autenticaci\u00f3","text":"<p>Des PHP pots accedir a la informaci\u00f3 d'autenticaci\u00f3 HTTP que ha introdu\u00eft l'usuari utilitzant l'array superglobal <code>$_SERVER</code>.</p> valor contingut <code>$_SERVER['PHP_AUTH_USER']</code> Nom d'usuari que s'ha introdu\u00eft. <code>$_SERVER['PHP_AUTH_PW']</code> Clau introdu\u00efda. <code>$_SERVER['AUTH_TYPE']</code> M\u00e8tode HTTP usat per autentificar. Pot ser Basic o Digest. <p>\u00c9s a dir, que si crees una p\u00e0gina web que mostre els valors d'aquestes variables, i prepares el servidor web per utilitzar autenticaci\u00f3 HTTP, quan accedisques a aquesta p\u00e0gina amb l'usuari \"dwes\" obtindr\u00e0s alguna cosa com el seg\u00fcent:</p> <pre><code>&lt;!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \"http://www.w3.org/TR/html4/loose.dtd \"&gt;\n&lt;!-- Desenvolupament Web a Entorn Servidor --&gt;\n&lt;!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --&gt;\n&lt;!-- Exemple: Autenticaci\u00f3 HTTP --&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"content-type\" content=\"text / html; charset = UTF-8\" /&gt;\n&lt;title&gt;Exemple Tema 4: Autenticaci\u00f3 HTTP&lt;/title&gt;\n&lt;link href=\"dwes.css\" rel=\"stylesheet\" type=\"text / css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\n    echo \"Nom d'usuari:\". $_ SERVER['PHP_AUTH_USER']. \"&lt;br /&gt;\"; echo\n    \"Contrasenya:\". $_ SERVER['PHP_AUTH_PW']. \"&lt;br /&gt;\"; echo \"M\u00e8tode\n    d'autenticaci\u00f3:\". $_SERVER['AUTH_TYPE']. \"&lt;br /&gt;\"; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Si no introdueixes un usuari/contrasenya v\u00e0lids, el navegador et mostrar\u00e0 l'error 401.</p> <p>A m\u00e9s, en PHP pots utilitzar la funci\u00f3 <code>header</code> per for\u00e7ar que el servidor envie un error de \"Acc\u00e9s no autoritzat\" (codi 401). D'aquesta manera no cal utilitzar fitxers <code>.htaccess</code> per indicar-li a Apache quins recursos estan restringits. En el seu lloc, pots afegir les seg\u00fcents l\u00ednies en les teves p\u00e0gines PHP:</p> <pre><code>&lt;?php\nif (!isset($_ SERVER['PHP_AUTH_USER'])) {\nheader ('WWW-Authenticate: Basic Realm = \"Contingut restringit\"');\nheader ('HTTP/1.0 401 Unauthorized');\necho \"Usuari no reconegut!\";\nexit;\n}\n?&gt;\n</code></pre> <p>La funci\u00f3 <code>header</code> envia cap\u00e7aleres HTTP (bloc de dades que forma part de l'protocol HTTP i s'envia abans de la informaci\u00f3 pr\u00f2pia que es transmet. Permet especificar codis d'estat, accions requerides a servidor, o el tipus d'informaci\u00f3 que es transmet), per\u00f2 s'ha d'utilitzar abans que es mostre res per pantalla. En cas contrari, obtindr\u00e0s un error. M\u00e9s informaci\u00f3: http://es.php.net/manual/es/function.header.php</p> <p>Amb el codi anterior, la p\u00e0gina envia un error 401, el que for\u00e7a al navegador a sol\u00b7licitar les credencials d'acc\u00e9s (nom d'usuari i contrasenya). Si s'introdueixen, s'executa la resta de la p\u00e0gina i es mostra el seu contingut. En aquest cas, caldria afegir algun codi per comprovar que el nom d'usuari i contrasenya s\u00f3n v\u00e0lids, tal com veurem a continuaci\u00f3. Si es prem el bot\u00f3 \"Cancel\", es mostra el missatge d'error que s'indica. Modifica la p\u00e0gina anterior utilitzant la funci\u00f3 header perqu\u00e8 sol\u00b7liciti les credencials a l'usuari.</p> <p>Haur\u00e0s de crear una p\u00e0gina similar a l'anterior, i afegir el codi per for\u00e7ar l'error 401 abans de qualsevol altre.</p> <pre><code>&lt;!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \" http://www.w3.org/TR/html4/loose.dtd \"&gt;\n&lt;!-- Desenvolupament Web a Entorn Servidor --&gt;\n&lt;!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --&gt;\n&lt;!-- Exemple: Funci\u00f3 header per autenticaci\u00f3 HTTP --&gt;\n&lt;?php\n    if (!isset($_SERVER['PHP_AUTH_USER'])) {\n        header('WWW-Authenticate: Basic Realm = \"Contingut restringit\"');\n        header('HTTP / 1.0 401 Unauthorized');\n        echo \"Usuari no reconegut!\";\n        exit;\n    }\n?&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\"&gt;\n&lt;title&gt; Exercici: Funci\u00f3 header per autenticaci\u00f3 HTTP &lt;/ title&gt;\n&lt;link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\n    echo \"Nom d'usuari:\". $_ SERVER['PHP_AUTH_USER']. \"&lt;br /&gt;\";\n    echo \"Contrasenya:\". $_ SERVER['PHP_AUTH_PW']. \"&lt;br /&gt;\";\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"04-web-programming/04-05-http-authentication/#incorporacio-de-metodes-dautenticacio-a-una-aplicacio-web","title":"Incorporaci\u00f3 de m\u00e8todes d'autenticaci\u00f3 a una aplicaci\u00f3 web","text":"<p>Si utilitzes la funci\u00f3 <code>header</code> per for\u00e7ar el navegador a sol\u00b7licitar credencials HTTP, l'usuari introduir\u00e0 un nom i una contrasenya. Per\u00f2 el servidor no ha de verificar aquesta informaci\u00f3; haur\u00e0s de ser tu qui prove\u00efsca un m\u00e8tode per comprovar que les credencials que ha introdu\u00eft l'usuari s\u00f3n correctes.</p> <p>El m\u00e8tode m\u00e9s simple \u00e9s incloure en el codi PHP de la teva p\u00e0gina les sent\u00e8ncies necess\u00e0ries per comparar les dades introdu\u00efdes amb altres dades fixos. Per exemple, per a permetre l'acc\u00e9s a un usuari \"dwes\" amb contrasenya \"abc123.\", pots fer:</p> <pre><code>if ($_SERVER['PHP_AUTH_USER']!='dwes' || $_SERVER['PHP_AUTH_PW']!='abc123.') {\nheader('WWW-Authenticate: Basic Realm = \"Contingut restringit\"');\nheader('HTTP / 1.0 401 Unauthorized');\necho \"Usuari no reconegut!\";\nexit;\n}\n?&gt;\n</code></pre> <p>Recorda que el codi PHP no s'envia al navegador, de manera que la informaci\u00f3 d'autenticaci\u00f3 que introdueixis en el codi no ser\u00e0 visible per l'usuari. No obstant aix\u00f2, aix\u00f2 far\u00e0 el teu codi menys portable. Si necessites modificar el nom d'usuari o la contrasenya, haur\u00e0s de fer modificacions en el codi. A m\u00e9s, no podr\u00e0s permetre a l'usuari introduir la seva pr\u00f2pia contrasenya.</p> <p>Una soluci\u00f3 millor \u00e9s utilitzar un emmagatzematge extern per als noms d'usuari i les seves contrasenyes. Per aix\u00f2 podries emprar un fitxer de text, o millor encara, una base de dades. La informaci\u00f3 d'autenticaci\u00f3 podr\u00e0 estar a\u00efllada en la seva pr\u00f2pia base de dades, o compartir espai d'emmagatzematge amb les dades que utilitze la teva aplicaci\u00f3 web.</p> <p>Si vols emmagatzemar la informaci\u00f3 dels usuaris a la base de dades \"<code>dwes</code>\", has de crear una nova taula en la seva estructura. Per a aix\u00f2, revisa i executa aquestes sent\u00e8ncies SQL.</p> <pre><code>-- Seleccionem la base de dades\nUSE dwes;\n-- Creem la taula\nCREATE TABLE usuaris (\nusuari VARCHAR (20) NOT NULL PRIMARY KEY,\ncontrasenya VARCHAR (32) NOT NULL\n) ENGINE = InnoDB;\n-- Creem l'usuari dwes\nINSERT INTO usuaris (usuari, contrasenya) VALUES\n('dwes', 'e8dc8ccd5e5f9e3a54f07350ce8a2d3d');\n</code></pre> <p>Tot i que es podrien emmagatzemar les contrasenyes en text pla, \u00e9s millor fer-ho en format encriptat. En l'exemple anterior, per a l'usuari \"dwes\" s'emmagatzema el hash MD5 (m\u00e8tode per generar un resum d'un text o un document, de tal manera que a partir de l'resum obtingut no \u00e9s possible recuperar el text original ni estar un altre text a partir de el qual s'obtingui el mateix resum. Es diu hash a el resum obtingut a l'aplicar una funci\u00f3 hash. Una de les funcions hash m\u00e9s esteses \u00e9s MD5, que genera 128 bits com a resum (normalment es representa mitjan\u00e7ant una cadena de text de 28 car\u00e0cters o mitjan\u00e7ant 32 d\u00edgits hexadecimals)) corresponent a la contrasenya \"abc123.\". En PHP pots utilitzar la funci\u00f3 md5 per calcular el hash MD5 d'una cadena de text.</p> <p>http://es.php.net/manual/es/function.md5.php</p> <pre><code>// Si l'usuari encara no s'ha entrat, demanem les credencials\nif (!isset ($_SERVER [ 'PHP_AUTH_USER'])) {\n    header ('WWW-Authenticate: Basic realm = \"Contingut restringit\"');\n    header (\"HTTP/1.0 401 Unauthorized\");\n    exit;\n}\n// Si ja ha enviat les credencials, les vam comprovar amb la base de dades\nelse {\n    // Connectem a la base de dades\n    @$dwes = new mysqli(\"localhost\", \"dwes\", \"abc123.\", \"Dwes\");\n    $error = $dwes-&gt; connect_errno;\n    // Si es va establir la connexi\u00f3\n    if ($error == null) {\n        // Executem la consulta per comprovar si existeix\n        // aquesta combinaci\u00f3 d'usuari i contrasenya\n        $sql \u200b\u200b= \"SELECT usuari FROM usuaris\n            WHERE usuari = '$_ SERVER[PHP_AUTH_USER]' AND\n            contrasenya = md5 ( '$_ SERVER[PHP_AUTH_PW]') \";\n        $resultat = $dwes-&gt; query ($sql);\n        // Si no existeix, es tornen a demanar les credencials\n        if ($resultat-&gt; num_rows == 0) {\n            header ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"');\n            header ( \"HTTP / 1.0 401 Unauthorized\");\n            exit;\n        }\n        $resultat-&gt;close();\n        $dwes-&gt;close();\n    }\n}\n\n&lt;!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \"http://www.w3.org/TR/html4/loose.dtd \" &gt;\n&lt;!-- Desenvolupament Web a Entorn Servidor --&gt;\n&lt;!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --&gt;\n&lt;!-- Exemple: Utilitzaci\u00f3 de MySQL per autenticaci\u00f3 HTTP --&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\"&gt;\n&lt;title&gt; Exemple Tema 4: Utilitzaci\u00f3 de MySQL per autenticaci\u00f3 HTTP &lt;/ title&gt;\n&lt;link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\necho \"Nom d'usuari:\". $_ SERVER [ 'PHP_AUTH_USER']. \"&lt;br /&gt;\";\necho \"Hash de la contrasenya:\" .md5 ($_ SERVER [ 'PHP_AUTH_PW']). \"&lt;br /&gt;\";\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"04-web-programming/04-05-http-authentication/#galetes-cookies","title":"Galetes (cookies)","text":"<p>Una galleta \u00e9s un fitxer de text que un lloc web guarda a l'entorn de l'usuari de navegador. El seu \u00fas m\u00e9s t\u00edpic \u00e9s l'emmagatzematge de les prefer\u00e8ncies de l'usuari (per exemple, l'idioma en que s'han de mostrar les p\u00e0gines), perqu\u00e8 no hagi de tornar a indicar-les la propera vegada que visiteu el lloc.</p> <p>Si utilitzes Firefox com a navegador, pots accedir a <code>Desenvolupador web</code> \u2013 <code>Inspector d'emmagatzematge</code> des del men\u00fa principal. Entre les seves caracter\u00edstiques et permet consultar i editar les galetes emmagatzemades en el mateix.</p> <p></p> <p>En PHP, per emmagatzemar una galleta al navegador de l'usuari, pots utilitzar la funci\u00f3 <code>setcookie</code>. L'\u00fanic par\u00e0metre obligatori que has de fer servir \u00e9s el nom de la galleta, per\u00f2 admet diversos par\u00e0metres m\u00e9s opcionals.</p> <p>setcookie</p> <p>Per a m\u00e9s informaci\u00f3 consulta: https://www.php.net/manual/es/function.setcookie.php.</p> <p>Per exemple, si vols emmagatzemar en una galleta el nom d'usuari que es va transmetre a les credencials HTTP (\u00e9s nom\u00e9s un exemple, no \u00e9s en absolut aconsellable emmagatzemar informaci\u00f3 relativa a la seguretat en les galetes), pots fer:</p> <pre><code>setcookie (\"nom_usuari\", $_SERVER['PHP_AUTH_USER'], time () + 3600);\n</code></pre> <p>Els dos primers par\u00e0metres s\u00f3n el nom de la galleta i el seu valor. El tercer \u00e9s la data de caducitat de la mateixa (una hora des del moment en qu\u00e8 s'execute). En cas de no figurar aquest par\u00e0metre, la galleta s'eliminar\u00e0 quan es tanqui el navegador. Tingues en compte que tamb\u00e9 es poden aplicar restriccions a les p\u00e0gines de el lloc que poden accedir a una galleta en funci\u00f3 de la ruta.</p> <p>Les galetes es transmeten entre el navegador i el servidor web de la mateixa manera que les credencials que acabes de veure; utilitzant les cap\u00e7aleres de el protocol HTTP. Per aix\u00f2, les sent\u00e8ncies <code>setcookie</code> s'han d'enviar abans que el navegador mostri cap informaci\u00f3 a pantalla.</p> <p>El proc\u00e9s de recuperaci\u00f3 de la informaci\u00f3 que emmagatzema una galleta \u00e9s molt simple. quan accedeixes a un lloc web, el navegador li envia de forma autom\u00e0tica tot el contingut de les galetes que emmagatzemi relatives a aquest lloc en concret. Des PHP pots accedir a aquesta informaci\u00f3 per mitj\u00e0 de l'array <code>$_COOKIE</code>.</p> <p>important</p> <p>Sempre que utilitzes galetes en una aplicaci\u00f3 web, heu de tenir en compte que en \u00faltima inst\u00e0ncia la seva disponibilitat est\u00e0 controlada pel client. Per exemple, alguns usuaris deshabiliten les galetes al navegador perqu\u00e8 pensen que la informaci\u00f3 que emmagatzemen pot suposar un potencial problema de seguretat. O la informaci\u00f3 que emmagatzemen pot arribar a perdre perqu\u00e8 el usuari decideix formatar l'equip o simplement eliminar-les de sistema.</p> <p>Si un cop emmagatzemada una galleta al navegador vols eliminar abans que expire, pots utilitzar la mateixa funci\u00f3 <code>setcookie</code> per\u00f2 indicant una data de caducitat anterior a l'actual.</p> <p>Sobre el mateix exercici anterior, emmagatzema en una galleta l'\u00faltim instant en qu\u00e8 el usuari va visitar la p\u00e0gina. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de la seva anterior visita.</p> <p>Revisa la soluci\u00f3 proposada. Haur\u00e0s utilitzar la funci\u00f3 <code>setcookie</code> per guardar l'instant de la seva anterior visita i mostrar el seu contingut utilitzant l'array <code>$_COOKIE</code>.</p> <pre><code>// Si l'usuari encara no s'ha entrat, demanem les credencials\nif (!isset ($_ SERVER['PHP_AUTH_USER'])) {\nheader ('WWW-Authenticate: Basic realm = \"Contingut restringit\"');\nheader (\"HTTP / 1.0 401 Unauthorized\");\nexit;\n}\n// Si ja ha enviat les credencials, les vam comprovar amb la base de dades\nelse {\n// Connectem a la base de dades\n@$dwes = new mysqli ( \"localhost\", \"dwes\", \"abc123.\", \"Dwes\");\n$error = $dwes-&gt;connect_errno;\n// Si es va establir la connexi\u00f3\nif ($error == null) {\ndate_default_timezone_set('Europe/Madrid');\n// Executem la consulta per comprovar si existeix\n// aquesta combinaci\u00f3 d'usuari i contrasenya\n$sql \u200b\u200b= \"SELECT usuari FROM usuaris\n            WHERE usuari = '${_ SERVER [' PHP_AUTH_USER ']}' AND\n            contrasenya = md5 ( '${_ SERVER [' PHP_AUTH_PW ']}') \";\n$resultat = $dwes-&gt; query ($sql);\n// Si no existeix, es tornen a demanar les credencials\nif ($resultat-&gt; num_rows == 0) {\nheader ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"');\nheader ( \"HTTP / 1.0 401 Unauthorized\");\nexit;\n} else {\nif (isset($_ COOKIE [ 'ultimo_login'])) {\n$ultimo_login = $_COOKIE [ 'ultimo_login'];\n}\nsetcookie ( \"ultimo_login\", time (), time () + 3600);\n}\n$resultat-&gt;close();\n$dwes-&gt;close();\n}\n}\n?&gt;\n&lt;!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \" http://www.w3.org/TR/html4/loose.dtd \"&gt;\n&lt;!-- Desenvolupament Web a Entorn Servidor --&gt;\n&lt;!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --&gt;\n&lt;!-- Exemple: Galetes al autenticaci\u00f3 HTTP --&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\"&gt;\n&lt;title&gt; Exemple Tema 4: Galetes al autenticaci\u00f3 HTTP &lt;/ title&gt;\n&lt;link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\nif ($error == null) {\necho \"Nom d'usuari:\". $_ SERVER['PHP_AUTH_USER']. \"&lt;br /&gt;\";\necho \"Hash de la contrasenya:\" .md5 ($_ SERVER [ 'PHP_AUTH_PW']). \"&lt;br /&gt;\";\nif (isset ($ultimo_login))\necho \"Darrer login:\". date ( \"d/m/ i \\ a \\ l \\ a \\ s H: i\", $ultimo_login);\nelse\necho \"Benvingut. Aquesta \u00e9s la seva primera visita.\";\n}\nelse\necho \"S'ha produ\u00eft l'error $error. &lt;br /&gt;\";\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Reflexiona</p> <p>Quina \u00e9s la durada per defecte d'una galleta si no s'indica la data de caducitat, com en la seg\u00fcent crida a la funci\u00f3 setcookie?</p> <pre><code>setcookie (\"idioma\", \"espanyol\");\n</code></pre> <ol> <li>Fins que es tanque el navegador de l'usuari.</li> <li>1 hora.</li> </ol>"},{"location":"04-web-programming/04-05-http-authentication/#maneig-de-sessions","title":"Maneig de sessions","text":"<p>Com acabes de veure, una forma per guardar informaci\u00f3 particular de cada usuari \u00e9s utilitzar galetes (cookies). No obstant aix\u00f2, hi ha diversos problemes associats a les galetes, com el nombre d'elles que admet el navegador, o la seva grand\u00e0ria m\u00e0xima. Per solucionar aquests inconvenients, existeixen les sessions. El terme sessi\u00f3 fa refer\u00e8ncia al conjunt d'informaci\u00f3 relativa a un usuari concret.</p> <p>Aquesta informaci\u00f3 pot ser tan simple com el nom de l'usuari mateix, o m\u00e9s complexa, com els articles que ha dipositat a la cistella de compra d'una botiga en l\u00ednia.</p> <p>Cada usuari diferent d'un lloc web t\u00e9 la seva pr\u00f2pia informaci\u00f3 de sessi\u00f3. Per distingir una sessi\u00f3 d'una altra s'usen els identificadors de sessi\u00f3 (SID). Un SID \u00e9s un atribut que s'assigna a cada un dels visitants d'un lloc web i l'identifica. D'aquesta manera, si el servidor web coneix el SID d'un usuari, pot relacionar-lo amb tota la informaci\u00f3 que posseeix sobre ell, que es mant\u00e9 en la sessi\u00f3 de l'usuari. Aquesta informaci\u00f3 s'emmagatzema en el servidor web, generalment en fitxers tot i que tamb\u00e9 es poden utilitzar altres mecanismes d'emmagatzematge com bases de dades. Com ja haur\u00e0s suposat, la q\u00fcesti\u00f3 ara \u00e9s: \u00bfi on s'emmagatzema aquest SID, identificador de la sessi\u00f3, que \u00e9s \u00fanic per a cada usuari? Doncs hi ha dues maneres de mantenir el SID entre les p\u00e0gines d'un lloc web que visita l'usuari:</p> <ul> <li>Utilitzant galetes.</li> <li>Propagant el SID en un par\u00e0metre de la URL. El SID s'afegeix com una part m\u00e9s de la URL, de la forma:</li> </ul> <p>http://www.misitioweb.com/tienda/listado.php&amp;PHPSESSID=34534fg4ffg34ty</p> <p>En l'exemple anterior, el SID \u00e9s el valor del par\u00e0metre PHPSESSID.</p> <p>Cap de les dues maneres \u00e9s perfecta. Ja saps els problemes que t\u00e9 la utilitzaci\u00f3 de cookies. Malgrat aix\u00f2, \u00e9s el millor m\u00e8tode i el m\u00e9s utilitzat. Propagar el SID com a part de la URL comporta majors desavantatges, com la impossibilitat de mantenir el SID entre diferents sessions, o el fet que compartir la URL amb una altra persona implica compartir tamb\u00e9 l'identificador de sessi\u00f3.</p> <p>La bona not\u00edcia, \u00e9s que el proc\u00e9s de maneig de sessions en PHP est\u00e0 automatitzat en gran mida. Quan un usuari visita un lloc web, no cal programar un procediment per veure si hi ha un SID previ i carregar les dades associades amb el mateix. Tampoc has d'utilitzar la funci\u00f3 <code>setcookie</code> si vols emmagatzemar els SID en galetes, o anar passant el SID entre les p\u00e0gines web del teu lloc si et decideixes per propagar. Tot aix\u00f2 PHP ho fa autom\u00e0ticament.</p> <p>Server side cookies</p> <p>A la informaci\u00f3 que s'emmagatzema en la sessi\u00f3 d'un usuari tamb\u00e9 se li coneix com a galetes en la part de servidor (server side cookies). Has de tenir en compte que encara aquesta informaci\u00f3 no viatja entre el client i el servidor, s\u00ed que ho fa el SID, b\u00e9 com a part de l'URL o en una cap\u00e7alera HTTP si es guarda en una galleta. En tots dos casos, aix\u00f2 planteja un possible problema de seguretat. El SID pot ser aconseguit per una altra persona, i a partir de la mateixa obtenir la informaci\u00f3 de la sessi\u00f3 de l'usuari. La manera m\u00e9s segura d'utilitzar sessions \u00e9s emmagatzemant els SID en galetes i utilitzar HTTPS per a xifrar la informaci\u00f3 que es transmet entre el servidor web i el client.</p>"},{"location":"04-web-programming/04-05-http-authentication/#configuracio","title":"Configuraci\u00f3","text":"<p>Per defecte, PHP inclou suport de sessions incorporat. Abans, per\u00f2, d'utilitzar sessions en el teu lloc web, has de configurar correctament PHP utilitzant els seg\u00fcents directives en el fitxer php.ini segons correspongui:</p> Directiva significat session.use_cookies Indica si s'han d'usar cookies (1) o propagaci\u00f3 a la URL (0) per emmagatzemar el SID. session.use_only_cookies S'ha d'activar (1) quan fas servir cookies per emmagatzemar els SID, i a m\u00e9s no vols que es reconeguin els SID que es puguin passar com part de la URL (aquest m\u00e8tode es pot usar per usurpar l'identificador d'un altre usuari) session.save_handler S'utilitza per indicar a PHP com ha de emmagatzemar les dades de la sessi\u00f3 de l'usuari. Hi ha quatre opcions: en fitxers (files), en mem\u00f2ria (Mm), en una base de dades SQLite (sqlite) o utilitzant per a aix\u00f2 funcions que ha de definir el programador (user). El valor per defecte (Files) funcionar\u00e0 sense problemes en la majoria dels casos. session.name Determina el nom de la galleta que s'utilitzar\u00e0 per guardar el SID. La seva valor per defecte \u00e9s PHPSESSID. session.auto_start El seu valor per defecte \u00e9s 0, i en aquest cas haur\u00e0s de fer servir la funci\u00f3 session_start per gestionar l'inici de les sessions. Si fas servir sessions al lloc web, pot ser bona idea canviar el seu valor a 1 per que PHP activi de forma autom\u00e0tica el maneig de sessions. session.cookie_lifetime Si utilitzes l'URL per propagar el SID, aquest es perdr\u00e0 quan tanqui el navegador. No obstant aix\u00f2, si utilitzes galetes, el SID es mantindr\u00e0 mentre no es destrueixi la galleta. En el seu valor per defecte (0), les galetes es destrueixen quan es tanca el navegador. Si vols que es mantingui el SID durant m\u00e9s temps, has d'indicar en aquesta directiva aquest temps en segons. session.gc_maxlifetime Indica el temps en segons que s'ha de mantenir activa la sessi\u00f3, encara que no hi hagi cap activitat per part de l'usuari. El seu valor per defecte \u00e9s 1440. \u00c9s a dir, passats 24 minuts des de l'\u00faltima activitat per part de l'usuari, es tanca la sessi\u00f3 autom\u00e0ticament. session.cookie_path URL path prefix that must match for the cookie to be sent. session.cookie_domain Domain suffix that must match for the cookie to be sent. No value means the cookie is sent back only to the full hostname that sent it. session.cookie_secure Set to On to have the cookie only sent back with HTTPS URLs. session.cookie_httponly Set to On to tell browsers to prevent JavaScript from reading the cookie. <p>La funci\u00f3 <code>phpinfo</code>, de la qual ja vam parlar amb anterioritat, t'ofereix informaci\u00f3 sobre la configuraci\u00f3 actual de les directives de sessi\u00f3.</p> <p>En la documentaci\u00f3 de PHP tens informaci\u00f3 sobre aquestes i altres directives que permeten configurar el maneig de sessions.</p> <p>https://www.php.net/manual/es/session.configuration.php</p> <p>Question</p> <p>Si la informaci\u00f3 de l'usuari que vols emmagatzemar inclou contingut privat com una contrasenya, \u00bfqu\u00e8 utilitzaries, galetes o la sessi\u00f3 de l'usuari?</p>"},{"location":"04-web-programming/04-05-http-authentication/#inici-i-fi-duna-sessio","title":"Inici i fi d'una sessi\u00f3","text":"<p>L'inici d'una sessi\u00f3 pot tenir lloc de dues maneres. Si has activat la directiva <code>session.auto_start</code> en la configuraci\u00f3 de PHP, la sessi\u00f3 comen\u00e7ar\u00e0 autom\u00e0ticament quan un usuari es connecte al teu lloc web. En el cas que aquest usuari ja haja obert una sessi\u00f3 amb anterioritat, i aquesta no s'haja eliminat, en lloc d'obrir una nova sessi\u00f3 es reprendr\u00e0 la anterior. Per a aix\u00f2 s'utilitzar\u00e0 el SID anterior, que estar\u00e0 emmagatzemat en una galleta (recorda que si fas servir propagaci\u00f3 de l'SID, no podr\u00e0s restaurar sessions anteriors; el SID figura a la URL i es perd quan tanques el navegador).</p> <p>Si per contra, decideixes no utilitzar l'inici autom\u00e0tic de sessions, haur\u00e0s executar la funci\u00f3 <code>session_start()</code> per indicar a PHP que inicie una nova sessi\u00f3 o reprenga l'anterior. Anteriorment aquesta funci\u00f3 tornava sempre <code>true</code>, a partir de la versi\u00f3 5.3.0 de PHP el seu comportament \u00e9s m\u00e9s coherent: retorna <code>false</code> en cas de no poder iniciar o restaurar la sessi\u00f3.</p> <p>Com l'inici de sessi\u00f3 requereix utilitzar <code>cookies</code>, i aquestes es transmeten en els encap\u00e7alats HTTP, heu de tenir en compte que per poder iniciar una sessi\u00f3 utilitzant <code>session_start</code>, haur\u00e0s de fer les cridades a aquesta funci\u00f3 abans que la p\u00e0gina web mostre informaci\u00f3 al navegador.</p> <p>A m\u00e9s, totes les p\u00e0gines que necessiten utilitzar la informaci\u00f3 emmagatzemada en la sessi\u00f3, hauran d'executar la funci\u00f3 <code>session_start</code>.</p> <p>Mentre la sessi\u00f3 estiga oberta, pots utilitzar la variable superglobal <code>$_SESSION</code> per afegir informaci\u00f3 a la sessi\u00f3 de l'usuari, o per accedir a la informaci\u00f3 emmagatzemada en la sessi\u00f3. Per exemple, per comptar el nombre de vegades que l'usuari visita la p\u00e0gina, pots fer:</p> <pre><code>&lt;?php\n// Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente\nsession_start();\n// Comprobamos si la variable ya existe\nif (isset($_SESSION['visitas']))\n$_SESSION['visitas']++;\nelse\n$_SESSION['visitas'] = 0;\n?&gt;\n</code></pre> <p>Si en lloc de el nombre de visites, voldries emmagatzemar l'instant en qu\u00e8 es produeix cadascuna, la variable de sessi\u00f3 \"visites\" ha de ser una matriu i per tant haur\u00e0s de canviar el codi anterior per:</p> <pre><code>&lt;?php\n// Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente\nsession_start();\n// En cada visita a\u00f1adimos un valor al array \"visitas\"\n$_SESSION['visitas'][] = mktime();\n?&gt;\n</code></pre> <p>Encara que com ja has vist, pots configurar PHP perqu\u00e8 elimine de forma autom\u00e0tica les dades de una sessi\u00f3 passat cert temps, en ocasions pot ser necessari tancar-la de forma manual en un moment determinat. Per exemple, si utilitzes sessions per recordar la informaci\u00f3 d'autenticaci\u00f3 haur\u00e0s donar-li a l'usuari de la p\u00e0gina web la possibilitat de tancar la sessi\u00f3 quan ho crega convenient.</p> <p>En PHP tens dues funcions per eliminar la informaci\u00f3 emmagatzemada en la sessi\u00f3:</p> <ul> <li><code>session_unset</code>. Elimina les variables emmagatzemades a la sessi\u00f3 actual, per\u00f2 no elimina la informaci\u00f3 de la sessi\u00f3 del dispositiu d'emmagatzematge usat.</li> <li><code>session_destroy</code>. Elimina completament la informaci\u00f3 de la sessi\u00f3 del dispositiu de emmagatzematge.</li> </ul>"},{"location":"04-web-programming/04-05-http-authentication/#activitat","title":"Activitat","text":"<p>Crea una p\u00e0gina similar a l'anterior, emmagatzemant en la sessi\u00f3 d'usuari els instants de totes les seves \u00faltimes visites. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de totes les seves visites anteriors. Afegeix un bot\u00f3 a la p\u00e0gina que permeti esborrar el registre de visites.</p> <p>Utilitza tamb\u00e9 una variable de sessi\u00f3 per a comprovar si l'usuari ja ha iniciat correctament. D'aquesta manera no caldr\u00e0 comprovar les credencials amb la base de dades constantment.</p>"},{"location":"04-web-programming/04-05-http-authentication/#gestio-de-la-informacio-de-la-sessio","title":"Gesti\u00f3 de la informaci\u00f3 de la sessi\u00f3","text":"<p>Ara veurem pas a pas un exemple d'utilitzaci\u00f3 de sessions per a emmagatzemar informaci\u00f3 de l'usuari. Utilitzar\u00e0s la base de dades \"blog\", usada anteriorment, per a crear un prototip d'elements favorits.</p> <p>Les p\u00e0gines de qu\u00e8 constar\u00e0 l'aplicaci\u00f3 web seran:</p> <ul> <li>Login (<code>SecurityController::login</code>). La seva funci\u00f3 \u00e9s autentificar a l'usuari de l'aplicaci\u00f3 web. Tots els usuaris de l'aplicaci\u00f3 s'hauran autentificar utilitzant aquesta p\u00e0gina abans de poder marcar algun post com a favorit.</li> <li>Afegir a preferits (<code>PostController::addToFavourite</code>). Cada entrada disposar\u00e0 d'un bot\u00f3 per a afegir a favorits sempre que el usuari s'haja validat.</li> <li>Llistat de posts favorits (<code>PostController::favourite</code>). Presenta un llistat de les entrades favorites.</li> <li>Logoff (<code>SecurityController::logout</code>). Aquesta p\u00e0gina desconnecta a l'usuari de l'aplicaci\u00f3 i redirigeix \u200b\u200ba l'usuari de forma autom\u00e0tica a la p\u00e0gina d'inici. No mostra cap informaci\u00f3 en pantalla, pel que no \u00e9s visible per a l'usuari.</li> </ul> <p>Abans de comen\u00e7ar tingues en compte que l'aplicaci\u00f3 que vas a desenvolupar no \u00e9s completament funcional. Per exemple:</p> <ul> <li>No tindr\u00e0s en compte la possibilitat que l'usuari afegisca diverses vegades la mateixa entrada.</li> <li>Un cop afegida una entrada no es podr\u00e0 eliminar, sols buidar.</li> <li>No es mostraran imatges dels productes.</li> <li>Es mostraran tots els posts en una \u00fanica p\u00e0gina, sense paginaci\u00f3.</li> </ul> <p>Encara que redu\u00efm en aquest exemple la funcionalitat, t'animem a que un cop finalitzat el mateix, afegisques pel teu compte totes aquelles opcions que vulguis. Recorda que la millor manera d'aprendre programaci\u00f3 \u00e9s ... programant!</p>"},{"location":"04-web-programming/04-05-http-authentication/#autenticar-lusuari","title":"Autenticar l'usuari","text":"<p>La primera p\u00e0gina que vas a programar \u00e9s la d'autenticaci\u00f3 de l'usuari (<code>SecurityController::login</code>). Per variar, far\u00e0s servir les capacitats de maneig de sessions de PHP per emmagatzemar la identificaci\u00f3 dels usuaris.</p> <p>A m\u00e9s, utilitzarem la informaci\u00f3 de la taula \"User\" a la base de dades \"bloc\", accedint mitjan\u00e7ant PDO.</p> <p>Vas a crear a la p\u00e0gina un formulari amb dos camps, un de tipus text per a l'usuari, i un altre de tipus password per a la contrasenya. En pr\u00e9mer el bot\u00f3 Enviar, el formulari s'enviar\u00e0 a aquesta mateixa p\u00e0gina, on es compararan les credencials proporcionades per l'usuari amb les emmagatzemades en la base de dades. Si les dades s\u00f3n correctes, s'iniciar\u00e0 una nova sessi\u00f3 i s'emmagatzemar\u00e0 en ella el nom de l'usuari que s'acaba de connectar.</p> <p></p> <p>Anem per passos. El codi HTML per crear el formulari, que anir\u00e0 dins el cos de la p\u00e0gina (entre les etiquetes ) ser\u00e0 el seg\u00fcent: <p>{% raw %}</p> <pre><code>    &lt;form action=\"{{ router.generateURL('User', 'login') }}\" method=\"post\"&gt;\n{{ message }}\n&lt;div class=\"form-group\"&gt;\n&lt;input name=\"username\" type=\"text\" placeholder=\"Nom d'usuari\" class=\"form-control\"&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;input name=\"password\" type=\"password\" placeholder=\"Contrasenya\" class=\"form-control\"&gt;\n&lt;/div&gt;\n&lt;p class=\"text-center\"&gt;\n&lt;button class=\"btn btn-primary\" name=\"login\" type=\"submit\"&gt;&lt;i class=\"fa fa-sign-in\"&gt;&lt;/i&gt; Iniciar sessi\u00f3&lt;/button&gt;\n&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>{% endraw %} Fixa't que hi ha un espai per posar els possibles missatges d'error que es produeixin, com la falta d'alguna dada necessari, o un error de credencials err\u00f2nies.</p> <p>El codi PHP que ha de figurar a l'comen\u00e7ament d'aquesta mateixa p\u00e0gina (abans que es mostri qualsevol text), s'encarregar\u00e0 de:</p> <p>Comprovar que s'han introdu\u00eft tant el nom d'usuari com la contrasenya.</p> <pre><code># UserController.php\nif (($this-&gt;request-&gt;getParams()-&gt;has('username') &amp;&amp;  $this-&gt;request-&gt;getParams()-&gt;has('password')) &amp;&amp; $this-&gt;request-&gt;isPost() )  {\n//Cogemos datos del formulario y validamos\n$username = $this-&gt;request-&gt;getParams()-&gt;getString('username');\n$password = $this-&gt;request-&gt;getParams()-&gt;getString('password');\n$user = new User();\n$user-&gt;setUsername($username);\n$user-&gt;setPassword($password);\n// Comprovem que els valors s\u00f3n correctes.\n$errors = $userModel-&gt;validateLogin($user);\n</code></pre> <p>Comprovem les credencials.</p> <pre><code>// UserController.php\n// Si no hi ha errors comprovem les credancials\nif (count($errors) == 0) {\n//Cogemos los datos del formulario para comprobar que existe el usuario\n$loginOk = $userModel-&gt;checkUser($user-&gt;getUsername(), $user-&gt;getPassword());\n</code></pre> <pre><code>// UserModel.php\ntry {\n$loginUsuario = $this-&gt;pdo-&gt;prepare(\"SELECT * FROM user WHERE username=:username AND password=:password\");\n$loginUsuario-&gt;bindParam(':username', $email, PDO::PARAM_STR);\n$loginUsuario-&gt;bindParam(':password', $password, PDO::PARAM_STR);\n$loginUsuario-&gt;execute();\nreturn $loginUsuario-&gt;rowCount();\n} catch (PDOException $e) {\necho \"Error: \" . $e-&gt;getMessage();\n}\n</code></pre> <p>Si les credencials s\u00f3n correctes carreguem en les dades d'usuari en \\$_SESSION</p> <pre><code>    if ($loginOk &gt; 0) {\n$dataUser = $userModel-&gt;getByUsername($user-&gt;getUsername());\nsession_start();\n$_SESSION['loggedin'] = true;\n$_SESSION['iduser'] = $dataUser-&gt;getId();\n$_SESSION['email'] = $dataUser-&gt;getEmail();\n$_SESSION['nombre'] = $dataUser-&gt;getUsername();\n$_SESSION['id_rol'] = $dataUser-&gt;getRoles();\nheader(\"Location: \".$GLOBALS['router']-&gt;generateUrl('Post','favourite'));\n}\nelse {\n$errors[] = \"Les credencials s\u00f3n inv\u00e0lides\";\n}\n</code></pre> <p>I redirigir a la p\u00e0gina de les entrades favorites.</p> <pre><code>    header(\"Location: \".$GLOBALS['router']-&gt;generateUrl('Post','favourite'));\n</code></pre> <p>Enten b\u00e9 el codi abans de seguir endavant.</p> <p>{: .alert .alert-question } En el codi anterior, la sessi\u00f3 de l'usuari s'inicia s\u00f2l si es proporciona un nom d'usuari i contrasenya correctes. \u00bfPodria haver-se iniciat la sessi\u00f3 en comen\u00e7ar el codi encara que l'usuari no haja proporcionat les credencials?</p>"},{"location":"04-web-programming/04-05-http-authentication/#pagina-de-favorits","title":"P\u00e0gina de favorits","text":"<p>Quan un usuari proporciona unes credencials d'inici de sessi\u00f3 correctes (recorda que tu ja havies afegit l'usuari \"jane_admin\" amb contrasenya \"admin\"), se li redirigeix \u200b\u200bautom\u00e0ticament a la p\u00e0gina de la llista d'entrades favorites. Aquesta \u00e9s la p\u00e0gina que vas a programar a continuaci\u00f3.</p> <pre><code>// PostController.php\npublic function favourite()\n{\nglobal $router;\n// Recuperem la informaci\u00f3 de la sessi\u00f3\nsession_start();\n// Comprovem si l'usuari s'ha autenticat\nif (!isset($_SESSION['loggedin'])) {\ndie(\"Error - cal autenticar-se &lt;a href=\\\"\" . $router-&gt;generateURL('User', 'login') . \"\\\"\");\n}\n$postModel = new PostModel($this-&gt;db);\n$posts=[];\nif (!empty($_SESSION['Posts'])) {\nforeach ($_SESSION['Posts'] as $postId) {\n$posts[] = $postModel-&gt;getById($postId);\n}\n}\n$image_dir = $this-&gt;config-&gt;get('image_path');\n$header = '\u00daltimes entrades';\n$properties = [\n'image_dir' =&gt; $image_dir,\n'header' =&gt; 'Entrades favorites',\n'posts' =&gt; $posts,\n'tags' =&gt; $tags\n];\nreturn $this-&gt;render('posts/favourite.twig', $properties);\n}\npublic function addToFavourite()\n{\nglobal $router;\n// Recuperem la informaci\u00f3 de la sessi\u00f3\nsession_start();\n// Comprovem si l'usuari s'ha autenticat\nif (!isset($_SESSION['loggedin'])) {\ndie(\"Error - cal autenticar-se &lt;a href=\\\"\" . $router-&gt;generateURL('User', 'login') . \"\\\"\");\n}\nif ($this-&gt;request-&gt;isPost()) {\n$postId = $this-&gt;request-&gt;getParams()-&gt;getInt('post');\nif ($postId &gt; 0)\n$_SESSION['Posts'][] = $postId;\n}\nheader('Location: '. $router-&gt;generateURL('Posts', 'index'));\n}\npublic function emptyFavourite()\n{\nglobal $router;\n// Recuperem la informaci\u00f3 de la sessi\u00f3\nsession_start();\n// Buidem l'array amb les entrades favorites\nunset($_SESSION['Posts']);\nheader('Location: '. $router-&gt;generateURL('Posts', 'index'));\n}\n</code></pre> <p>Les plantilles de Twig</p> <p>{%raw%}</p> <pre><code>#posts/favourite.twig\n{% block body %}\n    &lt;!-- MOSTREM LES ENTRADES --&gt;\n    {% for post in posts %}\n&lt;div&gt;\n&lt;h2&gt;{{ post.title }}&lt;/h2&gt;\n            &lt;p&gt;Escrit per:&lt;strong&gt;{{ post.user.fullname }} &lt;/strong&gt;\n{{ post.published_at|date(\"d/m/Y\") }}\n{% if admin %}\n                    &lt;a class=\"btn px-2 secondary-link\"\n                       href=\"{{ router.generateURL('Post', 'search') }}\"&gt;\n                        &lt;span class=\"fa fa-pencil-square-o\"&gt;&lt;/span&gt;&lt;/a&gt;\n                    &lt;a class=\"btn px-2 secondary-link\"\n                       href=\"{{ router.generateURL('Post', 'search') }}\"&gt;\n                        &lt;span class=\"fa fa-trash-o\"&gt;&lt;/span&gt;&lt;/a&gt;\n                {% endif %}\n            &lt;/p&gt;\n            &lt;div class=\"fakeimg\"&gt;&lt;img class=\"w-25 img-thumbnail float-left mr-2\"\n                                      src=\"{{ image_dir ~ post.image }}\"/&gt;&lt;/div&gt;\n            &lt;p&gt;{{ post.summary }}&lt;/p&gt;\n            &lt;p&gt;&lt;a href=\"{{ router.generateURL('Post', 'showById', {id: post.id}) }}\"&gt;Llegir m\u00e9s&lt;/a&gt;\n            &lt;/p&gt;\n            &lt;div class=\"mb-4\"&gt;\n                &lt;!-- MOSTREM ELS TAGS --&gt;\n                {% for tag in post.tags %}\n                    &lt;a class=\"btn btn-light\"\n                       href=\"{{ router.generateURL('Post', 'showByTag', { id: tag.id }) }}\"&gt; &lt;span\n                                class=\"fa fa-tags\" aria-hidden=\"true\"&gt;{{ tag.name }} &lt;/a&gt;\n                {% endfor %}\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"clearfix\"&gt;&lt;/div&gt;\n    {% endfor %}\n    &lt;form class=\"mb-4\" action=\"{{ router.generateUrl('Post', 'emptyFavourite') }}\" method=\"post\"&gt;\n        &lt;input type=\"submit\" class=\"btn btn-info\" value=\"Buidar favorits\"&gt;\n    &lt;/form&gt;\n{% endblock %}\n</code></pre> <pre><code># posts/show.twig\n{% extends \"base.twig\" %}\n{% block body %}\n&lt;!-- MOSTREM LES ENTRADES --&gt;\n&lt;div&gt;\n&lt;h2&gt;{{ post.title }}&lt;/h2&gt;\n        &lt;p&gt;Escrit per:&lt;strong&gt;{{ post.user.fullname }} &lt;/strong&gt;\n{{ post.published_at|date(\"d/m/Y\") }}\n{% if admin %}\n                &lt;a class=\"btn px-2 secondary-link\"\n                   href=\"{{ router.generateURL('Post', 'search') }}\"&gt;\n                    &lt;span class=\"fa fa-pencil-square-o\"&gt;&lt;/span&gt;&lt;/a&gt;\n                &lt;a class=\"btn px-2 secondary-link\"\n                   href=\"{{ router.generateURL('Post', 'search') }}\"&gt;\n                    &lt;span class=\"fa fa-trash-o\"&gt;&lt;/span&gt;&lt;/a&gt;\n            {% endif %}\n        &lt;/p&gt;\n        &lt;div class=\"fakeimg\"&gt;&lt;img class=\"w-25 img-thumbnail float-left mr-2\"\n                                  src=\"{{ image_dir ~ post.image }}\"/&gt;&lt;/div&gt;\n        &lt;p&gt;{{ post.content|markdown_to_html }}&lt;/p&gt;\n        &lt;form class=\"mb-4\" action=\"{{ router.generateUrl('Post', 'addToFavourite') }}\" method=\"post\"&gt;\n            &lt;input type=\"hidden\" name=\"post\" value=\"{{ post.id }}\" /&gt;\n            &lt;input type=\"submit\" class=\"btn btn-info\" value=\"Afegir a favorits\"&gt;\n        &lt;/form&gt;\n        &lt;p class=\"mb-4\"&gt;&lt;a href=\"{{ router.generateURL('Post', 'index') }}\"&gt;P\u00e0gina principal&lt;/a&gt;\n        &lt;/p&gt;\n    &lt;/div&gt;\n{% endblock %}\n</code></pre> <p>{% endraw %}</p> <p>En cada entrada es crea un formulario amb un bot\u00f3 \"Afegir a favorits\" que envia a la p\u00e0gina /favourite/add l'identificador de cada entrada que activa el m\u00e8tode <code>addToFavourite()</code>. Quan s'executa es comprova si s'ha enviat la p\u00e0gina i s'afegeix a \\$_SESSION['Posts] l'idenficador rebut.</p> <pre><code>if ($this-&gt;request-&gt;isPost()) {\n$postId = $this-&gt;request-&gt;getParams()-&gt;getInt('post');\nif ($postId &gt; 0)\n$_SESSION['Posts'][] = $postId;\n}\n</code></pre> <p>L'array <code>$_SESSION['Posts']</code> \u00e9s la variable de sessi\u00f3 en la que emmagatzemarem els identificadors de totes les entrades que l'usuari afegeix a favorits.</p> <pre><code>// Si hi ha elements a favorits els mostrarem\nif (!empty($_SESSION['Posts'])) {\nforeach ($_SESSION['Posts'] as $postId) {\n$posts[] = $postModel-&gt;getById($postId);\n}\n// Si no, mostrarem un missatge\nelse {\n$message = \"No hi ha elements favorits\";\n}\n</code></pre> <p>La p\u00e0gina cont\u00e9 un formulari per a buidar els elements favorits:</p> <pre><code>    unset($_SESSION['Posts']);\n</code></pre> <p>A m\u00e9s a m\u00e9s, tant en aquesta p\u00e0gina como en la resta, caldr\u00e0 comprovar si la variable \\$_SESSION['loggedin'] existeix per a verificar que l'usuari s'ha autenticat correctament.</p> <p>Para ello, debes incluir el siguiente c\u00f3digo al inicio de la p\u00e1gina.</p> <pre><code>// Recuperem la informaci\u00f3 de la sessi\u00f3\nsession_start();\n// Comprovem si l'usuari s'ha autenticat\nif (!isset($_SESSION['loggedin'])) {\ndie(\"Error - cal autenticar-se &lt;a href=\\\"\" . $router-&gt;generateURL('User', 'login') . \"\\\"\");\n}\n</code></pre> <p>Si l'usuari no s'ha autenticat, es mostra un missatge d'error junt amb l'enlla\u00e7 a la p\u00e0gina d'inici de sessi\u00f3.</p> <p>Si des de qualsevol p\u00e0gina l'usuari prem l'opci\u00f3 del men\u00fa \"Favorits\", activar\u00e0 el m\u00e8tode <code>favourite()</code> de <code>PostController</code> en la que se vor\u00e0 totes les entrades que ha marcat com a favorites.</p> <pre><code>// PostController.php\npublic function favourite()\n{\nglobal $router;\n// Recuperem la informaci\u00f3 de la sessi\u00f3\nsession_start();\n// Comprovem si l'usuari s'ha autenticat\nif (!isset($_SESSION['loggedin'])) {\ndie(\"Error - cal autenticar-se &lt;a href=\\\"\" . $router-&gt;generateURL('User', 'login') . \"\\\"\");\n}\n$postModel = new PostModel($this-&gt;db);\n$posts=[];\nif (!empty($_SESSION['Posts'])) {\nforeach ($_SESSION['Posts'] as $postId) {\n$posts[] = $postModel-&gt;getById($postId);\n}\n}\n$image_dir = $this-&gt;config-&gt;get('image_path');\n$header = '\u00daltimes entrades';\n$properties = [\n'image_dir' =&gt; $image_dir,\n'header' =&gt; 'Entrades favorites',\n'posts' =&gt; $posts,\n'tags' =&gt; $tags\n];\nreturn $this-&gt;render('posts/favourite.twig', $properties);\n}\n</code></pre> <p>Les entrades que es mostren en la p\u00e0gina s'obtenen de la informaci\u00f3 emmagatzemada en la sessi\u00f3. Usarem <code>PostModel</code> per a carregar les dades de cada entrada.</p> <p>En acabar, l'usuari podr\u00e0 tancar sessi\u00f3 activant el m\u00e8tode <code>logout</code> de <code>SecurityController</code>:</p> <pre><code>// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n// Y la eliminamos\nsession_unset();\nheader(\"Location: login.php\");\n</code></pre> <p>M\u00e9s informaci\u00f3 sobre les sessions en PHP: Maneig de sessions (PHP)</p>"},{"location":"04-web-programming/04-05-http-authentication/#bones-practiques","title":"Bones pr\u00e0ctiques","text":""},{"location":"04-web-programming/04-05-http-authentication/#usa-sempre-https","title":"Usa sempre HTTPS","text":"<p>Usa sempre HTTPS si no s'enviar\u00e0 tota la informaci\u00f3 en text pla. Contrasenyes incloses.</p>"},{"location":"04-web-programming/04-05-http-authentication/#usa-sessions","title":"Usa sessions","text":"<p>A difer\u00e8ncia de les galetes les dades emmagatzemades en les sessions no s'envien mitjan\u00e7ant els encap\u00e7alats HTTP, romanen al servidor.</p> <p>El que s\u00ed s'envia \u00e9s l'identificador de sessi\u00f3. Caldr\u00e0 prendre mesures perqu\u00e8 l'identificador no puga ser accessible per tercers i aix\u00ed poder accedir a les dades emmagatzemades.</p> <p>Segons l'OWASP:</p> <p>Session settings are some of the MOST important values to concentrate on in configuring. It is a good practice to change session.name to something new.</p> <p>I proposen la seg\u00fcent configuraci\u00f3 b\u00e0sica:</p> <pre><code> session.save_path                = /path/PHP-session/\n session.name                     = myPHPSESSID\n session.auto_start               = Off\n session.use_trans_sid            = 0\n session.cookie_domain            = full.qualified.domain.name\n #session.cookie_path             = /application/path/\n session.use_strict_mode          = 1\n session.use_cookies              = 1\n session.use_only_cookies         = 1\n session.cookie_lifetime          = 14400 # 4 hours\n session.cookie_secure            = 1\n session.cookie_httponly          = 1\n session.cookie_samesite          = Strict\n session.cache_expire             = 30\n session.sid_length               = 256\n session.sid_bits_per_character   = 6 # PHP 7.2+\n session.hash_function            = 1 # PHP 7.0-7.1\n session.hash_bits_per_character  = 6 # PHP 7.0-7.1\n</code></pre> <p>Les recomanacions en major detall:</p>"},{"location":"04-web-programming/04-05-http-authentication/#control-de-la-vida-de-sessio","title":"Control de la vida de sessi\u00f3","text":"<ol> <li> <p>Fes que expire la sessi\u00f3 despr\u00e9s d\u2019un curt per\u00edode d\u2019inactivitat: ajusteu el temps d\u2019inactivitat a 5 minuts per a aplicacions altament protegides fins a no m\u00e9s de 30 minuts per a aplicacions de baix risc.</p> </li> <li> <p>Habilita l\u2019opci\u00f3 de tancament de sessi\u00f3: caduca i destrueix expl\u00edcitament la sessi\u00f3 en tancar la sessi\u00f3.</p> </li> <li> <p>Eviteu els inicis de sessi\u00f3 persistents (opci\u00f3 \"recordeu-me\"): opcionalment podeu restringir la informaci\u00f3 conservada i revelada per l'aplicaci\u00f3, \u00e9s a dir, obligar a l'usuari a tornar a iniciar sessi\u00f3 abans de realitzar cap operaci\u00f3 cr\u00edtica.</p> </li> <li> <p>Fes que expire la sessi\u00f3 quan hi haja error de seguretat: qualsevol error de seguretat de l'aplicaci\u00f3 hauria de donar lloc a la finalitzaci\u00f3 de la sessi\u00f3.</p> </li> <li> <p>Fes caducar la sessi\u00f3 quan siga de llarga durada: obligaci\u00f3 a reautentificar la sessi\u00f3, que tot i estar actiu ha arribat al temps m\u00e0xim perm\u00e8s, p.e. unes poques hores.</p> </li> <li> <p>Elimineu la galleta de sessi\u00f3 en destruir una sessi\u00f3.</p> </li> </ol>"},{"location":"04-web-programming/04-05-http-authentication/#identificador-de-sessio","title":"Identificador de sessi\u00f3","text":"<ol> <li> <p>Utilitzeu nom\u00e9s galetes per propagar l\u2019ID de sessi\u00f3, ja que quan es transmeten mitjan\u00e7ant un par\u00e0metre URL, les sol\u00b7licituds GET poden ser emmagatzemades a l\u2019historial del navegador, a la mem\u00f2ria cau i als marcadors. Aleshores tamb\u00e9 es pot visualitzar f\u00e0cilment.</p> </li> <li> <p>Regenereu l'identificador de sessi\u00f3: regenereu (substitu\u00efu-ne per un de nou) l'identificador de sessi\u00f3, almenys cada cop que canvie el nivell de privilegi de l'usuari. Generalment es pot regenerar abans de qualsevol transacci\u00f3 important, despr\u00e9s d\u2019un determinat nombre de sol\u00b7licituds o despr\u00e9s d\u2019un per\u00edode de temps.</p> </li> <li> <p>Comproveu si l'identificador de sessi\u00f3 \u00e9s v\u00e0lid (de mida i tipus previst) i que ha estat generat per l'aplicaci\u00f3 i no proporcionat per l'usuari.</p> </li> <li> <p>L'identificador de sessi\u00f3 hauria de ser adequadament llarg, imprevisible, dif\u00edcil de reproduir i creat a partir de fonts aleat\u00f2ries d'alta qualitat.</p> </li> </ol>"},{"location":"04-web-programming/04-05-http-authentication/#cookie-de-sessio","title":"Cookie de sessi\u00f3","text":"<ol> <li> <p>Definiu el domini de la galleta a quelcom m\u00e9s espec\u00edfic que el domini de primer nivell.</p> </li> <li> <p>No emmagatzeneu res a la galleta (almenys qualsevol informaci\u00f3 sensible com el nom d\u2019usuari o la contrasenya) sols\u2019ID de sessi\u00f3.</p> </li> <li> <p>Definiu el senyalador nom\u00e9s http per desactivar la captura de l'identificador de sessi\u00f3 mitjan\u00e7ant XSS.</p> </li> <li> <p>Quan siga possible, utilitzeu un xifrat fort (SSL) i l'atribut <code>cookie_secure</code> per permetre la transmissi\u00f3 de cookies nom\u00e9s a trav\u00e9s de https.</p> </li> </ol>"},{"location":"04-web-programming/04-05-http-authentication/#emmagatzematge-de-dades-de-sessio","title":"Emmagatzematge de dades de sessi\u00f3","text":"<ol> <li> <p>Determineu on s'emmagatzemen les dades de sessi\u00f3 i si es tracta d\u2019un sistema de fitxers o d\u2019una base de dades, determineu qui m\u00e9s podria tenir acc\u00e9s a aquestes dades.</p> </li> <li> <p>Quan s'emmagatzemen les dades de sessi\u00f3 en fitxers, assegureu-vos que l'aplicaci\u00f3 est\u00e0 configurada per utilitzar un directori privat independent (per exemple, la directiva <code>session.save_path</code>). Utilitzeu els permisos del sistema de fitxers per protegir aquests fitxers d\u2019observaci\u00f3 o modificaci\u00f3 d\u2019usuaris diferents dels comptes necessaris per operar el servidor web i les aplicacions. Si aix\u00f2 no \u00e9s possible, cal xifrar les dades de la sessi\u00f3 o contenir nom\u00e9s dades no sensibles. Tingueu en compte que PHP utilitza de manera predeterminada el directori temporal del sistema p\u00fablic.</p> </li> <li> <p>Totes les variables de sessi\u00f3 s\u2019han de validar i sanejar per assegurar-se que siguem correctes i que no cont\u00e9 car\u00e0cters inesperats.</p> </li> </ol>"},{"location":"04-web-programming/04-05-http-authentication/#no-coneixer-les-contrasenyes","title":"No con\u00e8ixer les contrasenyes","text":"<p>Al final, tothom crea una aplicaci\u00f3 PHP que es basa en la sessi\u00f3 d\u2019usuari. Els noms d\u2019usuari i les contrasenyes s\u2019emmagatzemen en una base de dades i s\u2019utilitzen posteriorment per autentificar els usuaris despr\u00e9s de l\u2019inici de sessi\u00f3.</p> <p>\u00c9s important que fer hash de les contrasenyes correctament abans d\u2019emmagatzemar-les. El hashing i el xifrat s\u00f3n dues coses molt diferents que sovint es confonen.</p> <p>El hashing \u00e9s una funci\u00f3 irreversible i unidireccional. \u00c9s produeix una cadena de longitud fixa que no es pot invertir. Aix\u00f2 vol dir que podeu comparar un hash amb un altre per determinar si tots dos provenien de la mateixa cadena font, per\u00f2 no podeu determinar la cadena original. Si les contrasenyes no s'emmagatzemen amb hashing i un tercer no autoritzat accedeix a la vostra base de dades, tots els comptes d'usuari estaran compromesos.</p> <p>A difer\u00e8ncia del hashing, el xifrat \u00e9s reversible (sempre que tingueu la clau). El xifratge \u00e9s \u00fatil en altres \u00e0rees, per\u00f2 \u00e9s una estrat\u00e8gia deficient per emmagatzemar contrasenyes de forma segura.</p> <p>Les contrasenyes tamb\u00e9 han de salar-se individualment afegint una cadena aleat\u00f2ria a cada contrasenya abans d'aplicar hashing. Aix\u00f2 evita els atacs de diccionari i l'\u00fas de \"taules de l'arc de Sant Mart\u00ed\" (una llista inversa de hash criptogr\u00e0fics per a contrasenyes comunes.)</p> <p>El hashing i el salat s\u00f3n vitals, ja que sovint els usuaris utilitzen la mateixa contrasenya per a diversos serveis i la qualitat de la contrasenya \u00e9s deficient.</p> <p>Addicionalment, haureu d'utilitzar un algorisme especialitzat en hashing en lloc d'una funci\u00f3 de hash criptogr\u00e0fic de prop\u00f2sit general i r\u00e0pid (per exemple, SHA256). La llista breu d'algorismes de hashing de contrasenya acceptables (a juny de 2018) a utilitzar s\u00f3n:</p> <ul> <li>Argon2 (disponible a PHP 7.2 i versions posteriors)</li> <li>Scrypt</li> <li>Bcrypt (PHP us proporciona aquesta; vegeu m\u00e9s avall)</li> <li>PBKDF2 amb HMAC-SHA256 o HMAC-SHA512</li> </ul> <p>Afortunadament, avui en dia PHP ens ho facilita.</p>"},{"location":"04-web-programming/04-05-http-authentication/#hashing-de-contrasenyes-amb-password_hash","title":"Hashing de contrasenyes amb <code>password_hash</code>","text":"<p>A PHP 5.5 s'ha introdu\u00eft <code>password_hash()</code>. En aquest moment est\u00e0 utilitzant BCrypt, l'algorisme m\u00e9s fort actualment suportat per PHP. Tot i aix\u00f2, s'actualitzar\u00e0 en el futur per donar suport a m\u00e9s algoritmes. La biblioteca de <code>password_compat</code> es va crear per proporcionar una compatibilitat de PHP&gt; = 5.3.7.</p> <p>A continuaci\u00f3 hem aplicat hashing a una cadena i, a continuaci\u00f3, apliquem el hashing contra una nova cadena. Com que les dues cadenes d'origen s\u00f3n diferents (\"contrasenya-secreta\" i \"contrasenya-err\u00f2nia\"), aquesta sessi\u00f3 fallar\u00e0.</p> <pre><code>$passwordHash = password_hash(\"contrasenya-secreta\", PASSWORD_DEFAULT);\nif (password_verify(\"contrenya-err\u00f2nia\", $passwordHash)) {\n// Contrasenya correcta\n} else {\n// Contrasenya incorrecta\n}\n</code></pre> <p><code>password_hash()</code> s'ocupa de la salificaci\u00f3 de contrasenyes. La sal s'emmagatzema, juntament amb l'algorisme i el \"cost\", com a part del hash. <code>password_verify()</code> extreu aix\u00f2 per determinar com comprovar la contrasenya, de manera que no necessiteu un camp de base de dades independent per emmagatzemar les vostres sals.</p> <p>PASSWORD_DEFAULT</p> <p>PASSWORD_DEFAULT. Actualment utilitza l\u2019algoritme bcrypt (predeterminat a partir de PHP 5.5.0). Observeu que aquesta constant est\u00e0 pensada per a adaptar-se sempre que hi haja un algoritme nou i m\u00e9s fort a PHP. Per aquesta ra\u00f3, la longitud del resultat d\u2019utilitzar aquest identificador pot canviar amb el temps. Per tant, es recomana emmagatzemar el resultat en una columna d\u2019una base de dades de m\u00e9s de 60 caracters (255 caracters seria una bona elecci\u00f3).</p>"},{"location":"04-web-programming/04-05-http-authentication/#activitat_1","title":"Activitat","text":"<p>Adapta el projecte de forma que:</p> <ol> <li>Cada 15 minuts es regenere la sessi\u00f3.</li> <li>Sols use http per accedir a la cookie de sessi\u00f3.</li> <li>Les constrasenyes s'encripten amb bcrypt.</li> <li>Es tanque la sessi\u00f3 tal com s'indica.</li> </ol>"},{"location":"04-web-programming/04-05-http-authentication/#recursos","title":"Recursos","text":"<ul> <li>The 2018 Guide to Building Secure PHP Software</li> <li>PHP: The Right Way. Security</li> <li>Session Management Basics</li> <li>Ultimate PHP Security Best Practices</li> <li>PHP Session Security Best Practices</li> <li>PHP Sessions in depth</li> <li>Session Management Cheat Sheet</li> </ul>"},{"location":"04-web-programming/04-99-tasks/","title":"Activitats","text":""},{"location":"04-web-programming/04-99-tasks/#formularis","title":"Formularis","text":"<ol> <li> <p><code>401ExempleGet.php</code>: Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text <code>Benvingut [nom]!!!</code> sent [nom] el nom has  passat com a par\u00e0metre.</p> </li> <li> <p><code>402formulari.html</code> i <code>402formulari.php</code>: Crea un formulari que tinga els seg\u00fcents camps:</p> <ul> <li>Nom i cognoms (<code>name</code>)</li> <li>Correu electr\u00f2nic (<code>email</code>)</li> <li>Tel\u00e8fon (<code>phone</code>)</li> <li>URL de la p\u00e0gina personal (<code>url</code>).</li> </ul> <p>En l'atribut <code>action</code> del formulari posarem el seg\u00fcent:</p> <pre><code>&lt;form action=\"402formulari.php\" method=\"POST\" .../&gt;\n</code></pre> <p>A\u00e7\u00f2 far\u00e0 que siga la p\u00e0gina <code>402formulari.php</code> la que processe les dades del formulari.</p> <p>En pr\u00e9mer <code>Enviar</code> han d'apar\u00e8ixer en la p\u00e0gina les dades que s'han introdu\u00eft en format de  taula.</p> </li> <li> <p><code>403formulariReparat.php</code>: Soluciona el problema dels par\u00e0metres no enviats en accedir directament a la p\u00e0gina de processament del formulari.</p> </li> <li> <p><code>404formulariValidat.php</code>: Modifica l'exercici anterior realitzant les seg\u00fcents validacions:</p> <ul> <li>Tots els camps s\u00f3n obligatoris.</li> <li><code>name</code>, no pot superar els 100 caracters.      </li> <li><code>phone</code>, ser\u00e0 un string i ha de contenir 9 digits (expressi\u00f3 regular: <code>^\\d{9}$</code>).</li> <li><code>email</code>, ha de ser una adre\u00e7a electr\u00f2nica correcta.</li> <li><code>url</code>, ha de ser una url v\u00e0lida.</li> </ul> <p>S'avaluaran tots els camps i si hi ha error/s caldr\u00e0 mostrar-lo/s. Si no hi ha errors es mostraran les dades introdu\u00efdes per l'usuari.</p> </li> <li> <p><code>405formulariOpcions.html</code> i <code>405formulariOpcions.php</code>: Modifica l'exercici anterior afegint els seg\u00fcents camps al formulari:</p> <ul> <li><code>genre</code>: ser\u00e0 un radio button i podr\u00e0 ser home, dona i no binari.</li> <li><code>hobbies</code>: ser\u00e0 un checkbox amb aficions de la que podr\u00e0s triar-ne m\u00e9s d'una:<ul> <li>Lectura</li> <li>Programaci\u00f3</li> <li>Ciclisme</li> <li>C\u00f3rrer</li> <li>...</li> </ul> </li> <li><code>contact_time</code>: ser\u00e0 una llista de les millores hores per a contactar: <ul> <li>Primera hora (08:00 a 10:00)</li> <li>Abans de dinar (12:00 a 13:00)</li> <li>Despr\u00e9s de dinar (14:00 a 16:00)</li> <li>A la nit (20:00 a 22:00)</li> </ul> </li> </ul> <p>En els tres casos s\u00f3n obligatoris.</p> </li> <li> <p><code>406formulariUnic.php</code>. Modifica l'exercici anterior de forma que tant el formulari com el seu processament es realitze en el mateix fitxer. Si totes les dades enviades s\u00f3n correctes es mostrar\u00e0 la taula amb la informaci\u00f3 enviada. En cas d'error es mostraran dalt i el formulari guardar\u00e0 els valors v\u00e0lids en cas d'error (sticky form).</p> </li> <li> <p><code>407formulariArray</code>: Modifica l'exercici anterior de forma que el contingut dels camps de selecci\u00f3 es genere din\u00e0micament des d'arrays associatius. Les claus seran <code>man</code>, <code>woman</code>, <code>nobinary</code> per als g\u00e8neres, <code>reading</code>, <code>programming</code>, <code>cycling</code>, <code>running</code> per a les aficions i <code>morning</code>, <code>before_lunch</code>, <code>after_lunch</code> i <code>evening</code> per a les hores de contacte. A m\u00e9s, els valors rebuts s'haurien de validar-se contra l'array, \u00e9s a dir, que el valor enviat \u00e9s una clau v\u00e0lida de l'array. Tamb\u00e9 caldr\u00e0 mostrar en la taula els valors dels arrays, no les claus.</p> </li> </ol>"},{"location":"04-web-programming/04-99-tasks/#inclusio-de-fitxers","title":"Inclusi\u00f3 de fitxers","text":"<ol> <li> <p><code>410formulari.php</code>: Basant-te en l'activitat <code>407formulariArray.php</code> modifica les validacions perqu\u00e8 es facen mitjan\u00e7ant funcions. </p> <p>Les funcions es guardaran en el fitxer <code>helpers.php</code> i s'hauran d'incloure en fitxer <code>410formulari.php</code>.</p> </li> <li> <p><code>411formulari.php</code>: Basant-te en l'activitat <code>410formulari.php</code> separa la part de codi de la presentaci\u00f3 de forma que tota la l\u00f2gica estiga en un fitxer i la part de presentaci\u00f3 en altre fitxer <code>411formulari.view.php</code>.</p> </li> </ol>"},{"location":"04-web-programming/04-99-tasks/#pujada-de-fitxers","title":"Pujada de fitxers","text":"<ol> <li><code>420formulariImatge.php</code>: Modifica l'activitat anterior afegint un camp de tipus <code>FILE</code> per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta <code>uploads</code> i es mostrar\u00e0 amb la resta de dades. </li> <li><code>421FormulariImage.php</code>: Modifica l'activitat anterior de forma que es controle el seg\u00fcent:<ol> <li>Les imatges sols podran ser <code>jpg</code>.</li> <li>No podran superar 1MB de grand\u00e0ria</li> <li>Es guardaran en un nom aleatori \u00fanic.</li> </ol> </li> </ol>"},{"location":"04-web-programming/04-99-tasks/#projecte-truiter","title":"Projecte Truiter","text":""},{"location":"04-web-programming/04-99-tasks/#formularis_1","title":"Formularis","text":"<ol> <li> <p>P\u00e0gina d'inici de sessi\u00f3.</p> <p>Crea en <code>login.php</code> un formulari d'inici de sessi\u00f3:</p> <ol> <li>En un \u00fanic fitxer es mostrar\u00e0 i processar\u00e0 el formulari. </li> <li>Les dades d'usuari estaran en un array associatiu.</li> <li>Si la validaci\u00f3 \u00e9s correcta es mostrar\u00e0 un missatge de confirmaci\u00f3.</li> <li>De no ser-ho es mostrar\u00e0 un missatge d'error.</li> </ol> </li> </ol>"},{"location":"04-web-programming/04-99-tasks/#cookies","title":"Cookies","text":"<ol> <li> <p>\u00daltima visita. </p> <p>Modifica la p\u00e0gina <code>index.php</code> de forma que emmagatzeme en una galleta l'\u00faltim instant en qu\u00e8 l'usuari va visitar la p\u00e0gina. </p> <p>Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de la seva anterior visita. </p> <p>La galleta tindr\u00e0 una durada d'una setmana.</p> <p>Comprova que la galleta s'ha creat correctament.</p> </li> <li> <p>Emmagatzematge del nom de l'usuari.</p> <p>L'objectiu \u00e9s que quan un usuari inicie sessi\u00f3 s'emmagatzeme el nom introdu\u00eft en un galleta, de forma que quan torne a accedir al formulari d'inici de sessi\u00f3 aparega el nom autom\u00e0ticament.</p> <p>El nom de la cookie ser\u00e0 <code>last_used_name</code> i la durada ser\u00e0 de 30 dies.</p> <p>Crea la p\u00e0gina <code>logout.php</code> que en accedir eliminar\u00e0 la cookie.</p> </li> <li> <p>Assegurant les galetes.</p> <p>Despr\u00e9s de llegir l'article enlla\u00e7at als apunts, aplica els canvis oportuns per a fer m\u00e9s segures les cookies.</p> </li> </ol>"},{"location":"04-web-programming/04-99-tasks/#maneig-de-sessions","title":"Maneig de sessions","text":"<ol> <li> <p>Registre de visites</p> <p>Modifica la p\u00e0gina inicial del projecte (<code>index.php</code>) de forma que s'emmagatzeme en la sessi\u00f3 d'usuari els instants de totes les seves \u00faltimes visites. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de totes les seves visites anteriors. Afegeix un bot\u00f3 a la p\u00e0gina que permeta esborrar el registre de visites.</p> </li> <li> <p>Control d'acc\u00e9s</p> <p>Modifica el projecte de forma que en iniciar sessi\u00f3 (<code>login.php</code>) s'emmagatzeme un token en una variable de sessi\u00f3. Aquesta variable ens servir\u00e0 per comprovar si l'usuari ja ha iniciat sessi\u00f3 correctament. Un usuari sols podr\u00e0 accedir a la p\u00e0gina <code>logout.php</code> si ha iniciat sessi\u00f3.</p> <p>En aquest cas, en inicar la sessi\u00f3 correctament caldr\u00e0 redirigir a l'usuari a la p\u00e0gina principal mitjan\u00e7ant un missatge flaix que mostre el text: \"L'usuari administrador ha iniciat sessi\u00f3 correctament\".</p> </li> <li> <p>Nous tuits</p> <p>Crea la p\u00e0gina <code>tweet-new.php</code> que contindr\u00e0 un formulari per a la creaci\u00f3 d'un tweet.     </p> </li> <li> <p>Evitar atacts CSRF</p> <p>Implementa en el formulari de creaci\u00f3 de tuits la soluci\u00f3 proposada en els apunts.</p> </li> <li> <p>Gesti\u00f3 de formularis en dos fitxers.</p> <p>Modifica el formulari de creaci\u00f3 de tuits de forma que es gestione en dos fitxers tal com s'indica en els apunts.</p> </li> <li> <p>Bones pr\u00e0ctiques</p> <p>Adapta el projecte de forma que:</p> <ol> <li>Cada 15 minuts es regenere la sessi\u00f3.</li> <li>Sols use http per accedir a la cookie de sessi\u00f3.</li> <li>Les constrasenyes s'encripten amb bcrypt.</li> <li>Es tanque la sessi\u00f3 tal com s'indica.</li> </ol> </li> </ol>"},{"location":"04-web-programming/04-99-tasks/#sessions","title":"Sessions","text":"<ol> <li>Fes una c\u00f2pia del formulari de l'activitat 407 i modifica'l de forma que es gestione en tres p\u00e0gines:<ol> <li><code>form.php</code> que mostrar\u00e0 el formulari amb els errors quan hi hagen.</li> <li><code>form_process.php</code> que processar\u00e0 el formulari de forma que:<ol> <li>En cas d'error redirigir\u00e0 a <code>form.php</code> emmagatzemant en una variable de sessi\u00f3 els errors i les dades correctes.</li> <li>En cas d'\u00e8xit redirigir\u00e0 a <code>form_success.php</code> que mostrar\u00e0 en format de taula les dades enviades.</li> </ol> </li> <li><code>form_success.php</code> que mostrar\u00e0 en format de taula les dades del formulari</li> </ol> </li> </ol>"},{"location":"04-web-programming/04-99-tasks/#truiter","title":"Truiter","text":"<ol> <li>Clona el repositori https://github.com/corriol/2023-truiter i integra, respectant l'estructura definida, totes les activitats que han de vore amb el projecte: inici i tancament de sessi\u00f3 i creaci\u00f3 de nous tweets.</li> </ol>"},{"location":"04-web-programming/assets/04-01-forms/","title":"Processament de formularis","text":"<p>Fins ara ens hem centrat a con\u00e8ixer les caracter\u00edstiques del llenguatge PHP. En aquesta unitat posarem el focus en les caracter\u00edstiques pr\u00f2pies de les aplicacions web i com podem gestionar-les amb PHP. Aix\u00ed, veurem com enviar informaci\u00f3 mitjan\u00e7ant formularis, com processar-la i com podem mantenir informaci\u00f3 entre sol\u00b7licituds, \u00e9s a dir, mantenir l'estat. </p>"},{"location":"04-web-programming/assets/04-01-forms/#variables-predefinides","title":"Variables predefinides","text":"<p>Les variables predefinides s\u00f3n variables internes de PHP que poden usar-se des de qualsevol \u00e0mbit, per aix\u00f2 s'anomenen variables superglobals. Es tracta d'arrays associatius que contenen un conjunt de valors.</p> <ul> <li>$_SERVER. Cont\u00e9 informaci\u00f3 sobre l'entorn del servidor web i d'execuci\u00f3.</li> <li>$_GET, $_POST i $_COOKIE contenen les variables que s'han passat al script actual utilitzant, respectivament, els m\u00e8todes GET (par\u00e0metres en la URL), HTTP POST i Cookies HTTP </li> <li>$_REQUEST junta en un solament el contingut dels tres *arrays anteriors, <code>$_GET</code>, <code>$_POST</code> i <code>$_COOKIE</code>. </li> <li>$_ENV cont\u00e9 les variables que es puguen haver passat a PHP des de l'entorn en qu\u00e8 s'executa. </li> <li>$_FILES cont\u00e9 els fitxers que es puguen haver pujat al servidor utilitzant el m\u00e8tode POST. </li> <li>$_SESSION cont\u00e9 les variables de sessi\u00f3 disponibles per al gui\u00f3 actual.</li> </ul> <p>http://es.php.net/manual/es/language.variables.superglobals.php</p>"},{"location":"04-web-programming/assets/04-01-forms/#que-es-una-peticio-http","title":"Qu\u00e8 \u00e9s una petici\u00f3 HTTP?","text":"<p>Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'unes URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres.</p> <p>Hi ha diferents m\u00e8todes (<code>METHOD</code>) per a realitzar una petici\u00f3 (<code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, <code>PATCH</code>, etc.). Els m\u00e9s habituals s\u00f3n <code>GET</code>, que ja coneixes, i <code>POST</code>. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API.</p> <p></p>"},{"location":"04-web-programming/assets/04-01-forms/#metode-get","title":"M\u00e8tode GET","text":"<p>El m\u00e8todo de sol\u00b7licitud GET t\u00e9 les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que </li> <li>s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. </li> <li>El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. </li> <li>La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 2048 car\u00e0cters.</li> </ul> <p>Exemple de petici\u00f3 GET </p> <p>Inspecci\u00f3 de la petici\u00f3 </p> <p>Inspecci\u00f3 de la petici\u00f3 </p>"},{"location":"04-web-programming/assets/04-01-forms/#accedir-a-les-dades-de-la-peticio-get","title":"Accedir a les dades de la petici\u00f3 GET","text":"<p>Per a accedir a les dades usem la variable superglobal <code>$_GET</code>.</p> <p><code>$_GET</code> \u00e9s un array associatiu les claus del qual coincidiran amb els noms que li hem donat als par\u00e0metres.</p> <p>Per a accedir als par\u00e0metres de la petici\u00f3 anterior:</p> <pre><code>echo $_GET['nom'].' '.$_GET['cognom']; // Homer Simpson\n</code></pre>"},{"location":"04-web-programming/assets/04-01-forms/#metode-post","title":"M\u00e8tode POST","text":"<p>El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>S'utilitza per a enviar dades a un recurs.</li> <li>Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari.</li> <li>La petici\u00f3 no es guarda en cache.</li> <li>No es pot utilitzar en un enlla\u00e7.</li> <li>No roman en l'historial.</li> <li>No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres.</li> <li>Es solen utilitzar en els formularis.</li> </ul>"},{"location":"04-web-programming/assets/04-01-forms/#evitar-el-csrf","title":"Evitar el CSRF","text":"<p>En tota p\u00e0gina que reba par\u00e0metres POST has de comprovar el HTTP referer del navegador, i que aquest siga de dins de la teua web. En PHP el referer que envia el navegador s'emmagatzema en <code>$_SERVER['HTTP_REFERER']</code>. \u00c9s a dir, sols processarem peticions  que vinguen del teu lloc web.</p> <p>M\u00e9s informaci\u00f3</p> <p>En el seg\u00fcent enlla\u00e7 trobareu m\u00e9s informaci\u00f3 relativa als atacs CSRF CSRF: explicaci\u00f3n del ataque Cross Site Request Forgery</p> <p>Seria tal com:</p> <pre><code>if(parse_url($_SERVER['HTTP_REFERER'], PHP_URL_HOST)!=$_SERVER['HTTP_HOST']) \ndie('Anti-CSRF'); \n</code></pre> <p>Important</p> <p>Amb aquest codi estem obligant que el navegador envie un referer si o s\u00ed. Per tant nom\u00e9s ha d'utilitzar-se en p\u00e0gines a les quals el navegador accedisca des d'una altra p\u00e0gina de la nostra web.</p> <p>\u00d2bviament no podem col\u00b7locar-ho en la primera p\u00e0gina a la qual s'accedeix a la nostra web (<code>index.php</code> o similar), ja que si l'usuari a escrit l'adre\u00e7a a m\u00e0 en la barra del navegador no s'enviar\u00e0 referer cap i saltar\u00e0 el sistema.</p>"},{"location":"04-web-programming/assets/04-01-forms/#definicio-de-formularis","title":"Definici\u00f3 de formularis","text":"<p>Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina <code>index.php</code> (atribut <code>action</code> de l'element <code>form</code>).</p> <p>Utilitza el m\u00e8tode <code>post</code> indicat en l'atribut <code>method</code>:</p> <pre><code>&lt;form action=\"index.php\" method=\"post\"&gt;\n&lt;label for=\"nom\"&gt;Nom&lt;/label&gt;\n&lt;input type=\"text\" name=\"nom\" value=\"\"&gt;\n&lt;br /&gt;\n&lt;label for=\"cognom\"&gt;Cognom&lt;/label&gt;\n&lt;input type=\"text\" name=\"cognom\" value=\"\"&gt;\n&lt;br /&gt;\n&lt;input type=\"submit\" value=\"Enviar\"&gt;\n&lt;/form&gt;\n</code></pre> <p>Inspecci\u00f3 de la petici\u00f3: Headers </p> <p>Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres </p>"},{"location":"04-web-programming/assets/04-01-forms/#accedir-a-les-dades-de-la-peticio-post","title":"Accedir a les dades de la petici\u00f3 POST","text":"<p>Usem la variable superglobal <code>$_POST</code>. Funciona igual que <code>$_GET</code>, per\u00f2 amb els noms (atribut <code>name</code>) que li hem donat als camps del formulari.</p> <p>En depuraci\u00f3 podem mostar totes les dades rebudes:</p> <pre><code>var_dump ($_POST);\nprint_r($_POST)\n</code></pre> <p>Per a mostrar les dades individualment:</p> <pre><code>echo $_POST['nom'];\necho $_POST['cognom'];\n</code></pre>"},{"location":"04-web-programming/assets/04-01-forms/#accedir-a-parametres-no-existents","title":"Accedir a par\u00e0metres no existents","text":"<p>Errors del tipus  </p> <p><pre><code>Notice: Undefined index: nom in /home/ubuntu/index.php on line 6\n</code></pre> ens indiquen que la clau <code>nom</code>  no existeix en l'array <code>$_POST</code>. La variable supergloblal <code>$_POST</code> est\u00e0 buida si no s'ha enviat el formulari.</p> <p>Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament:</p> <pre><code>if ($_SERVER['REQUEST_METHOD'] === 'POST')\n{\n}\n</code></pre>"},{"location":"04-web-programming/assets/04-01-forms/#validacio-de-formularis","title":"Validaci\u00f3 de formularis","text":"<p>Hem de comprovar que les dades que envia el formulari s\u00f3n correctes.</p> <p>Les validacions a realitzar s\u00f3n les seg\u00fcents:</p> <ol> <li>Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final.</li> <li>Els camps email i data han de tenir el format esperat.</li> <li>Tots els camps s'han de filtrar amb <code>htmlspecialchars</code> per a evitar atacs de Cross-site Scripting (XSS).</li> </ol> <p>Aquest article sobre Cross-site Scripting \u00e9s molt il\u00b7lustratiu: PHP Form Validation</p>"},{"location":"04-web-programming/assets/04-01-forms/#valors-buits","title":"Valors buits","text":"<ol> <li>Els camps requerits no deurien quedar-se buits.</li> <li>Per a verificar que un valor no queda buit podem utilitzar la funci\u00f3 <code>empty()</code> de PHP.</li> </ol>"},{"location":"04-web-programming/assets/04-01-forms/#espais-en-blanc","title":"Espais en blanc","text":"<ol> <li>Hem d'eliminar els espais en blanc del principi i final dels camps.</li> <li>S'utilitza la funci\u00f3 <code>trim</code></li> </ol>"},{"location":"04-web-programming/assets/04-01-forms/#escapar-lentrada","title":"Escapar l'entrada","text":"<p>Sempre hem de filtrar l'entrada amb <code>htmlspecialchars</code> abans de mostrar el camp amb <code>echo</code> o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'html en la entitat corresponent, aix\u00ed no interferir\u00e0 en el el programa.</p>"},{"location":"04-web-programming/assets/04-01-forms/#comprovar-lemail","title":"Comprovar l'email","text":"<p>Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 <code>filter_var</code> </p> <p><pre><code>filter_var($email, FILTER_VALIDATE_EMAIL)\n</code></pre> o la funci\u00f3 <code>filter_input</code> quan obtenin les dades directament d'una variable extern.</p> <pre><code>// suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email'\n$email = filter_input(INPUT_POST, 'email', FILTER_VALIDATE_EMAIL)\n</code></pre>"},{"location":"04-web-programming/assets/04-01-forms/#filter_input","title":"filter_input","text":"<p><pre><code>filter_input(int $type, string $variable_name[, int $filter=FILTER_DEFAULT[, mixed $options]]):mixed\n</code></pre> La funci\u00f3 <code>filter_input</code> agafa una variable externa (<code>$_GET</code>, <code>$_POST</code>, etc) concreta pel seu nom i aplica el filtre indicat.</p> <p>Els filtres poden sanejar o validar les variables externes.</p> <p>Per exemple, si volem agafar el valor del par\u00e0metre nom  del querystring (<code>http://localhost/index.php?nom=&lt;h1&gt;Homer&lt;/h1&gt;</code>) usarem el tipus <code>INPUT_GET</code>.</p> <p>El filtre <code>FILTER_SANITIZE_STRING</code> elimina etiquetes, i opcionalment elimina o codifica caracters especials.</p> <pre><code>$nom = filter_input(INPUT_GET, 'nom', FILTER_SANITIZE_STRING).  // $nom = Homer\n</code></pre> <p>M\u00e9s informaci\u00f3 en:</p> <ul> <li>filter_var</li> <li>filter_input</li> </ul>"},{"location":"04-web-programming/assets/04-01-forms/#comprovar-la-data","title":"Comprovar la data","text":"<ul> <li>Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte.</li> <li>Podem utilitzar el m\u00e8tode est\u00e0tic <code>createFromFormat</code> de la classe <code>DateTime</code></li> </ul> <p>M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php</p>"},{"location":"04-web-programming/assets/04-01-forms/#exemple","title":"Exemple","text":"<pre><code>$data1 = \"2001-05-02\"; // Data \u00e9s de tipus string\n// DateTime::createFromFormat converteix una cadena de text a on objecte DateTime\n// ens tornar\u00e0 una inst\u00e0ncia de DateTime o FALSE en cas d'error.\n$dt1 = DateTime::createFromFormat('Y-m-d', $data1);  \nif ($dt1 === false) {\necho \"La data d'inici \u00e9s incorrecta\";\n}\n</code></pre> <p>https://www.php.net/manual/es/function.strtotime.php</p> <p>Tamb\u00e9 \u00e9s habitual trobar els controls de data separats en 3 elements input. Un per a l\u2019any, l\u2019altre per a mes i l\u2019altre per al dia.</p>"},{"location":"04-web-programming/assets/04-01-forms/#bones-practiques-en-lobtencio-de-dades-des-de-lexterior","title":"Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior","text":"<p>Cal seguir les seg\u00fcents bones pr\u00e0ctiques:</p> <ol> <li>No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP.</li> <li>Sanegeu i valideu l\u2019entrada de dades sempre.</li> <li>Les funcions <code>filter_var()</code> i <code>filter_input()</code> poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters).</li> <li>Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n dades que venen de l'exterior.</li> </ol> <p>A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux.</p> <p></p> <p>En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5:</p> <ul> <li>Formularios en HTML en MDN web docs.</li> <li>Formularios en HTML5 en MDN web docs.</li> <li>HTML Forms en W3CSchools.</li> </ul>"},{"location":"04-web-programming/assets/04-01-forms/#pujada-de-fitxers","title":"Pujada de fitxers","text":"<p>Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal <code>$_FILES</code>.</p> <p>En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius.</p>"},{"location":"04-web-programming/assets/04-01-forms/#formulari","title":"Formulari","text":"<p>Per poder utilitzar el tipus <code>file</code> en l'element <code>input</code> cal que el formulari incloga l'atribut <code>enctype</code> amb el valor <code>multipart/form-data</code>. </p> <p>El valor de l'atribut <code>name</code> de l'element <code>input</code> ser\u00e0 l'\u00edndex de l'array associatiu <code>$_FILES</code> que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer.</p> <p>En el seg\u00fcent exemple:</p> <p><pre><code>&lt;form action=\"upload.php\" enctype=\"multipart/form-data\" method=\"POST\"&gt;\n&lt;input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"10240\"&gt;\n&lt;input type=\"file\" name=\"image\" /&gt;\n&lt;input type=\"submit\" value=\"Upload\" /&gt;\n&lt;/form&gt;\n</code></pre> Emprarem <code>$_FILES['image']</code> per obtenir les dades de l'arxiu penjat.</p>"},{"location":"04-web-programming/assets/04-01-forms/#variable-superglobal-_files","title":"Variable superglobal <code>$_FILES</code>","text":"<p>Cada element en <code>$_FILES</code> \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n:</p> <ul> <li><code>name</code>. El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva.</li> <li><code>type</code>. El tipus MIME del fitxer dedu\u00eft pel navegador.</li> <li><code>size</code>. La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0.</li> <li><code>tmp_name</code>. El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat. </li> </ul>"},{"location":"04-web-programming/assets/04-01-forms/#moure-el-fitxer","title":"Moure el fitxer","text":"<p>Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 <code>move_uploaded_file</code> per a guardar-lo en la ubicaci\u00f3 definitiva. </p> <p>La funci\u00f3 <code>is_uploaded_file</code> ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s.</p> <p><code>move_uploaded_file</code> ja fa eixa comprovaci\u00f3 en executar-se.</p>"},{"location":"04-web-programming/assets/04-01-forms/#gestio-derrors","title":"Gesti\u00f3 d'errors","text":"<p>PHP torna un codi d'error en <code>$_FILES</code>. El codi es pot trabar en la clau <code>error</code>. Per exemple: <code>$_FILES['image']['error']</code>. </p> <p>Els missates d'error m\u00e9s importants s\u00f3n:</p> <ul> <li><code>UPLOAD_ERR_OK</code>: La pujada ha sigut correcta.</li> <li><code>UPLOAD_ERR_INI_SIZE</code>: La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva <code>upload_max_filesize</code>.</li> <li><code>UPLOAD_ERR_FORM_SIZE</code>: La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en <code>max_file_size</code>. </li> <li><code>UPLOAD_ERR_NO_FILE</code>: No s'ha enviat cap fitxer.</li> </ul> <p>En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3.</p>"},{"location":"05-data-access/0500-intro/","title":"Acc\u00e9s a dades","text":"<p>Duraci\u00f3: 16 hores</p> <p>Objectius</p> <ul> <li>Establir connexions amb la base de dades des de PHP</li> <li>Executar sent\u00e8ncies SQL utilitzant PDO.</li> <li>Fer consultes preparades.</li> <li>Obtenir registres afectats o retornats per una sent\u00e8ncia SQL.</li> <li>Gestionar errors i excepcions que es produ\u00efsquen durant la connexi\u00f3 o establiment de la mateixa aix\u00ed com en l\u2019execuci\u00f3 del codi del nostre projecte.</li> <li>Emprar transaccions per a assegurar la integritat de la BD.</li> <li>Configurar i administrar b\u00e0sicament PhpMyAdmin.</li> <li>Con\u00e9ixer el llenguatge SQL.</li> </ul> <p>Continguts conceptuals</p> <ol> <li>Maneig de PhpMyAdmin<ol> <li>Creaci\u00f3 de Bases de dades</li> <li>Creaci\u00f3 de taules i relacions</li> <li>Manipulaci\u00f3 de dades</li> <li>Importaci\u00f3 i exportaci\u00f3 de dades</li> <li>Gesti\u00f3 d\u2019usuaris </li> </ol> </li> <li>Acc\u00e9s a la base de dades mitjan\u00e7ant PHP amb la llibreria PDO<ol> <li>Connexi\u00f3 a la base de dades</li> <li>Execuci\u00f3 de consultes</li> <li>Mostrar dades din\u00e0miques</li> <li>Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades de la BBDD</li> <li>Altres m\u00e8todes interessants.<ol> <li><code>LastInsertId()</code></li> <li><code>quote()</code></li> <li><code>rowCount()</code></li> </ol> </li> <li>Gesti\u00f3 d\u2019errors en l\u2019acc\u00e9s</li> </ol> </li> </ol> <p>Continguts procedimentals</p> <ul> <li>Creaci\u00f3 de la base de dades, taules i relacions amb PhpMyAdmin.</li> <li>Creaci\u00f3 i \u00fas de l\u2019arxiu de configuraci\u00f3 de la base de dades per establir connexi\u00f3 amb la base de dades.</li> <li>Creaci\u00f3 de consultes preparades mitjan\u00e7ant el m\u00e8tode prepare.</li> </ul> <p>Criteris d\u2019avaluaci\u00f3 </p> <ul> <li>RA06. A) S\u2019han analitzat les tecnologies que permeten l\u2019acc\u00e9s mitjan\u00e7ant programaci\u00f3 a la informaci\u00f3 disponible en magatzems de dades.</li> <li>RA06. B) S\u2019han creat aplicacions que establisquen connexions amb bases de dades.</li> <li>RA06. C) S\u2019ha recuperat informaci\u00f3 emmagatzemada en bases de dades.</li> <li>RA06. D )S\u2019ha publicat en aplicacions web la informaci\u00f3 recuperada.</li> <li>RA06. E) S\u2019han utilitzat conjunts de dades per a emmagatzemar la informaci\u00f3.</li> <li>RA06. F) S\u2019han creat aplicacions web que permeten l\u2019actualitzaci\u00f3 i l\u2019eliminaci\u00f3 d\u2019informaci\u00f3 disponible en una base de dades.</li> <li>RA06. G) S\u2019han utilitzat transaccions per a mantenir la consist\u00e8ncia de la informaci\u00f3.</li> <li>RA06. H) S\u2019han provat i documentat les aplicacions.</li> </ul>"},{"location":"05-data-access/0501-data-access/","title":"Acc\u00e9s a dades mitjan\u00e7ant PHP PDO","text":"<p>PHP permet treballar en base de dades MySQL gr\u00e0cies a dues llibreries. MySQLi i PDO. Com que MySQLi est\u00e0 dissenyada exclusivament per a MySQL nosaltres aprofundirem en PDO, que permet connectar fins amb 12 sistemes gestors de base de dades diferents.</p> <p>Les sigles PDO (PHP Data Objects) fan refer\u00e8ncia a una interf\u00edcie de PHP que ens permet accedir a bases de dades de qualsevol tipus en PHP.</p> <p>Cada controlador de bases de dades que implemente la interf\u00edcie PDO pot exposar caracter\u00edstiques espec\u00edfiques de la base de dades, com les funcions habituals de l'extensi\u00f3. </p> <p>Un controlador per SGDB</p> <p>Cal observar que no es pot realitzar cap de les funcions de la bases de dades utilitzant l'extensi\u00f3 PDO per si mateixa; s'ha d'utilitzar-ne una de PDO espec\u00edfica de la base de dades per tenir acc\u00e9s a un servidor de base de dades.</p> <p></p> Capes PDO <p>PDO proporciona una capa d'abstracci\u00f3 d'acc\u00e9s a dades, el que significa que, independentment de la base de dades que s'estiga utilitzant, s'usen les mateixes funcions per fer consultes i obtenir dades.</p> <p>Per saber els controladors PDO disponibles en el nostre sistema:</p> <pre><code>print_r(PDO::getAvailableDrivers());\n</code></pre> <p>La informaci\u00f3 oficial sobre PDO es troba en  http://php.net/manual/es/book.pdo.php</p>"},{"location":"05-data-access/0501-data-access/#classes-pdo-pdostatement-i-pdoexception","title":"Classes PDO, PDOStatement i PDOException","text":"<p>PDO proporciona 3 classes per a gestionar l'acc\u00e9s a la base de dades</p> <ul> <li><code>PDO</code>: S'utilitza per representar la connexi\u00f3 entre PHP i un   servidor de bases de dades.  </li> <li><code>PDOStatement</code>: representa una sent\u00e8ncia preparada i tamb\u00e9 ens   permet accedir al conjunt de resultats associat.  </li> <li><code>PDOException</code>: representa els errors generats PDO.</li> </ul>"},{"location":"05-data-access/0501-data-access/#connexio-a-la-base-de-dades","title":"Connexi\u00f3 a la base de dades","text":"<p>Per a crear una nova connexi\u00f3 s'utilitza la classe <code>PDO</code>:</p> <pre><code>public __construct(string $dsn [, string $username [, string $passwd [, array $options ]]] )\n</code></pre> <p>El constructor t\u00e9 els seg\u00fcents par\u00e0metres:</p> <ul> <li><code>dsn</code>: cadena de connexi\u00f3</li> <li><code>username</code>: nom d'usuari</li> <li><code>passwd</code>: contrasenya d'usuari</li> <li><code>options</code>: permet afegir altres opcions de la connexi\u00f3</li> </ul> <pre><code>$pdo = new PDO(\"mysql:host=localhost; dbname=test\", \"dbuser\", \"1234\");\n</code></pre> <p>En l'exemple anterior mysql representa una connexi\u00f3 a una base de dades MySQL ( podria ser: MSSQL, Sybase, sqlite, etc.) anomenada <code>test</code> que es troba al servidor <code>localhost</code>. La connexi\u00f3 es realitzar\u00e0 mitjan\u00e7ant l'usuari <code>dbuser</code> i la contrasenya <code>1234</code>.</p> <pre><code>// Exemple de connexi\u00f3 a diferents tipus de bases de dades.\n# Connectem a la base de dades\n$host = 'www.local';\n$hbname = 'cxbasex';\n$user = 'cxbasex';\n$pass = 'xxxxxx';\ntry {\n# MS SQL Server y Sybase amb PDO_DBLIB\n$pdo = new PDO(\"MSSQL:host=$host;dbname=$dbname, $user, $pass\");\n$pdo = new PDO(\"Sybase:host=$host;dbname=$dbname, $user, $pass\");\n/* MySQL amb PDO_MYSQL\n     Perqu\u00e8 la connexi\u00f3 a mysql utilitzi les collation UTF-8 afegir charset = utf8 a string\n     de la connexi\u00f3. */\n$pdo = new PDO  (\"mysql:host=$host;dbname=$dbname;charset=utf8\", $user, $pass);\n// Perqu\u00e8 generi excepcions a l'hora de reportar errors.\n$pdo-&gt;setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n# SQLite Database\n$pdo = new PDO (\"sqlite:my/database/path/database.db\");\n}\ncatch (PDOException $e) {\ndie($e-&gt; getMessage ());\n}\n// Si tot va b\u00e9 en $pdo tindrem el objecte que gestionar\u00e0 la connexi\u00f3 amb la base de dades.\n</code></pre>"},{"location":"05-data-access/0501-data-access/#tancar-la-connexio-a-la-base-de-dades","title":"Tancar la connexi\u00f3 a la base de dades","text":"<p>Es recomana tancar sempre la connexi\u00f3 a la base de dades quan no es vaja a utilitzar m\u00e9s durant el nostre proc\u00e9s.</p> <p>Cal recordar que els recursos s\u00f3n limitats i quan hi ha pocs usuaris no hi ha cap problema, per\u00f2 si tenim molts usuaris simultanis llavors \u00e9s quan sorgeixen problemes en haver assolit el nombre m\u00e0xim de connexions amb el servidor, per exemple.</p> <p>En tancar la connexi\u00f3 de forma expl\u00edcita accelerem l'alliberament de recursos perqu\u00e8 estiguin disponibles per a altres usuaris.</p> <pre><code>// Si vullguerem tancar la connexi\u00f3 amb la base de dades simplement podr\u00edem fer al final del fitxer.\n$pdo = null;\n</code></pre>"},{"location":"05-data-access/0501-data-access/#execucio-de-consultes","title":"Execuci\u00f3 de consultes","text":"<p>Per a realitzar consultes <code>PDO</code> proporciona tres m\u00e8todes:</p> <ul> <li><code>PDO::query()</code> per a consultes de recuperaci\u00f3 de dades (SELECT).</li> <li><code>PDO::exec()</code> per a consultes d'inserci\u00f3, modificaci\u00f3 i esborrat de dades (INSERT, UPDATE i DELETE)</li> <li><code>PDO::prepare()</code> per a consultes de tot tipus amb par\u00e0metres. Aquest \u00e9s el m\u00e8tode recomanat si la consulta t\u00e9 par\u00e0metres o si s'ha d'executar divereses vegades per\u00f2 aix\u00f2 hem dedicat un apartat espec\u00edfic.</li> </ul> <p>Una vegada executada la consulta les dades s'obtenen a trav\u00e9s del m\u00e8tode <code>PDOStatement::fetch()</code> o <code>PDOStatement::fetchAll()</code>.</p> <ul> <li><code>fetch()</code>: Obt\u00e9 la seg\u00fcent fila d'un recordset (conjunt de   resultats). http://php.net/manual/es/pdostatement.fetch.php</li> <li><code>fetchAll()</code>: Retorna un array que cont\u00e9 totes les files del conjunt   de resultats (el tipus de dades a retornar es pot indicar com a   par\u00e0metre). http://php.net/manual/es/pdostatement.fetchall.php</li> </ul>"},{"location":"05-data-access/0501-data-access/#estil-de-busqueda-fetch-style","title":"Estil de b\u00fasqueda (fetch style)","text":"<p>Abans de cridar al m\u00e8tode <code>fetch()</code> una bona idea \u00e9s indicar-li com volem que ens torne les dades de la base de dades.</p> <p>Tindrem les seg\u00fcents opcions en el m\u00e8tode <code>fetch()</code>:</p> <ul> <li><code>PDO::FETCH_ASSOC</code>: Torna les dades en un array associatiu pel nom de camp de la   taula.</li> <li><code>PDO::FETCH_NUM</code>: Retorna un array indexat per la posici\u00f3 del camp.</li> <li><code>PDO::FETCH_BOTH</code>: Retorna un array associatiu pel nom de camp de la taula i un    indexat per la posici\u00f3 del camp. \u00c9s una combinaci\u00f3 dels dos estils anteriors. \u00c9s l'estil per defecte.</li> <li><code>PDO::FETCH_BOUND</code>: Assigna els valors retornats a les variables   assignades amb el m\u00e8tode <code>bindColumn()</code>.</li> <li><code>PDO::FETCH_CLASS</code>: Assigna els valors dels camps a les propietats   d'una classe. Si les propietats no existeixen en aquesta classe, les   crear\u00e0.</li> <li><code>PDO::FETCH_INTO</code>: Actualitza una inst\u00e0ncia existent d'una classe.</li> <li><code>PDO::FETCH_LAZY</code>: Combina <code>PDO::FETCH_BOTH</code>/<code>PDO::FETCH_OBJ</code>,   creant les variables de l'objecte a mesura que es van fent servir.</li> <li><code>PDO::FETCH_OBJ</code>: Retorna un objecte an\u00f2nim amb els noms de les   propietats que es corresponen amb els noms de columnes.</li> </ul> <p>Podem ajustar l'estil de b\u00fasqueda de dues formes:</p> <ol> <li> <p>Abans de recuperar registres:</p> <pre><code>$stmt-&gt;setFetchMode(PDO::FETCH_ASSOC);\n</code></pre> </li> <li> <p>En el moment de recuperar-los:</p> <pre><code>$stmt-&gt;fetch(PDO::FETCH_ASSOC);\n$stmt-&gt;fechtall(PDO::FETCH_ASSOC);\n</code></pre> </li> </ol> <p><code>PDO::FETCH_CLASS</code></p> <p>Cal saber que no podem usar <code>PDO::FETCH_CLASS</code> com a par\u00e0metre de <code>PDOStatement::fetch()</code>. Cal controlar l'estil de b\u00fasqueda amb <code>PDOStatement::setFetchMode()</code>.</p>"},{"location":"05-data-access/0501-data-access/#array-associatiu-fetch_assoc","title":"Array associatiu <code>FETCH_ASSOC</code>","text":"<p>Per executar la consulta SELECT si no tenim par\u00e0metres en la consulta podrem usar <code>PDO::query()</code></p> <p>Vegem un exemple de consulta SELECT:</p> <pre><code>try {\n#Per executar la consulta SELECT si no tenim par\u00e0metres en la consulta podrem usar -&gt; query ()\n$stmt = $pdo-&gt;query(\"SELECT name, addr, city from colleague\");\n/* Indiquem en quin format volem obtenir les dades de la taula en format d'array associatiu.\n       Si no indiquem res per defecte s'usar\u00e0 FETCH_BOTH el que ens permetr\u00e0 accedir com a vector\n        associatiu o array num\u00e8ric. */\n$stmt-&gt;setFetchMode(PDO::FETCH_ASSOC);\n#Llegim les dades del recordset amb el m\u00e8tode-&gt;fetch ()\nwhile ($row=$stmt-&gt;fetch()) {\necho $row['name']. \"&lt;br/&gt;\";\necho $row['addr']. \"&lt;br/&gt;\";\necho $row['city']. \"&lt;br/&gt;\";\n}\n#Per alliberar els recursos utilitzats en la consulta SELECT\n$stmt = null;\n} catch (PDOException $err) {\n// Mostrem un missatge gen\u00e8ric d'error.\necho \"Error: executant consulta SQL.\";\n}\n</code></pre>"},{"location":"05-data-access/0501-data-access/#objecte-fetch_obj","title":"Objecte (<code>FETCH_OBJ</code>)","text":"<p>En aquest estil de b\u00fasqueda es crear\u00e0 un objecte est\u00e0ndard (<code>stdClass</code>) per cada fila que llegim del recordset.</p> <p>Per exemple:</p> <pre><code>try {\n#Creem la consulta\n$stmt = $pdo-&gt;query('SELECT name, addr, city from colleague');\n#Ajustem la manera d'obtenci\u00f3 de dades\n$stmt-&gt;setFetchMode(PDO::FETCH_OBJ);\n#Mostrem els resultats.\n#Fixeu-vos que es torna un objecte cada vegada que es llegeix una fila del recordset.\nwhile ($row = $stmt-&gt;fetch()) {\necho $row-&gt;name. \"&lt;br/&gt;\";\necho $row-&gt;addr. \"&lt;br/&gt;\";\necho $row-&gt;city. \"&lt;br/&gt;\";\n}\n#Alliberem els recursos utilitzats per $stmt\n$stmt = null;\n}\ncatch (PDOException $err)\n{\n// Mostrem un missatge gen\u00e8ric d'error.\necho \"Error: executant consulta SQL.\";\n}\n</code></pre>"},{"location":"05-data-access/0501-data-access/#classe-fetch_class","title":"Classe (<code>FETCH_CLASS</code>)","text":"<p>En aquest estil de b\u00fasqueda els registres es tornaran en una nova inst\u00e0ncia de la classe indicada en el segon par\u00e0metre, fent correspondre les columnes del conjunt de resultats amb els noms de les propietats de la classe, i cridant al constructor despr\u00e9s, a menys que tambi\u00e9n es proporcione l'opci\u00f3 <code>PDO::FETCH_PROPS_LATE</code>. Si algun nom de camp no existeix com a propietat en la classe es crear\u00e0 din\u00e0micament.</p> <pre><code>class Persona\n{\nprivate $name;\npublic function __construct()\n{\n$this-&gt;decir();\n}\npublic function decir()\n{\nif (isset($this-&gt;name)) {\necho \"Soy {$this-&gt;name}.\\n\";\n} else {\necho \"A\u00fan no tengo nombre.\\n\";\n}\n}\n}\n$sth = $dbh-&gt;query(\"SELECT * FROM people\");\n$sth-&gt;setFetchMode(PDO::FETCH_CLASS, 'Persona');\n$persona = $sth-&gt;fetch();\n$persona-&gt;decir();\n$sth-&gt;setFetchMode(PDO::FETCH_CLASS|PDO::FETCH_PROPS_LATE, 'Persona');\n$persona = $sth-&gt;fetch();\n$persona-&gt;decir();\n</code></pre> <p>Mostrar\u00e0:</p> <pre><code>Soy Alice.\nSoy Alice.\nA\u00fan no tengo nombre.\nSoy Bob.\n</code></pre>"},{"location":"05-data-access/0501-data-access/#consultes-preparades","title":"Consultes preparades","text":"<p>Com hem vist en l'apartat anterior les consultes poden acceptar par\u00e0metres. La millor forma de realitzar aquestes consultes \u00e9s mitjan\u00e7ant les consultes preparades.</p> <p>Les consultes preparades ens aporten dues avantatges importants:</p> <ul> <li>Per a sent\u00e8ncies que seran executades en m\u00faltiples ocasions amb   diferents par\u00e0metres optimitza el rendiment de la aplicaci\u00f3.</li> <li>Ajuda a prevenir injeccions SQL eliminant la necessitat de posar   entre cometes manualment els par\u00e0metres.</li> </ul> <p>Per a construir una sent\u00e8ncia preparada cal incloure uns marcadors en la sent\u00e8ncia SQL.</p> <p>Hi ha tres formes de fer-ho:</p> <pre><code># Marcadors an\u00f2nims\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\");\n# Marcadors coneguts\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague (name, addr, city) values (:name, :addr, :city)\");\n# Sense marcadors. Aquest m\u00e8tode est\u00e0 desaconsellat! Prohibit en el nostre cas.\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague (name, addr, city) values ($name, $addr, $city)\");\n</code></pre> <p>Haur\u00e0s d'usar el primer o el segon m\u00e8tode dels que es mostren anteriorment. El tipus de marcadors que utilitzem afectaran a la forma d'assignar els valors d'eixos marcadors.</p>"},{"location":"05-data-access/0501-data-access/#assignacio-amb-marcadors-anonims","title":"Assignaci\u00f3 amb marcadors an\u00f2nims","text":"<p>Per enlla\u00e7ar els marcadors an\u00f2nims amb el seu corresponent valor es pot utilitzar <code>bindParam</code> o <code>bindValue</code>:</p> <p>Marcadors an\u00f2nims</p> <p><code>$pdo-&gt;prepare()</code> usant marcadors an\u00f2nims <code>?</code>, tracta totes les variables com si foren string, per la qual cosa far\u00e0 servir cometes per delimitar els seus valors per defecte.</p> <pre><code># Marcadors an\u00f2nims\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\");\n# Assignem variables a cada marcador, indexats l'1 al 3\n$stmt-&gt;bindParam(1, $name);\n$stmt-&gt;bindParam(2, $addr);\n$stmt-&gt;bindParam(3, $city);\n# Inserim una fila.\n$name = \"Daniel\";\n$addr = \"1 Wicked Way\";\n$city = \"Arlington Heights\";\n$stmt-&gt;execute();\n# Inserim un altra fila con valores diferents.\n$name = \"Steve\"\n$addr = \"5 Circle Drive\";\n$city = \"Schaumburg\";\n$stmt-&gt;execute();\n</code></pre> <p>Un altra forma d'assignaci\u00f3 amb marcadors an\u00f2nims \u00e9s mitjan\u00e7ant un array associatiu:</p> <pre><code> # Les dades que volem inserir\n$dades = ['Cathy', '9 Dark and Twisty Road', 'Cardiff'];\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\");\n$stmt-&gt;execute($dades);\n</code></pre>"},{"location":"05-data-access/0501-data-access/#diferencia-entre-lus-de-bindparam-i-bindvalue","title":"Difer\u00e8ncia entre l'\u00fas de <code>bindParam</code> i <code>bindValue</code>","text":"<p>Amb <code>bindParam</code> es vincula la variable al par\u00e0metre i en el moment de fer l'execute \u00e9s quan s'assigna realment el valor de la variable a aquest par\u00e0metre.</p> <p>Amb <code>bindValue</code> s'assigna el valor de la variable a aquest par\u00e0metre just en el moment d'executar la instrucci\u00f3 <code>bindValue</code>.</p> <p>Exemple de difer\u00e8ncia entre <code>bindParam</code> i <code>bindValue</code>:</p> <pre><code>// Ejemplo con bindParam:\n$sex = 'hombre';\n$s = $dbh-&gt;prepare('SELECT name FROM estudiantes WHERE sexo = :sexo');\n$s-&gt;bindParam(':sexo', $sex);\n$sex = 'mujer';\n$s-&gt;execute(); // se ejecut\u00f3 con el valor WHERE sexo = 'mujer'\n// El mismo ejemplo con bindValue:\n$sex = 'hombre';\n$s = $dbh-&gt;prepare('SELECT name FROM students WHERE sexo = :sexo');\n$s-&gt;bindValue(':sexo', $sex);\n$sex = 'mujer';\n$s-&gt;execute(); // se ejecut\u00f3 con el valor WHERE sexo = 'hombre'\n</code></pre>"},{"location":"05-data-access/0501-data-access/#assignacio-amb-marcadors-coneguts","title":"Assignaci\u00f3 amb marcadors coneguts","text":"<p>Els marcadors coneguts s\u00f3n la forma m\u00e9s recomanable de treballar amb PDO, ja que a l'hora de fer el <code>bindParam</code> o el <code>bindValue</code> es pot especificar el tipus de dada i la seua longitud.</p> <p>Format de <code>bindParam</code> amb marcadors coneguts:</p> <pre><code>bindParam(':marcador', $variableVincular, TIPO DATOS PDO)\n</code></pre> <p>Exemple d'\u00fas de <code>bindParam</code>:</p> <pre><code>$stmt-&gt;bindParam(':calorias', $misCalorias, PDO::PARAM_INT);\n$stmt-&gt;bindParam(':apellidos', $misApellidos, PDO::PARAM_STR, 35); // 35 caracteres como m\u00e1ximo.\n</code></pre> <p>Amb marcadors coneguts quedaria de la seg\u00fcent forma:</p> <pre><code>$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague (name, addr, city) value (:name, :addr, :city)\");\n# El primer argument de bindParam \u00e9s el nom del marcador i el segon la variable\n# que contindr\u00e0 les dades.\n# Els marcadors conocidos siempre comienzan con :\n$stmt-&gt;bindParam(':name', $name);\n$name='Pepito';\n$stmt-&gt;bindParam(':addr', $addr);\n$addr='Duanes, 17';\n$stmt-&gt;bindParam(':city', $city);\n$city = 'Pego';\n$stmt-&gt;execute();\n# Tamb\u00e9 podem fer-ho mitjan\u00e7ant un array associatiu\n$dades = ['name' =&gt; 'Pepito', 'addr' =&gt; 'Duanes, 17', 'city' =&gt; 'Pego' );\n# Fixeu-vos es passa l'array de dades en execute().\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague (name, addr, city) value (:name, :addr, :city)\");\n$stmt-&gt;execute($dades);\n# La \u00faltima instrucci\u00f3n se podr\u00eda poner tambi\u00e9n as\u00ed:\n$stmt-&gt;execute([\n'name' =&gt; 'Pepito',\n'addr' =&gt; 'Duanes, 17',\n'city' =&gt; 'Pego'\n]);\n</code></pre> <p>Una altra caracter\u00edstica dels marcadors coneguts \u00e9s que ens permetran treballar amb objectes directament a la base de dades, assumint que les propietats d'aquest objecte coincideixen amb els noms dels camps de la taula a la base de dades.</p> <p>Exemple d'\u00fas de marcadors coneguts i objectes:</p> <pre><code># Un objeto sencillo\nclass Person {\npublic $name;\npublic $addr;\npublic $city;\nfunction __construct($n,$a,$c) {\n$this-&gt;name = $n;\n$this-&gt;addr = $a;\n$this-&gt;city = $c;\n}\n# etc ...\n}\n$cathy = new Person('Pepito','Duanes, 17','Pego');\n# Preparaci\u00f3n de la consulta\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colegas (name, addr, city) value (:name, :addr, :city)\");\n# Inserci\u00f3n del objeto\n$stmt-&gt;execute((array)$cathy);\n</code></pre>"},{"location":"05-data-access/0501-data-access/#exemple-dus","title":"Exemple d'\u00fas","text":"<p>Per a utilitzar les consultes preparades seguirem sempre aquest esquema:</p> <p></p> <pre><code>$pdo = new PDO('sqlite:/path/db/users.db');\n# 1. Preparem la connexi\u00f3\n$stmt = $pdo-&gt;prepare('SELECT name FROM users WHERE id = :id');\n$id = 5;\n# 2. Vinculem els par\u00e0metres\n$stmt-&gt;bindParam(':id', $id, PDO::PARAM_INT);\n# 3. Executem la consulta\n$stmt-&gt;execute();\n# 4. Obtenim els registres\n# Un a un\n$row = $stmt-&gt;fetch();\n# Tots a l'hora\n$rows = $stmt-&gt;fetchAll();\n</code></pre> <p>Dates en MySQL</p> <p>Recorda que el tipus DATE de MySQL es recupera com un string en format \"YYYY-MM-DD\" i a l'hora</p> <p>d'emmagatzemar-lo cal que tinga el mateix format.</p> <pre><code>Si f\u00f3ra DATETIME tamb\u00e9 caldria afegir l'hora \"YY-MM-DD hh:mm:ss\".\n</code></pre>"},{"location":"05-data-access/0501-data-access/#insercio-modificacio-i-eliminacio-de-dades-de-la-bbdd","title":"Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades de la BBDD","text":"<p>Inserir noves dades, actualitzar-les o esborrar-les s\u00f3n algunes de les operacions m\u00e9s comunes en una base de dades. Amb PDO podem fer aquestes aquestes operacions en 3 passos.</p> <p></p> <p>Exemple d'\u00fas:</p> <pre><code># $stmt ser\u00e0 un objecte de tipus PDOStatement (consulta preparada)\n$stmt = $pdo-&gt;prepare(\"INSERT INTO colleague(name, addr, city) values (:name, :addr, :city)\");\n# Assignem els valors dels marcadors\n$name = \"Josep\"\n$addr = \"Duanes, 17\"\n$city = \"Pego\"\n$stmt-&gt;BindValue(\"name\", $name);\n$stmt-&gt;BindValue(\"addr\", $addr);\n$stmt-&gt;BindValue(\"city\", $city);\n# Executem la consulta amb -&gt;execute() m\u00e8tode de l'objecte PDOStatement\n# Este m\u00e8tode devuelve true o false.\n$result = $stmt-&gt;execute();\n</code></pre>"},{"location":"05-data-access/0501-data-access/#exemples-crud-create-read-update-delete-insert-update-y-delete","title":"Exemples CRUD (Create, Read, Update, Delete): INSERT, UPDATE y DELETE","text":"<p>INSERT</p> <pre><code>try {\n$pdo = new PDO(\"mysql:host=$host;dbname=$dbname;charset=utf8\", $username, $password);\n$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n$stmt = $pdo-&gt;prepare('INSERT INTO colleague (name, addr, city ) VALUES(:name,\n    :addr, :city)');\n$stmt-&gt;execute([\n':name' =&gt; 'Josep',\n':addr' =&gt; 'Duanes, 17',\n':city' =&gt; 'Pego'\n]);\n# Affected Rows?\necho $stmt-&gt;rowCount(); // 1\n} catch(PDOException $e) {\necho 'Error: ' . $e-&gt;getMessage();\n}\n</code></pre> <p>UPDATE</p> <pre><code>$id = 5;\n$name = \"Joe the Plumber\";\ntry {\n$pdo = new PDO(\"mysql:host=$host;dbname=$dbname;charset=utf8\", $username, $password);\n$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n$stmt = $pdo-&gt;prepare('UPDATE someTable SET name = :name WHERE id = :id');\n$stmt-&gt;execute(array(\n':id' =&gt; $id,\n':name' =&gt; $name\n));\necho $stmt-&gt;rowCount(); // 1\n} catch(PDOException $e) {\necho 'Error: ' . $e-&gt;getMessage();\n}\n</code></pre> <p>DELETE</p> <pre><code>$id = 5; // From a form or something similar\ntry {\n$pdo = new PDO(\"mysql:host=$host;dbname=$dbname;charset=utf8\", $username, $password);\n$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n$stmt = $pdo-&gt;prepare('DELETE FROM someTable WHERE id = :id');\n$stmt-&gt;bindParam(':id', $id); // this time, we'll use the bindParam method\n$stmt-&gt;execute();\necho $stmt-&gt;rowCount(); // 1\n} catch(PDOException $e) {\necho 'Error: ' . $e-&gt;getMessage();\n}\n</code></pre>"},{"location":"05-data-access/0501-data-access/#alguns-metodes-dinteres","title":"Alguns m\u00e8todes d'inter\u00e8s","text":"<p>Alguns m\u00e8todes interessant i que podem utilitzar per a millorar la gesti\u00f3 de l'acc\u00e9s a dades s\u00f3n:</p> <ul> <li><code>PDO::lastInsertId()</code>, ens torna la clau prim\u00e0ria (<code>id</code>) del \u00faltim registre inserit en la base de dades.</li> <li><code>PDOStatement::rowCount()</code>, ens torna el n\u00famero de files afectades por una sent\u00e8ncia DELETE, INSERT, o UPDATE.</li> </ul>"},{"location":"05-data-access/0501-data-access/#gestio-derrors-en-lacces","title":"Gesti\u00f3 d'errors en l'acc\u00e9s","text":"<p>PDO pot utilitzar les excepcions per gestionar els errors, el que significa que qualsevol cosa que fem amb PDO podr\u00edem encapsular en un bloc try/catch per gestionar si produeix algun error.</p> <p>Podem for\u00e7ar PDO perqu\u00e8 treballi en qualsevol de les tres maneres seg\u00fcents:</p> <ul> <li><code>PDO::ERRMODE_SILENT</code>. \u00c9s el mode per defecte. Aqu\u00ed haurem de   revisar els errors usant <code>errorCode()</code> i <code>errorInfo()</code>.</li> <li><code>PDO::ERRMODE_WARNING</code>. Genera errors de revisi\u00f3 de resultats   PHP per\u00f2 permetria l'execuci\u00f3 normal de l'aplicaci\u00f3.</li> <li><code>PDO::ERRMODE_EXCEPTION</code>. Ser\u00e0 la forma m\u00e9s utilitzada en PDO.   Dispara una excepci\u00f3 permetent-nos gestionar l'error de forma   amigable.</li> </ul> <pre><code>//Activaci\u00f3 de la manera de treball de PDO\n$pdo-&gt; setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_SILENT);\n$pdo-&gt; setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_WARNING);\n// Es recomana activar aquesta opci\u00f3 per gestionar els errors amb PDOException\n$pdo-&gt; setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n</code></pre> <p>Excepcions</p> <p>Es recomana activar aquesta opci\u00f3 per gestionar els errors amb <code>PDOException</code>, d'altra forma no </p> <p>apareixer\u00e0 cap missatge i ser\u00e0 complicat detectar-los.</p> <pre><code>$pdo-&gt; setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n</code></pre> <p>Exemple d'\u00fas:</p> <pre><code># Connectem a la base de dades\n$host = 'www.local';\n$dbname = 'cxbasex';\n$user = 'cxbasex';\n$pass = 'xxxxxx';\ntry {\n$pdo=new PDO (\"mysql:host=$host;dbname=$dbname;charset=utf8\", $user, $pass);\n$pdo-&gt;setAttribute (PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n}\ncatch (PDOException $e) {\necho \"S'ha produ\u00eft un error en intentar connectar al servidor MySQL:\". $e-&gt;getMessage();\n}\ntry {\n# Un altre Exemple d'error! DELECT en lloc de SELECT!\n$pdo-&gt;exec( 'DELECT name FROM people');\n}\ncatch (PDOException $e) {\necho \"S'ha produ\u00eft un error en l'execuci\u00f3 de la consulta:\". $e-&gt;getMessage();\n/* En aquest cas hem mostrat el missatge d'error i, a m\u00e9s emmagatzemem\n       en un fitxer els errors generats. */\nfile_put_contents ('PDOErrors.txt', $e-&gt;getMessage(), FILE_APPEND);\n}\n</code></pre>"},{"location":"05-data-access/0501-data-access/#transaccions","title":"Transaccions","text":"<p>Una transacci\u00f3 en un Sistema de Gesti\u00f3 de Bases de Dades \u00e9s un conjunt d'ordres que s'executen formant una unitat de treball, \u00e9s a dir, en forma indivisible o at\u00f2mica.</p> <p>Un SGBD es diu transaccional si \u00e9s capa\u00e7 de mantenir la integritat de dades, fent que aquestes transaccions no puguin finalitzar en un estat intermedi. Quan per alguna causa el sistema ha de cancel\u00b7lar la transacci\u00f3, comen\u00e7a a desfer les ordres executades fins a deixar la base de dades en el seu estat inicial (anomenat punt d'integritat), com si l'ordre de la transacci\u00f3 mai s'hagu\u00e9s realitzat. Una transacci\u00f3 ha de comptar amb ACID (un acr\u00f2nim angl\u00e8s) que vol dir: Atomicidad, consist\u00e8ncia, a\u00efllament i durabilitat.</p>"},{"location":"05-data-access/0501-data-access/#transaccions-en-pdo","title":"Transaccions en PDO","text":"<p>Com ja hem comentat, no tots els SGBD s\u00f3n transaccionals. Per\u00f2 tamb\u00e9 es possible que tot i que el SGBD ho siga el motor d'emmagatzemat no ho suporte. Per la qual cosa si necessites utilitzar transaccions haur\u00e0s d'assegurar-se que estiguen suportades pel motor d'emmagatzematge que gestiona les teves taules en MySQL. Per exemple el motor MyISAM no les suporta.</p> <p>Per defecte PDO treballa en mode autocommit. Confirma autom\u00e0ticament cada sent\u00e8ncia que executa el servidor.</p> <p>Per treballar amb transaccions, PDO incorpora tres m\u00e8todes:</p> <ul> <li><code>beginTransaction</code>. Deshabilita la manera autocommit i comen\u00e7a una     nova transacci\u00f3, que finalitzar\u00e0 quan executis un dels dos m\u00e8todes     seg\u00fcents.</li> <li><code>commit</code>. Confirma la transacci\u00f3 actual.</li> <li><code>rollback</code>. Reverteix els canvis duts a terme a la transacci\u00f3     actual.</li> </ul> <p>Un cop executat un <code>commit</code> o <code>rollback</code>, es tornar\u00e0 al mode de confirmaci\u00f3 autom\u00e0tica.</p> <p>Si utilitzem un motor que no suporta transaccions PDO no mostrar\u00e0 cap error, simplement ser\u00e0 incapa\u00e7 de realitzar un <code>rollback</code> si fora necessari.</p>"},{"location":"05-data-access/0501-data-access/#esquema-basic-dus-de-transaccions-amb-pdo","title":"Esquema b\u00e0sic d'\u00fas de transaccions amb PDO","text":"<pre><code>    #Esquema b\u00e0sic d'\u00fas de PDO\ntry{ \n$pdo-&gt;beginTransaction(); \n$pdo-&gt;exec('DELETE ...'); \n$pdo-&gt;exec('UPDATE ...'); \n$pdo-&gt;commit(); \n}\ncatch(PDOException $exception) { \n$pdo-&gt;rollback(); \n}\n</code></pre>"},{"location":"05-data-access/0501-data-access/#exemple","title":"Exemple","text":"<pre><code>    $mbd = new PDO('odbc:SAMPLE', 'db2inst1', 'ibmdb2',\narray(PDO::ATTR_PERSISTENT =&gt; true));\necho \"Conectado\\n\";\n} catch (Exception $e) {\ndie(\"No se pudo conectar: \" . $e-&gt;getMessage());\n}\ntry {\n$mbd-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n$mbd-&gt;beginTransaction();\n$mbd-&gt;exec(\"insert into staff (id, first, last) values (23, 'Joe', 'Bloggs')\");\n$mbd-&gt;exec(\"insert into salarychange (id, amount, changedate) \n          values (23, 50000, NOW())\");\n$mbd-&gt;commit();\n} catch (Exception $e) {\n$mbd-&gt;rollBack();\necho \"Fallo: \" . $e-&gt;getMessage();\n}\n</code></pre>"},{"location":"05-data-access/0599-tasks/","title":"Activitats","text":"<ol> <li> <p><code>501-querying.php</code>. Importa mitjan\u00e7ant PHPMyAdmin la base de dades movies.sql. Crea la connexi\u00f3 i fes les seg\u00fcents consultes usant consultes preparades amb marcadors coneguts:</p> <ol> <li>Mostra en un array associatiu (pots usar <code>var_dump</code>) el id i el t\u00edtol de totes les pel\u00b7l\u00edcules.</li> <li>A partir de l'activitat anterior, modifica la sent\u00e8ncia SQL perqu\u00e8 les pel\u00b7l\u00edcules apareguen ordenades pel t\u00edtol.</li> <li>Mostra en una array associatiu el id, el t\u00edtol i el nom del g\u00e8nere de totes les pel\u00b7l\u00edcules ordenades per la data d'estrena de forma descendent (pista: caldr\u00e0 fer un <code>JOIN</code>).</li> <li>Mostra en un array associatiu les dades de la pel\u00b7l\u00edcula amb <code>id</code> igual a <code>459489</code>. Cal que uses <code>bindValue</code> per vincular el par\u00e0metre a la consulta preparada.</li> <li>Mostra en un array associatiu el id i el t\u00edtol de les pel\u00b7l\u00edcules que tinguen en el t\u00edtol el text <code>Te</code>, han d'eixir-ne 2. Cal vincular els par\u00e0metres mitjan\u00e7ant un par\u00e0metre del m\u00e8tode <code>execute</code>.</li> <li>Mostra en un array associatiu el id i el t\u00edtol de les pel\u00b7l\u00edcules que anteriors a 2020.</li> <li>Mostra en una taula els generes.</li> </ol> </li> <li> <p><code>502-manipulating.php</code>. Realitza, sobre la base de dades <code>Movies</code> les seg\u00fcents accions:</p> <ol> <li>Insereix una nova pel\u00b7l\u00edcula indicant el nou identificador assignat. Mostra-la en un array associatiu (<code>var_dump</code>).</li> <li>Modifica el t\u00edtol de la pel\u00b7l\u00edcula que acabes d'inserir afegint-li \"(c\u00f2pia)\" al t\u00edtol actual. Associa els par\u00e0metres en l'<code>execute</code>.</li> <li>Insereix un nou g\u00e8nere i assigna-li'l a la pel\u00b7l\u00edcula. Usa en aquest cas <code>bindParam</code> per associar els par\u00e0metres.</li> <li>Elimina el nou g\u00e8nere. \u00c9s possible? Per qu\u00e8?</li> <li>Elimina la pel\u00b7l\u00edcula i, despr\u00e9s, el g\u00e8nere.</li> </ol> </li> <li> <p><code>503-contact-info</code>. Crea una base dades anomenada <code>contact-info</code> on        emmagatzemarem les dades recollides en el formulari de l'activitat 440. Tingues en compte que el g\u00e8nere, les hores de contacte i les aficions seran taules independents (utilitza les claus dels arrays com a clau prim\u00e0ria) que estaran relacionades amb la taula principal.</p> <p>C\u00f2pia l'activitat 440 i modifica-la perqu\u00e8 les dades s'emmagatzemem en la base de dades.</p> </li> </ol>"},{"location":"05-data-access/0599-tasks/#projecte-truiter","title":"Projecte <code>Truiter</code>","text":"<p>Implementa la seg\u00fcent base de dades <code>truiter</code>:</p>      erDiagram          User ||--o{ Tweet : publishes         User {             int id             varchar[50] name             varchar[15] username             varchar[255] password             datetime created_at             boolean verified         }         Tweet ||--o{ Media : contains         Tweet {             int id             varchar[280] text             datetime created_at             int like_count                     }         Media {             int id             varchar[255] alt_text             int height             int width             varchar[255] url         }   <ol> <li> <p>Adapta el projecte Truiter perqu\u00e8 extraga la informaci\u00f3 de la base de dades:</p> <ol> <li><code>index.php</code> mostrar\u00e0 tots els tuits per ordenats per data de forma descendent.</li> <li><code>login.php</code> comprovar\u00e0 les credencials dels usuaris en la base de dades. </li> <li><code>tweet-new.php</code> permetr\u00e0 als usuaris autenticats crear un nou tuit.</li> </ol> </li> <li> <p>Afig al projecte una p\u00e0gina de registre (<code>register.php</code> i <code>register-process.php</code>) que sol\u00b7licite       a l'usuari les dades requerides per registrar-se tenint en compte el seg\u00fcent:</p> <ol> <li>La data de creaci\u00f3 ser\u00e0 per defecte el moment actual.</li> <li>Per defecte el compte no ser\u00e0 verificat.</li> <li>El nom d'usuari haur\u00e0 de ser \u00fanic.</li> <li>La contrasenya haur\u00e0 de sol\u00b7licitar-se dues vegades, per comprovar que l'usuari les ha escrit b\u00e9, i s'haur\u00e0 d'emmagatzemar despr\u00e9s d'aplicar-li una funci\u00f3 resum (hash). Veure l'apartat No con\u00e8ixer les contrasenyes de la unitat 4.</li> </ol> </li> <li> <p>Afig al projecte una p\u00e0gina de perfil d'usuari (<code>profile.php</code>) des de la que l'usuari podr\u00e0 editar el seu nom d'usuari i el seu nom i eliminar, amb confirmaci\u00f3, el seu compte.</p> </li> <li> <p>Afig al projecte un buscador de tweets pel seu contingut.</p> </li> </ol>"},{"location":"06-composer/06-01-intro/","title":"Composer. Introducci\u00f3 al testing","text":"Objectius <ul> <li>Gestionar depend\u00e8ncies amb llibreries de tercers.</li> <li>Utilitzar el autoloading de Composer en el nostre projecte.</li> <li>Utilitzar llibreries de tercers: Monolog, WebMozart.</li> <li>Realitzar test unitaris</li> </ul> Continguts <ol> <li>Instalaci\u00f3n de Composer   - Packagist - Semantic Versioning</li> <li>Uso de librer\u00edas de terceros - Monolog</li> <li>Namespaces</li> <li>Introducci\u00f3 al testing. Refactoring</li> </ol> Criteris d'avaluaci\u00f3 <ul> <li>RA09. A) S'han reconegut els avantatges que proporciona la reutilitzaci\u00f3 de codi i l'aprofitament d'informaci\u00f3 ja existent.</li> <li>RA09. B) S'han identificat llibreries de codi i tecnologies aplicables en la creaci\u00f3 d'aplicacions web h\u00edbrides.</li> <li>RA09. E) S'han utilitzat llibreries de codi per a incorporar funcionalitats espec\u00edfiques a una aplicaci\u00f3 web</li> </ul>"},{"location":"06-composer/06-01-intro/#introduccio","title":"Introducci\u00f3","text":"<p>Fins ara hem apr\u00e9s a usar les diferents funcionalitats de PHP d'una forma molt b\u00e0sica.  Ara anem a introduir una s\u00e8rie de ferraments i conceptes que ens ajudaran a realitzar  les aplicacions d'una forma m\u00e9s \u00e0gil i segura.</p> <p>Refacci\u00f3</p> <p>En enginyeria del programari, el terme refacci\u00f3, en angl\u00e8s refactoring, s'empra per a descriure el fet de modificar codi font sense canviar-ne el comportament observat des de l'exterior. La refacci\u00f3 sovint \u00e9s una part del cicle de vida del programari: els desenvolupadors alternen entre la producci\u00f3 de noves funcionalitats i la refacci\u00f3 de codi ja existent per tal de millorar-ne la consist\u00e8ncia interna i la claredat. Les proves de regressi\u00f3 asseguren que la refacci\u00f3 no ha canviat el comportament del codi observat des d'altres m\u00f2duls del programa. </p>"},{"location":"06-composer/06-01-intro/#patrons-de-disseny","title":"Patrons de disseny","text":"<p>Segons Viquip\u00e8dia: </p> <p>En enginyeria de programari, un patr\u00f3 de disseny \u00e9s una soluci\u00f3 general a un problema com\u00fa i recurrent en el disseny de programari. Un patr\u00f3 de disseny no \u00e9s un disseny acabat que es pot transformar directament en codi; \u00e9s una descripci\u00f3 o plantilla per resoldre un problema que es pot utilitzar en moltes situacions diferents. </p> <p>\u00c9s a dir, s\u00f3n solucions als problemes habituals que podem trobar-nos en desenvolupar el nostre programari.</p> <p>Hi ha molts patrons de disseny com podeu trobar en les seg\u00fcents p\u00e0gines:</p> <ul> <li>Refactoring guru</li> <li>Design Patters PHP</li> </ul> <p>En el nostre cas en vorem alguns senzills, f\u00e0cils d'aplicar i que despr\u00e9s trobarem en els framewoks m\u00e9s habituals.</p>"},{"location":"06-composer/06-01-intro/#registry","title":"Registry","text":"<p>El prop\u00f2sit del patr\u00f3 <code>Registry</code> \u00e9s implementar un emmagatzematge central per als objectes que s'utilitzen sovint a tota l'aplicaci\u00f3, normalment s'implementa utilitzant una classe abstracta amb nom\u00e9s m\u00e8todes est\u00e0tics (o utilitzant el patr\u00f3 <code>Singleton</code>). </p> <p>Estat global</p> <p>El patr\u00f3 <code>Registry</code>  introdueix un estat global, \u00e9s a dir, crea un objecte d'\u00e0mbit global, la qual cosa s'hauri d'evitar tot moment!</p> <p>No obstant aix\u00f2, en projectes xicotets i senzills pot utilitzar-se perfectament. M\u00e9s avant del patr\u00f3 <code>Dependency Injection</code> que seria el recomanat en aquestos casos.</p> <p>En Registry teniu un exemple d'implementaci\u00f3.</p>"},{"location":"06-composer/06-01-intro/#adapterwrapper","title":"Adapter/Wrapper","text":"<p>El prop\u00f2sit \u00e9s traduir una interf\u00edcie d'una classe a una interf\u00edcie compatible. Un adaptador permet que les classes treballen juntes ja que normalment no podrien ja que tenen interf\u00edcies incompatibles proporcionant la seua interf\u00edcie als clients mentre s'utilitza la interf\u00edcie original.</p> <p>Teniu m\u00e9s informaci\u00f3 en Adapter/Wrapper i en Adapter in PHP</p>"},{"location":"06-composer/06-01-intro/#datamapper","title":"DataMapper","text":"<p>Un DataMapper, \u00e9s una capa d'acc\u00e9s a dades que realitza la transfer\u00e8ncia bidireccional de dades entre un magatzem de dades persistent (sovint una base de dades relacional) i una representaci\u00f3 de dades en mem\u00f2ria (la capa de domini). L'objectiu del patr\u00f3 \u00e9s mantenir la representaci\u00f3 a la mem\u00f2ria i el magatzem de dades persistent independents entre s\u00ed i del propi mapejador de dades. La capa est\u00e0 formada per un o m\u00e9s mapeadors (o objectes d'acc\u00e9s a dades), que realitzen la transfer\u00e8ncia de dades. Les implementacions de mapper varien. Els mapeadors gen\u00e8rics gestionaran molts tipus d'entitats de domini diferents, els mapejadors dedicats en gestionaran un o alguns.</p> <p>M\u00e9s detalls en https://designpatternsphp.readthedocs.io/en/latest/Structural/DataMapper/README.html</p>"},{"location":"06-composer/06-01-intro/#repository","title":"Repository","text":"<p>Media entre el domini i les capes de mapatge de dades mitjan\u00e7ant una interf\u00edcie semblant a una col\u00b7lecci\u00f3 per accedir als objectes del domini. El repositori encapsula el conjunt d'objectes que persisteixen en un magatzem de dades i les operacions que s'hi duen a terme, proporcionant una visi\u00f3 m\u00e9s orientada a objectes de la capa de persist\u00e8ncia. El repositori tamb\u00e9 admet l'objectiu d'aconseguir una separaci\u00f3 neta i una depend\u00e8ncia unidireccional entre el domini i les capes de mapatge de dades. </p> <p>M\u00e9s detalls en https://designpatternsphp.readthedocs.io/en/latest/More/Repository/README.html.</p>"},{"location":"06-composer/06-02-composer/","title":"Composer","text":""},{"location":"06-composer/06-02-composer/#introduccio","title":"Introducci\u00f3","text":"<p>Abans de tot, cal definir qu\u00e8 \u00e9s un compoment o paquet en PHP. Un component PHP \u00e9s un conjunt de codi reutilitzable que t\u2019ajuda a solucionar un problema espec\u00edfic de la teua aplicaci\u00f3. Aquests components solen estar formats per diverses classes. Composer \u00e9s una eina que permet gestionar components en PHP. </p> <p>Composer permet declarar els components dels que dep\u00e8n el nostre projecte i gestionar-los (instal\u00b7lar/actualitzar). A difer\u00e8ncia dels gestors de paquets com Apt o Yum, Composer gestiona els paquets per projecte, instal\u00b7lant-los en el directori (<code>vendor</code>). </p> <p>Per defecte, no instal\u00b7la res de forma global. Per tant, \u00e9s un gestor de depend\u00e8ncies. Aquesta idea no \u00e9s nova i Composer s\u2019inspira fortament en npm de Nodejs i el bundler de ruby.</p> <p>Composer ens soluciona dos problemes:</p> <ul> <li>Gestionar les depend\u00e8ncies amb llibreries de tercers. Nom\u00e9s cal que declarem les depend\u00e8ncies i Composer s'encarregar\u00e0 de descarregar i instal\u00b7lar tot el que siga necessari</li> <li>Autoloading del nostre codi. Ja no haurem de fer m\u00e9s <code>require</code>, Composer ho far\u00e0 per nosaltres</li> </ul> <p>Composer mant\u00e9 la seua configuraci\u00f3 en dos fitxers: <code>composer.json</code> i <code>composer.lock</code>.</p> <ul> <li><code>composer.json</code> cont\u00e9 la informaci\u00f3 de configuraci\u00f3 principal del projecte. Aqu\u00ed \u00e9s on especifiques les dependencies del teu projecte, les versions que vols utilitzar, i altres configuracions com ara autoloaders, scripts post-instal\u00b7laci\u00f3, etc. \u00c9s un fitxer en format JSON i se sol mantenir al repositori del teu projecte perqu\u00e8 altres desenvolupadors puguin veure i reproduir la configuraci\u00f3 del teu entorn.</li> <li><code>composer.lock</code> \u00e9s generat autom\u00e0ticament per Composer despr\u00e9s de la instal\u00b7laci\u00f3 de depend\u00e8ncies o quan es fa una actualitzaci\u00f3. Cont\u00e9 una llista exacta de les versions de cada paquet que s'han instal\u00b7lat, aix\u00ed com les seves depend\u00e8ncies. Aix\u00f2 assegura que tots els desenvolupadors o servidors que treballin amb el mateix codi utilitzin les mateixes versions de les dependencies, evitant possibles problemes de compatibilitat.</li> </ul> <p>Com hem dit, en usar Composer el primer que necessitem \u00e9s disposar de l\u2019arxiu <code>composer.json</code>. En aquest fitxer existeixen un seguit d'estructures d'informaci\u00f3:</p> <pre><code>{\n\"require\": {\n\"monolog/monolog\": \"2.0.*\"\n}\n}\n</code></pre>"},{"location":"06-composer/06-02-composer/#gestio-de-dependecies","title":"Gesti\u00f3 de depend\u00e8cies","text":""},{"location":"06-composer/06-02-composer/#installacio-de-paquets","title":"Instal\u00b7laci\u00f3 de paquets","text":"<p>Amb el par\u00e0metre <code>require</code>  podem instal\u00b7lar els paquets que requerix la aplicaci\u00f3, despr\u00e9s els mapeja (en l\u2019exemple, <code>monolog/monolog</code>) a la versi\u00f3 requerida (en aquest cas: <code>2.0.*</code>).</p> <p>Si necessit\u00e0rem usar en un projecte el component <code>monolog</code> executariem en la carpeta del projecte:</p> <pre><code>composer require monolog/monolog\n</code></pre> <p>Com haur\u00e0s observat el nom del paquet est\u00e0 format per dues parts:</p> <ul> <li>La primera indica qui \u00e9s el seu \"vendor\" o creador.</li> <li>La segona indica el nom del projecte.</li> </ul> <p><pre><code>composer require vendor/package\n</code></pre> Sovint les dues parts s\u00f3n id\u00e8ntiques.</p>"},{"location":"06-composer/06-02-composer/#versionat-semantic-semver","title":"Versionat sem\u00e0ntic (SemVer)","text":"<p>Per poder controlar la versi\u00f3 dels paquets s'utilitza el versionat sem\u00e0ntic, un est\u00e0ndar de facto per a la numeraci\u00f3 de versions. Aquest sistema consta de tres parts principals en el n\u00famero de versi\u00f3: Major, Minor i Patch, que s'expressen com \"MAJOR.MINOR.PATCH\".</p> <ul> <li><code>Major</code>: S'incrementa quan es fan canvis incompatibles amb versions anteriors o quan es realitzen canvis importants que afecten la funcionalitat del programa.</li> <li><code>Minor</code>: S'incrementa quan s'afegeixen funcionalitats noves de manera compatible amb versions anteriors. \u00c9s a dir, no afecta la compatibilitat enrere.</li> <li><code>Patch</code>: S'incrementa quan es realitzen correccions d'errors (bug fixes) compatibles amb les versions anteriors.</li> </ul> <p>Podeu trobar m\u00e9s informaci\u00f3 en el seg\u00fcent document: http://semver.org/lang/es/</p>"},{"location":"06-composer/06-02-composer/#limitacio-de-la-versio-dels-paquets","title":"Limitaci\u00f3 de la versi\u00f3 dels paquets","text":"<p>En alguns casos \u00e9s necessari limitar les versions dels paquetes per mantindre compatibilitat. Hi ha diverses formes d'expressar dites limitacions:</p> <ul> <li>Restricci\u00f3 de la versi\u00f3 exacta<ul> <li>Exemple: 1.0.2  <code>#MAJOR.MINOR.PATCH</code>.</li> </ul> </li> <li>Rang de versions<ul> <li>Exemples:</li> <li><code>&gt;=1.0</code></li> <li><code>&gt;=1.0 &lt;2.0</code></li> <li><code>&gt;=1.0 &lt;1.1</code> || <code>&gt;=1.2</code></li> </ul> </li> <li>Rang de versions comodins (<code>.*</code>)<ul> <li>Es pot especificar un patr\u00f3 en un  <code>*</code> comod\u00ed. <code>1.0.*</code> \u00e9s l'equivalent de <code>&gt;=1.0 &lt;1.1</code>.</li> <li>Exemple: <code>1.0.*</code></li> </ul> </li> <li>Rang amb tilde (<code>~</code>)<ul> <li>L'operador <code>~</code>  s'explica millor en un exemple:      <code>~1.2</code> \u00e9s equivalent a <code>&gt;=1.2 &lt;2.0.0</code>, mentre que <code>~1.2.3</code> \u00e9s equivalent a <code>&gt;=1.2.3 &lt;1.3.0</code>. </li> <li>Exemple: <code>~1.2</code></li> </ul> </li> <li>Rang de versi\u00f3 amb cimcurflex (<code>^</code>)<ul> <li>Per exemple <code>^1.2.3</code> \u00e9s equivalent a <code>&gt;=1.2.3 &lt;2.0.0</code> ja que ninguna de les releases fins a la <code>2.0</code> deuria trencar compatibilitat en versions anteriors. </li> <li>Exemple: <code>^1.2.3</code></li> </ul> </li> </ul>"},{"location":"06-composer/06-02-composer/#installacio-dependencies","title":"Instal\u00b7laci\u00f3 depend\u00e8ncies","text":"<p>L\u2019ordre <code>install</code> comprova primer si existeix el fitxer <code>composer.lock</code>, i si existeix, desc\u00e0rrega exactament les versions que s'indiquen en aquest.</p> <p>Si treballem en equip, tot l'equip tindr\u00e0 les mateixes versions.</p> <p>Executem la seg\u00fcent ordre:</p> <p><pre><code>composer install\n</code></pre> Es generar\u00e0 el directori <code>vendor/</code> amb les llibreries de les quals dep\u00e8n el projecte.</p> <p>directori <code>vendor</code></p> <p>Hem d'afegir el directori <code>vendor/</code> a l'arxiu <code>.gitignore</code>, perqu\u00e8 crea gran quantitat de fitxers que despr\u00e9s s'han de descarregar amb <code>composer install</code>.</p> <p>L\u2019ordre tamb\u00e9 crea un fitxer <code>composer.lock</code></p>"},{"location":"06-composer/06-02-composer/#actualitzacio-de-paquets","title":"Actualitzaci\u00f3 de paquets","text":"<p>Si tenim l'arxiu <code>composer.lock</code> sempre s'instal\u00b7laran les mateixes versions dels paquets.</p> <p>Per actualitzar a noves versions, fem servir l\u2019ordre <code>composer update</code>. Aquesta ordre fa que Composer busque les versions m\u00e9s recents dels paquets sempre que seguisquen complint les restriccions de les versions indicades al fitxer <code>composer.json</code>. Tamb\u00e9 actualitza l'arxiu <code>composer.lock</code>.</p> <p>Si nom\u00e9s volem instal\u00b7lar o actualitzar una depend\u00e8ncia, podem indicar el seu nom despr\u00e9s de l\u2019ordre:</p> <pre><code>composer update monolog/monolog\n</code></pre> <p>No actualitzar en producci\u00f3</p> <p>Quan desplegues una aplicaci\u00f3 basada en Composer a producci\u00f3, usa sempre <code>composer install</code>. No haurieu d'usar mai <code>composer update</code> ja que podria ser que s'actualitzara algun paquet a una versi\u00f3 no provada. </p>"},{"location":"06-composer/06-02-composer/#addicio-de-dependencies","title":"Addici\u00f3 de depend\u00e8ncies","text":"<p>L\u2019ordre que afegeix noves depend\u00e8ncies en el arxiu <code>composer.json</code>:</p> <pre><code>composer require\n</code></pre> <p>Ens preguntar\u00e0 quines llibreries volem afegir.</p> <p>Despr\u00e9s d'afegir aquestes noves depend\u00e8ncies, s\u2019instal\u00b7len o actualitzen les depend\u00e8ncies que siguen necess\u00e0ries. Podem passar les noves depend\u00e8ncies com argument de l'ordre.</p> <pre><code>composer require monolog/monolog:\n</code></pre>"},{"location":"06-composer/06-02-composer/#packagist","title":"Packagist","text":"<p>Packagist \u00e9s el repositori central de paquets que pot gestionar Composer.</p> <p>Lloc Web: http://packagist.org</p>"},{"location":"06-composer/06-02-composer/#carrega-automatica-de-classes","title":"C\u00e0rrega autom\u00e0tica de classes","text":"<p>Normalment els paquets proporcionen informaci\u00f3 sobre la c\u00e0rrega autom\u00e0tica de les seves classes. Aix\u00ed, Composer genera un fitxer <code>vendor/autoload.php</code>.</p> <p>Incloent aquest fitxer en el projecte, podem utilitzar qualsevol classe instal\u00b7lada a trav\u00e9s de Composer sense haver de incloure-la  expl\u00edcitament:</p> <pre><code>require 'vendor/autoload.php';\n</code></pre> <p><code>vendor/autoload.php</code></p> <p><code>autoload.php</code> \u00e9s el punt d'entrada de l'aplicaci\u00f3 a totes les funcionalitats que ens oferix Composer.</p>"},{"location":"06-composer/06-02-composer/#carrega-de-classes-personalitzades","title":"C\u00e0rrega de classes personalitzades","text":"<p>Podem emprar l\u2019autoloader de Composer per a carregar les nostres classes. Si el nostre namespace \u00e9s <code>App</code> i els arxius estan en <code>src</code> afegirem:</p> <pre><code>    \"autoload\": {\n\"psr-4\": { \"App\\\\\": \"src/\" }\n}\n</code></pre> <p>Despr\u00e9s executarem <code>composer dump-autoload</code> perqu\u00e8 \u00e9s regenere <code>vendor/autoload.php</code>.</p> <p>PSR-4</p> <p>PSR-4 (PHP Standard Recommendation) \u00e9s una de les recomanacions del PHP-FIG per a implementar el sistema de c\u00e0rrega autom\u00e0tica de classes. PHP-FIG (Framework Interoperability Group). La idea del grup \u00e9s que els representants del projecte parlen sobre els punts en com\u00fa entre els seus projectes i troben maneres de treballar junts.</p>"},{"location":"06-composer/06-03-third-part/","title":"\u00das del paquet Monolog","text":"<p>Per utilitzar la llibreria Monolog podem usar les seves classes i Composer s'encarregar\u00e0 de carregar-les:</p> <p><pre><code>$log = new Monolog\\Logger('name');\n$log-&gt; pushHandler (\nnew Monolog\\Handler\\StreamHandler('app.log', Monolog\\Logger::INFO)\n);\n$log\u2192info('Foo');\n</code></pre> M\u00e9s informaci\u00f3: https://packagist.org/packages/monolog/monolog https://github.com/Seldaek/monolog/blob/HEAD/doc/01-usage.md</p>"},{"location":"06-composer/06-04-namespaces/","title":"Espais de noms (namespaces)","text":"<p>En el m\u00f3n de PHP, els espais de noms estan dissenyats per a solucionar dos problemes amb qu\u00e8 es troben els autors de paquets i d'aplicacions en crear elements de codi reutilitzable, com ara classes o funcions:</p> <ul> <li>El conflicte de noms entre el codi que es crea i les classes/funcions/constants internes de PHP o les classes/funcions/constants de tercers.</li> <li>La capacitat de sobrenomenar (o abreujar) <code>Noms_Extra_Llargs</code> dissenyada per alleugerir el primer problema, millorant la llegibilitat del codi font.</li> </ul> <p>Els espais de noms de PHP proporcionen una manera per agrupar classes, interf\u00edcies, funcions i constants relacionades. </p> <p>En la seua definici\u00f3 m\u00e9s acceptada, els espais de noms s\u00f3n una manera d'encapsular elements. Exemple: directoris en els sistemes de fitxers.</p> <p>El fitxer <code>foo.txt</code> pot existir en els directoris <code>/home/Greg</code> i <code>/home/altre</code>, per\u00f2 no poden coexistir dues c\u00f2pies de <code>foo.txt</code> en el mateix directori.</p> <p>A m\u00e9s, per accedir al fitxer <code>foo.txt</code> fora de directori <code>/home/Greg</code>, s'ha d'avantposar el nom de directori al nom del fitxer, emprant el separador de directoris per aix\u00ed obtenir <code>/home/greg/foo.txt</code>. </p> <p>Aquest mateix principi s'est\u00e9n als espais de noms en el m\u00f3n de la programaci\u00f3.</p>"},{"location":"06-composer/06-04-namespaces/#us-de-namespaces","title":"\u00das de namespaces","text":"<p>Per a definir un espai de noms utilitzem la paraula reservada <code>namespace</code>.</p> <pre><code>namespace MyNamespace;\nclass MevaClasse {\npublic function saludar() {\necho \"Hola des de MyNamespace!\\n\";\n}\n}\n</code></pre> <p>Per fer-ne \u00fas d'un element de codi dintre d'un espai de noms cal usar la paraula reservada <code>use</code></p> <pre><code>// Incloure l'arxiu que cont\u00e9 la definici\u00f3 del namespace\nrequire_once 'MyNamespace.php';\n// Utilitzar la classe del namespace\nuse MyNamespace\\MevaClasse;\n// Crear una inst\u00e0ncia de la classe i cridar el m\u00e8tode\n$instancia = new MevaClasse();\n$instancia-&gt;saludar();\n</code></pre> <p>El codi anterior inclou la classe en qu\u00e8 hem definit l'espai de noms i despr\u00e9s la crida usant el <code>use</code>.</p>"},{"location":"06-composer/06-04-namespaces/#namespaces-i-autoloading","title":"Namespaces i autoloading","text":"<p>Com hem vist en l'apartat sobre Composer l'autoc\u00e0rrega de classes ens facilita l'\u00fas de classes pr\u00f2pies i de tercers, per\u00f2 a aix\u00f2 \u00e9s molt important entendre com funcionen els espais de noms en PHP. Els frameworks solen utilitzar la recomanaci\u00f3 PSR-4.</p> <p>Per a entendre la relaci\u00f3 entre els espais de noms i la c\u00e0rrega autom\u00e0tica de classes res millor que anar a la font original: PSR-4 Autoloader</p>"},{"location":"06-composer/06-05-tdd-intro/","title":"Introducci\u00f3 al testing","text":""},{"location":"06-composer/06-05-tdd-intro/#tests-no-tinc-temps-per-a-aixo","title":"Tests?! \u00a1No tinc temps per a aix\u00f2!","text":"<p>Moltes vegades quan s'intenta ensenyar a fer proves o s'explica com aix\u00f2 millorar\u00e0 la qualitat del programari la resposta que obtenim \u00e9s \"No tinc temps per aix\u00f2\", \"L'aplicaci\u00f3 ja est\u00e0 en producci\u00f3, perqu\u00e8 provar-la ara?\" i altres respostes similars que s\u00f3n una mostra de que el testing no es compr\u00e8n correctament.</p> <p>No obstant aix\u00f2, en aquests mateixos ambients on se'ns diu que no hi ha temps per al testing, podem veure com els desenvolupadors fan servir gran part de la seva jornada laboral en fer proves i altres activitats que podrien ser minimitzades amb un bon conjunt de tests:</p> <ul> <li>Proves manuals.</li> <li>Debugging</li> <li>Compilacions</li> </ul> <p>I aquestes s\u00f3n les m\u00e9s \u00f2bvies. Per exemple, les proves manuals s\u00f3n molt lentes, tedioses i solen provar pocs casos. En el cas del debugging arriba a ser tedi\u00f3s i moltes vegades el problema que busquem \u00e9s dif\u00edcil de localitzar i, tanmateix, si hi hagu\u00e9s un Test Autom\u00e0tic haur\u00edem pogut detectar-ho de manera m\u00e9s r\u00e0pida i perdre aix\u00ed menys temps.</p>"},{"location":"06-composer/06-05-tdd-intro/#que-son-els-test","title":"\u00bfQu\u00e8 s\u00f3n els Test?","text":"<p>Una definici\u00f3 que destaca per la seua simplicitat i concrecci\u00f3 \u00e9s la seg\u00fcent:</p> <p>Un test \u00e9s una especificaci\u00f3 de l'aplicaci\u00f3</p> <p>Qu\u00e8 vol dir aix\u00f2? Doncs que un test \u00e9s simplement un requisit que, a part de definir-nos una necessitat fa una segona funci\u00f3  que consisteix a verificar que aquest es compleix.</p> <p>Anem a veure alguns exemples.</p> <p>Partim de la idea d'una funci\u00f3 que sume dos n\u00fameros:</p> <pre><code>function sum(int $a, int $b){\nreturn $a+$b;\n}\n</code></pre> <p>Quins serien els requisits d'aquesta funci\u00f3? Un primer requisit podria ser que, efectivament, la funci\u00f3n ha de sumar dos n\u00fameros qualsevols.</p> <p>Representant-ho com un test seria:</p> <p><pre><code>function shouldAddAPairOfNumbers(){\nreturn 5 === sum(2,3)\n}\n</code></pre> Un altre requisit podria ser que sume n\u00fameros negatius. Per assegurar que aquest requisit s'est\u00e0 complint, podem crear un altre test:</p> <p><pre><code>function shouldAddNegativeNumbers(){\nreturn 3 === sum(5,-2)\n}\n</code></pre> En els anteriors exemples hem vist el que b\u00e0sicament \u00e9s un test (unitari en aquest cas): una funci\u00f3 que comprova que una caracter\u00edstica o especificaci\u00f3 de l'aplicaci\u00f3 es compleix. Altres definicions m\u00e9s acad\u00e8miques s\u00f3n:</p> <p>El Testing de Software es una investigaci\u00f3 dirigida a proporcionar a les parts interessades (stakeholders) informaci\u00f3 sobre la qualitat del producte o servei que est\u00e0 provant-se.</p> <ul> <li>Kaner, Cem (November 17, 2006). Exploratory Testing. Quality Assurance Institute Worldwide Annual Software Testing Conference. Orlando, FL. Retrieved November 22, 2014.</li> </ul> <p>En el camp del testing de programari, l'automatizaci\u00f3n de test \u00e9s l'uso de programari (separat del que s'est\u00e0 provant) per a  controlar l'execuci\u00f3 de les proves i la comparaci\u00f3 dels resultats reals amb els previstos</p> <ul> <li>Kolawa, Adam; Huizinga, Dorota (2007). Automated Defect Prevention: Best Practices in Software Management. Wiley-IEEE Computer Society Press.</li> </ul>"},{"location":"06-composer/06-05-tdd-intro/#avantatges-dels-test","title":"Avantatges dels Test","text":"<ol> <li>Els test es poden executar, els requisits no. Aix\u00f2 ens permet mantindre un cert grau de qualitat en el funcionament de la nostra aplicaci\u00f3 al llarg de tot el desenvolupament.</li> <li>Es pot executar diverses vegades. Quan realitzem proves a m\u00e0 moltes vegades per f\u00e0stig o el repetitiu del proc\u00e9s acabem provant sempre el mateix o fins i tot podem trobar un error i no recordar quins par\u00e0metres usem per a reproduir-lo.</li> <li>En executar-los provem altres funcionalitats. Quan provem a m\u00e0 una caracter\u00edstica de l'aplicaci\u00f3 moltes vegades no som conscients de l'abast d'aquesta, no obstant aix\u00f2, si tenim una bona bateria de Tests \u00e9s altament probable que en executar-los estiguem provant altres \u00e0rees de l'aplicaci\u00f3 que es poden veure compromeses amb els nostres canvis.</li> <li>Eviten que molts bugs arriben a producci\u00f3. Quan s'introdueixen fallades en el programari sense tindre Tests \u00e9s com\u00fa que aquests arriben fins a l'entorn productiu i passen latents mesos fins que un usuari o proc\u00e9s, amb els par\u00e0metres adequats, provoque l'error i isca a la llum (provocant perdudes d'usuaris, benefici per a l'empresa de programari, etc). Tenint Tests podrem minimitzar notablement aquest tipus de situacions.</li> </ol> <p>Hi ha molts m\u00e9s avantatges per\u00f2 aquestes s\u00f3n algunes de les m\u00e9s notables. </p>"},{"location":"06-composer/06-05-tdd-intro/#tipus-de-proves","title":"Tipus de proves","text":"<p>Existeixen multitud de casos de Test, ac\u00ed n'introduirem uns pocs i els acompanyarem d'una xicoteta explicaci\u00f3.</p> <p>\u00c9s important aclarir que sol haver-hi un error en la denominaci\u00f3 general, desembocant en una definici\u00f3 err\u00f2nia del que \u00e9s un test funcional. En el seg\u00fcent llistat podrem veure diferents test funcionals (ja que proven funcionalitat del nostre programari).</p> <ul> <li> <p>Test Unitaris: S'encarreguen de provar una unitat de codi de forma a\u00efllada. Aquesta unitat no ha d'estar lligada a cap mena d'entrada/eixida (ja siga aquesta una base de dades, disc...). S\u00f3n les proves m\u00e9s concretes i les m\u00e9s r\u00e0pides, per aix\u00f2  tendeixen a ser els m\u00e9s nombrosos.</p> </li> <li> <p>Integraci\u00f3: Proven una unitat per\u00f2 permetent contacte amb entrada/eixida. S\u00f3n mitjanament r\u00e0pids per\u00f2 no tant com els unitaris. Tamb\u00e9 es poden considerar test d'integraci\u00f3 (o de Components/Sistema) els que proven diferents parts del programari interdependent entre s\u00ed.</p> </li> <li>Intef\u00edcie d'usuari (UI): S\u00f3n els test que fan comprovacions sobre la base de la interf\u00edcie d'usuari del nostre sistema.</li> <li>End to End (e2e): Test que comproven la nostra aplicaci\u00f3 de punta a punta. \u00c9s a dir, des de la interacci\u00f3 de l'Usuari o l'Actor que desencadene l'execuci\u00f3 del programari fins que se li retorna algun tipus de resposta. Al costat dels de UI s\u00f3n els m\u00e9s costosos (dels automatitzats) ja que solen implicar al\u00e7ar serveis, bases de dades i fins i tot navegadors per a simular la petici\u00f3.</li> <li>Manuals: S\u00f3n tamb\u00e9 funcionals ja que proven el mateix que els de UI o EndToEnd per\u00f2 en lloc de ser executats per un codi que interactua amb una API o un navegador s\u00f3n executats per un hum\u00e0 amb la conseq\u00fcent lentitud extra. Solen ser limitats pel cost monetari i de temps, limitant-se a uns certs tipus com a Test d'Exploraci\u00f3 o Monkey Testing.</li> </ul>"},{"location":"06-composer/06-05-tdd-intro/#i-quins-son-els-test-no-funcionals","title":"I quins s\u00f3n els test no funcionals?","text":"<p>S\u00f3n test que no proven funcionalitats de l'aplicaci\u00f3 si no que ens asseguren un altre tipus de comportaments.</p> <p>A continuaci\u00f3 llistem alguns: - Test d'Estr\u00e9s: Comproven el rendiment de la nostra aplicaci\u00f3 sota estr\u00e9s. - Test de C\u00e0rrega: Comproven on est\u00e0 el l\u00edmit de c\u00e0rrega de la nostra aplicaci\u00f3. - Test d'Escalabilitat: Comproven que l'aplicaci\u00f3 escala correctament. \u00c9s \u00fatil en aplicacions Distribu\u00efdes, *Serverless...</p> <p>Hi ha molts m\u00e9s tipus de Test, tant funcionals com no funcionals per\u00f2 hem nomenat els m\u00e9s coneguts i comuns.</p>"},{"location":"06-composer/06-05-tdd-intro/#test-manuals-en-el-flux-de-desenvolupament","title":"Test Manuals en el flux de desenvolupament","text":"<p>Donat un formulari com el de la seg\u00fcent imatge i assumint que no tenim test automatitzats i sols fem test manuals:</p> <p> </p> <p>Quants noms serem capa\u00e7os de provar per a assegurar el correcte funcionament? Podrem cerciorar-nos que provem suficients DNIs? I dates? El m\u00e9s probable \u00e9s que provem tres o quatre diferents casos durant el desenvolupament i altres punts al final d'aquest per a comprovar que la funcionalitat s'executa aparentment sense problemes.</p>"},{"location":"06-composer/06-05-tdd-intro/#problemes-dels-test-manuals","title":"Problemes dels test manuals","text":"<ul> <li>Necessitem que l'aplicaci\u00f3 siga funcional. Fins que l'aplicaci\u00f3 no siga executable d'alguna manera  no podrem realitzar cap prova.</li> <li>Necessitem configurar depend\u00e8ncies, dades inicials, infraestructura (base de dades, configuracions...)</li> <li>Provem una quantitat de casos bastant limitat. Amb Test automatitzats podr\u00edem aconseguir que es proven un rang de valors aleatoris o que el valor que s'use en la prova canvie amb cada execuci\u00f3, etc.</li> <li>\u00c9s dif\u00edcil repetir tests i encara m\u00e9s realitzar proves anteriors. Amb els test manuals es dificulta el poder passar casos de prova d'una altra persona, implicant documents, processos, etc amb la lentitud que aix\u00f2 provoca i la inviabilitat d'introduir-ho en el proc\u00e9s de desenvolupament.</li> </ul>"},{"location":"06-composer/06-05-tdd-intro/#caracteristiques-dels-tests-unitaris","title":"Caracter\u00edstiques dels tests unitaris","text":"<p>Els test unitaris proven una unitat de codi o System Under Test(SUT). En l'exemple que v\u00e8iem a l'inici prov\u00e0vem una funci\u00f3 que sumava dos n\u00fameros. Aquesta unitat es prova de forma a\u00efllada. Si la unitat sota test tinguera algun tipus de depend\u00e8ncia haur\u00edem de falsejar-la. El mateix si necessitara accedir a alguna mena de base de dades o similar. D'aquesta aconseguirem independ\u00e8ncia per a la prova de la unitat que ens resulta d'inter\u00e9s en el test.</p> <p>Utilitzen dobles de test (Test Doubles). Per a realitzar el que comentem en l'anterior pas podem fer \u00fas de dobles de tests. Aquest concepte represensta els objectes, classes o funcions que falsegen a la seua contrapart real per a enganyar la unitat sota proves i obtindre el comportament que ens interessa assegurar. En la seg\u00fcent imatge veiem com creem objectes que falsegen cert comportament per a provar el que ens interessa, en aquest cas que si creem un \"Conductor\" a partir de  un objecte \"User\" menor d'edat, obtenim una Excepci\u00f3.</p> <p><pre><code>public function testOnlyAdultCanDrive(){\n$this-&gt;expectException (MinorsAreNotAllowedToDrive::class);\n$userStub=$this-&gt;createMock(User::class);    \n$userStub-&gt;method('getAge')\n-&gt;willReturn(16);\n$carStub = $this-&gt;createMock(Car::class);\nnew Drive($userMock,$carStub);\n}\n</code></pre> S\u00f3n r\u00e0pids. Una bateria de milers de Test Unitaris pot executar-se en q\u00fcesti\u00f3 de minuts. Aix\u00f2 permet que siga f\u00e0cil d'incorporar al proc\u00e9s de desenvolupament i s'executen amb cada canvi que realitzem.</p> <p>S\u00f3n repetibles. En estar programats podem repetir un mateix test les vegades que siga necessari. Comproven que res s'haja trencat \u00c9s a dir, comproven que els canvis que introdu\u00efm no afecten altres parts de l'aplicaci\u00f3.</p> <p>Feedback Loop m\u00e9s curt. Per la seua velocitat i la possibilitat d'executar-los cada poc temps acurten el temps que passa des que s'introdueix un bug en el programari fins que aquest \u00e9s detectat i solucionat.</p> <p>Pipelines de CI, Hooks... Donada la seua velocitat d'execuci\u00f3 aquest tipus de test \u00e9s perfecte per a ser introdu\u00eft en una Pipeline d'Integraci\u00f3 Cont\u00ednua o un Hook de Git que, per exemple, controle que abans de fer un push dels canvis al servidor passen tots els test.</p> <p>Faciliten el codi desacoblat. Com veurem resulta molt m\u00e9s f\u00e0cil provar codi desacoblat pel que si ens acostumem a fer test Unitaris el nostre codi acabar\u00e0 sent m\u00e9s desacoblat.</p> <p>*refactoritzar sense por de trencar alguna cosa. Tindre una bona bateria de Tests ens permet fer refactoring sense tindre p\u00e0nic al fet que es trenquen altres parts de l'aplicaci\u00f3. Si es donara el cas un test fallaria i immediatament podr\u00edem veure com \u00e9s el problema i actuar en conseq\u00fc\u00e8ncia.</p>"},{"location":"06-composer/06-05-tdd-intro/#piramide-de-test-i-gelat-de-test","title":"Pir\u00e0mide de Test i Gelat de Test","text":"<p>En la seg\u00fcent imatge veiem una contraposici\u00f3 de dues distribucions de Test.</p> <p> </p> <p>En l'esquerra podem veure el que es coneix com a \"Gelat de Testing\", en el qual abunden els test manuals i els pocs que hi ha automatitzats s\u00f3n els test End to End o de UI. El Testing ice-cream \u00e9s un antipatr\u00f3 de Testing (en la majoria de casos) en el qual s\u00f3n nombrosos els test que m\u00e9s costa realitzar i brillen per la seua abs\u00e8ncia els Test m\u00e9s lleugers i r\u00e0pids (integraci\u00f3 i, sobretot, unitaris).</p> <p>A la dreta tenim la Pir\u00e0mide de Test. Ac\u00ed podem veure com els test m\u00e9s abundants s\u00f3n Unitaris i d'Integraci\u00f3, els m\u00e9s r\u00e0pids, mentre que el n\u00famero de test lents com els d'Acceptaci\u00f3 \u00e9s molt menor i els test manuals estan reservats a test Exploratoris.</p>"},{"location":"06-composer/06-05-tdd-intro/#introduccio-a-tdd","title":"Introducci\u00f3 a TDD","text":"<p>Desenvolupament guiat per proves de programari, en angl\u00e8s: Test-driven development (TDD), \u00e9s una pr\u00e0ctica d'enginyeria de programari que involucra unes altres dues pr\u00e0ctiques: Escriure les proves primer (Test First Development) i Refacci\u00f3 (Refactoring). Per escriure les proves generalment s'utilitzen les proves unit\u00e0ries (unit test en angl\u00e8s). En primer lloc, s'escriu una prova i es verifica que les proves fallen. A continuaci\u00f3, s'implementa el codi que fa que la prova passi satisfact\u00f2riament i seguidament es refacciona el codi escrit. El prop\u00f2sit del desenvolupament guiat per proves \u00e9s aconseguir un codi net que funcioni. La idea \u00e9s que els requisits siguin tradu\u00efts a proves, d'aquesta manera, quan les proves passin es garantir\u00e0 que el programari compleix amb els requisits que s'han establert. </p> <p>Com que no \u00e9s l'objectiu d'aquest curs aprofundir trobarem m\u00e9s informaci\u00f3 en els seg\u00fcents recursos:</p> <ul> <li>Desenvolupament guiat per proves. (2021, 19 de novembre). Viquip\u00e8dia, l'Enciclop\u00e8dia Lliure. Data de consulta: 21:25, novembre 19, 2021 de //ca.wikipedia.org/w/index.php?title=Desenvolupament_guiat_per_proves&amp;oldid=28627832.</li> <li>La kata del DNI para aprendre TDD. (2018, 12 de desembre). Fran Iglesias.  https://franiglesias.github.io/iniciacion-tdd/.</li> <li>Curso Testing. Andros Fenollosa https://programadorwebvalencia.com/cursos/testing/introducci%C3%B3n/</li> </ul>"},{"location":"06-composer/06-98-notes-on-model-layer/","title":"Notes on model layer implementation","text":"<p>https://stackoverflow.com/questions/48805723/repository-and-data-mapper-coupling</p> <ul> <li>The db operations should be performed through adapters (MySqliAdapter, PdoAdapter, etc). So, the db connections are injected into adapters, not into the mappers. And certainly not in the repositories, because then the abstraction purpose of the repositories would be pointless.</li> <li>A mapper receives adapter(s) as dependencies and can receive other mappers too.</li> <li>The mappers are passed as dependencies to the repositories.</li> <li>A repository name is semantically related to the domain layer names, not really to the ones of the service layer. E.g: \"InputService\": ok. \"InputRepository\": wrong. \"CountryRepository\": correct.</li> <li>A service can receive more repositories. Or mappers, if you don't want to apply the extra layer of repositories.   In the code, the only tightly coupled structure is the Country object (entity or domain object) - dynamically created for each fetched table row. Even this could be avoided through the use of a domain objects factory, but I, personally, don't see it really necessary.</li> </ul> <p>P.S: Sorry for not providing a more documented code.</p> <p>Service</p> <p><pre><code>class InputService {\nprivate $countryRepository;\nprivate $productRepository;\npublic function __construct(CountryRepositoryInterface $countryRepository, ProductRepositoryInterface $productRepository) {\n$this-&gt;countryRepository = $countryRepository;\n$this-&gt;productRepository = $productRepository;\n}\npublic function getInitialData() {\n$products = $this-&gt;productRepository-&gt;findAll();\n$country = $this-&gt;countryRepository-&gt;findByName('England');\n//...\nreturn // resulted data\n}\n}\n</code></pre> Repository</p> <p><pre><code>class CountryRepository implements CountryRepositoryInterface {\nprivate $countryMapper;\npublic function __construct(CountryMapperInterface $countryMapper) {\n$this-&gt;countryMapper = $countryMapper;\n}\npublic function findByPrefix($prefix) {\nreturn $this-&gt;countryMapper-&gt;find(['prefix' =&gt; $prefix]);\n}\npublic function findByName($name) {\nreturn $this-&gt;countryMapper-&gt;find(['name' =&gt; $name]);\n}\npublic function findAll() {\nreturn $this-&gt;countryMapper-&gt;find();\n}\npublic function store(CountryInterface $country) {\nreturn $this-&gt;countryMapper-&gt;save($country);\n}\npublic function remove(CountryInterface $country) {\nreturn $this-&gt;countryMapper-&gt;delete($country);\n}\n}\n</code></pre> Data mapper</p> <p><pre><code>class CountryMapper implements CountryMapperInterface {\nprivate $adapter;\nprivate $countryCollection;\npublic function __construct(AdapterInterface $adapter, CountryCollectionInterface $countryCollection) {\n$this-&gt;adapter = $adapter;\n$this-&gt;countryCollection = $countryCollection;\n}\npublic function find(array $filter = [], $one = FALSE) {\n// If $one is TRUE then add limit to sql statement, or so...\n$rows = $this-&gt;adapter-&gt;find($sql, $bindings);\n// If $one is TRUE return a domain object, else a domain objects list.\nif ($one) {\nreturn $this-&gt;createCountry($row[0]);\n}\nreturn $this-&gt;createCountryCollection($rows);\n}\npublic function save(CountryInterface $country) {\nif (NULL === $country-&gt;id) {\n// Build the INSERT statement and the bindings array...\n$this-&gt;adapter-&gt;insert($sql, $bindings);\n$lastInsertId = $this-&gt;adapter-&gt;getLastInsertId();\nreturn $this-&gt;find(['id' =&gt; $lastInsertId], true);\n}\n// Build the UPDATE statement and the bindings array...\n$this-&gt;adapter-&gt;update($sql, $bindings);\nreturn $this-&gt;find(['id' =&gt; $country-&gt;id], true);\n}\npublic function delete(CountryInterface $country) {\n$sql = 'DELETE FROM countries WHERE id=:id';\n$bindings = [':id' =&gt; $country-&gt;id];\n$rowCount = $this-&gt;adapter-&gt;delete($sql, $bindings);\nreturn $rowCount &gt; 0;\n}\n// Create a Country (domain object) from row.\npublic function createCountry(array $row = []) {\n$country = new Country();\n/*\n         * Iterate through the row items.\n         * Assign a property to Country object for each item's name/value.\n         */\nreturn $country;\n}\n// Create a Country[] list from rows list.\npublic function createCountryCollection(array $rows) {\n/*\n         * Iterate through rows.\n         * Create a Country object for each row, with column names/values as properties.\n         * Push Country object object to collection.\n         * Return collection's content.\n         */\nreturn $this-&gt;countryCollection-&gt;all();\n}\n}\n</code></pre> Db adapter</p> <p><pre><code>class PdoAdapter implements AdapterInterface {\nprivate $connection;\npublic function __construct(PDO $connection) {\n$this-&gt;connection = $connection;\n}\npublic function find(string $sql, array $bindings = [], int $fetchMode = PDO::FETCH_ASSOC, $fetchArgument = NULL, array $fetchConstructorArguments = []) {\n$statement = $this-&gt;connection-&gt;prepare($sql);\n$statement-&gt;execute($bindings);\nreturn $statement-&gt;fetchAll($fetchMode, $fetchArgument, $fetchConstructorArguments);\n}\n//...\n}\n</code></pre> Domain objects collection</p> <p><pre><code>class CountryCollection implements CountryCollectionInterface {\nprivate $countries = [];\npublic function push(CountryInterface $country) {\n$this-&gt;countries[] = $country;\nreturn $this;\n}\npublic function all() {\nreturn $this-&gt;countries;\n}\npublic function getIterator() {\nreturn new ArrayIterator($this-&gt;countries);\n}\n//...\n}\n</code></pre> Domain object</p> <pre><code>class Country implements CountryInterface {\n// Business logic: properties and methods...\n}\n</code></pre> <p>DataMapper is a layer to isolate an application from a concrete database. It transforms an object into a record of a database and a record into an object. DataMapper gives us the ability to work with Database and be unaware of what RDBMS we use. Example:</p> <p><pre><code>interface DataMapperInterface\n{\n/**\n     * Find objects by a criteria\n     *\n     * @param array $criteria Search params\n     * @return Quote[] Found entities\n     */\npublic function find(array $criteria);\n/**\n     * Insert an object into a database\n     *\n     * @param Quote $object Object that will be inserted\n     */\npublic function insert(Quote $object);\n/**\n     * Update an object date in a database\n     *\n     * @param Quote $object Object that will be updated\n     */\npublic function update(Quote $object);\n/**\n     * Remove an object from a database\n     *\n     * @param Quote $object Object that will be removed\n     */\npublic function delete(Quote $object);\n}\n</code></pre> Repository is a layer for encapsulation of logic of a query building. It gives us the ability to work with a collection of objects and be unaware to work with Database anything.</p> <pre><code>class Repository\n{\n/**\n    * @var DataMapperInterface Mapper to transform objects\n    */ \nprotected $mapper;\n/**\n    * Constructor\n    *\n    * @param DataMapperInterface $mapper Mapper to transform objects\n    */\npublic function __construct(DataMapperInterface $mapper)\n{\n$this-&gt;mapper = $mapper;\n}\n/**\n    * Find all objects\n    *\n    * @return Quote[] Found entities\n    */\npublic function findAll()\n{\nreturn $this-&gt;mapper-&gt;find([]);\n}\n/**\n    * Find an object by an identifier\n    *\n    * @return Quote[] Found entities\n    */\npublic function findById(integer $id)\n{\n$criteria = ['id' =&gt; $id];\nreturn $this-&gt;mapper-&gt;find($criteria);\n}\n/**\n    * Find objects by an author name\n    *\n    * @return Quote[] Found entities\n    */\npublic function findByAuthor($name)\n{\n$criteria = ['author' =&gt; $name];\nreturn $this-&gt;mapper-&gt;find($criteria);\n}\n/**\n    * Save an object into the repository\n    */\npublic function save(Quote $object)\n{\nif (empty($object-&gt;id)) {\n$this-&gt;mapper-&gt;insert($object);\n} else {\n$this-&gt;mapper-&gt;update($object);\n}\na    }\n/**\n    * Remove an object from the repository\n    */\npublic function remove(Quote $object)\n{\n$this-&gt;mapper-&gt;delete($object);\n}\n}\n</code></pre> <p>This is the very simple instance and all is more difficult in a real application: queries are bigger, repository can cooperate with many other patterns (Query Object to query building, Unit of Work to track changes, Identity Map to avoid repeatedly-load of objects, etc.)</p>"},{"location":"06-composer/06-99-activities/","title":"Activitats","text":""},{"location":"06-composer/06-99-activities/#projecte-truiter","title":"Projecte Truiter","text":""},{"location":"06-composer/06-99-activities/#introduccio","title":"Introducci\u00f3","text":"<ol> <li> <p>La classe <code>FlashMessage</code>. </p> <p>Fins ara, hem gestionat la comunicaci\u00f3 entre p\u00e0gines mitjan\u00e7ant sessions.   La gesti\u00f3 la f\u00e8iem escrivint i llegint en les variables de sessi\u00f3. L'objectiu de la seg\u00fcent classe \u00e9s proporcionar-nos un mecanisme que ens facilite l'enviament de missatges entre p\u00e0gines. Una vegada implementada utilitza-la en la creaci\u00f3 de pel\u00b7l\u00edcules.</p> </li> </ol> <pre><code># src/App/Helpers/FlashMessage.php\n/**\n * Class FlashMessage\n * Aquesta classe llig i escriu directament en una variable de sessi\u00f3 \n * que ser\u00e0 un array, la clau ser\u00e0 $sessionKey  de forma que evitem \n * possible col\u00b7lisions.\n*/\nclass FlashMessage\n{\n/**\n     * string\n     */\nconst SESSION_KEY = \"flash-message\";\n/**\n     * obtenim el valor de l'array associat a la clau.\n     * despr\u00e9s de llegir-lo l'esborrem\n     * si no existeix tornem el valor indicat per defecte.\n     * @param string $key\n     * @param mixed $defaultValue\n     * @return mixed|string\n     */\npublic static function get(string $key, $defaultValue = '');\n/**\n     * @param string $key\n     * @param $value\n     */\npublic static function set(string $key, $value);\n/**\n     * @param string $key\n     */\nprivate static function unset(string $key);      \n}\n</code></pre> <ol> <li> <p>Tenint en compte tot el proc\u00e9s de gesti\u00f3 de pujada de fixers, les restriccions que es poden aplicar, i les dades que ens interessen una vegada el proc\u00e9s s'ha efectuat exitosament, crea una classe <code>UploadedFileHandler.php</code> que encapsule totes les funcionalitats requerides. Completa la jerarquia d'excepcions.</p> </li> <li> <p>Implementa la classe <code>App\\Helpers\\Validator</code> que tindr\u00e0 m\u00e8todes est\u00e0tics per fer validacions, de moment aquestos:</p> <ol> <li><code>lengthBetween(string $value,int $min,int $max, string $message = '')</code></li> <li><code>regex(string $value, string $pattern, string $message = '')</code></li> </ol> </li> </ol> <p>En cas d'error caldr\u00e0 llan\u00e7ar una excepci\u00f3 <code>InvalidArgumentException</code>. </p> <ol> <li> <p>Implementa la classe <code>App\\Services\\DB</code> publicada en A simple PDO class. Utilitza-la all\u00e0 on calga operar en la base de dades.</p> </li> <li> <p>Implementa el patr\u00f3 <code>Registry</code> en una classe amb el mateix nom i afegeix una instancia de <code>DB</code> associada a la clau \"DB\". L'objecte <code>DB</code> l'haur\u00e0s de crear i inserir-lo en el <code>Registry</code> en un nou fitxer anomenat <code>bootstrap.php</code>.</p> <p>Aquest fitxer ser\u00e0 requerit en totes els fitxers que tinguen acc\u00e9s a la base de dades.</p> </li> <li> <p>En un fitxer de configuraci\u00f3 (JSON, YAML, INI o XML, segons t'haja assignat el professor) emmagatzema el DSN (Data Source Name) d'acc\u00e9s a la base de dades. Despr\u00e9s, crea una classe <code>Config</code> que llija el fitxer i extraga el DSN. Utilitza <code>Config</code> en <code>bootstrap.php</code> en lloc d'usar un literal en instanciar la classe PDO.</p> <p>Afig tamb\u00e9 al fitxer de configuraci\u00f3 la ruta relativa on es guarden les fotos pujades.</p> </li> <li> <p>Refacciona tota la aplicaci\u00f3 perqu\u00e8 s'utilitzen les noves classes introduides, aix\u00ed com els repositoris i els m\u00e8todes que necessites. </p> </li> </ol>"},{"location":"06-composer/06-99-activities/#composer","title":"Composer","text":"<ol> <li> <p>En la seg\u00fcent activitat treballarem en Composer:</p> <ol> <li>Instal\u00b7la <code>composer</code> de forma global. </li> <li>Instal\u00b7la <code>monolog</code>.</li> <li>Configura <code>bootstrap.php</code> perqu\u00e8 use l\u2019autoloader de <code>Composer</code>.</li> <li>Configura <code>composer.json</code> perqu\u00e8 carregue les nostres classes.</li> <li>Configura <code>monolog</code> en <code>index.php</code> de forma que registre la activitat en <code>directori del projecte/var/logs/app.log</code> i en Firefox amb l'extensi\u00f3 FirePHP.</li> </ol> </li> <li> <p><code>webmozart/assert</code> \u00e9s un paquet que cont\u00e9 una llibreria de funcions de validaci\u00f3 (assercions/afirmacions).</p> <ol> <li>Instal\u00b7la el paquet.</li> <li>Configura'l si cal.</li> <li>Usa els seus m\u00e8todes per a validar els formularis.    </li> </ol> </li> </ol>"},{"location":"07-mvc/07-00-intro/","title":"Cap a un framework MVC","text":"<p>En aquesta unitat implementarem els components b\u00e0sics del nostre framework. Explicarem la seua funci\u00f3 i com  implementar-lo de forma b\u00e0sica.</p> <p>Tamb\u00e9 es veuran alguns conceptes molt utilitzats en els frameworks professionals.</p>"},{"location":"07-mvc/07-00-intro/#model-vista-controlador","title":"Model Vista Controlador","text":"<p>Model\u2013view\u2013controller (MVC) \u00e9s un patr\u00f3 de disseny de programari que s'utilitza habitualment per desenvolupar interf\u00edcies d'usuari que divideixen la l\u00f2gica del programa relacionada en tres elements interconnectats. Aix\u00f2 es fa per separar les representacions internes de la informaci\u00f3 de la forma en qu\u00e8 es presenta i accepta la informaci\u00f3 a l'usuari.</p> <p>Aquest patr\u00f3 es va fer popular per desenvolupar aplicacions web. Els llenguatges de programaci\u00f3 populars tenen frameworks MVC que faciliten el desenvolupament. Per exemple:</p> <ul> <li>En Python, Django.</li> <li>En Ruby, Ruby on Rails.</li> <li>En Javascript, Angular i React.js.</li> <li>En PHP, Symfony i Laravel.</li> </ul> <p> </p> Esquema MVC <p> </p> Esquema MVC ampliat <ul> <li>Model: El component central del patr\u00f3. \u00c9s l'estructura de dades din\u00e0miques de l'aplicaci\u00f3, independent de la interf\u00edcie d'usuari. Gestiona directament les dades, la l\u00f2gica i les regles de l'aplicaci\u00f3.</li> <li>Vista: Qualsevol representaci\u00f3 d'informaci\u00f3 com un gr\u00e0fic, un diagrama o una taula. S\u00f3n possibles diverses visualitzacions de la mateixa informaci\u00f3, com ara un gr\u00e0fic de barres per a la gesti\u00f3 i una vista tabular per als comptables.</li> <li>Controlador: Accepta l'entrada i la converteix en ordres per al model o la vista per a finalment tornar la resposta al client.</li> </ul> <p>A m\u00e9s de dividir l'aplicaci\u00f3 en aquests components defineix les interaccions entre ells. - El model s'encarrega de gestionar les dades de l'aplicaci\u00f3. Rep l'entrada de l'usuari mitjan\u00e7ant el controlador. - La vista fa la presentaci\u00f3 del model en un format determinat. - El controlador respon a l'entrada de l'usuari i realitza interaccions amb els objectes del model de dades. El controlador rep l'entrada, opcionalment la valida i despr\u00e9s passa l'entrada al model.</p> <p>Igual que amb altres patrons de programari, MVC expressa el \"nucli de la soluci\u00f3\" a un problema alhora que permet adaptar-lo a cada sistema. Els dissenys MVC particulars poden variar significativament de la descripci\u00f3 tradicional.</p>"},{"location":"07-mvc/07-01-classe-request-response/","title":"Request i Response","text":"<p>Altres classes que solen trobar-se en les frameworks MVC s\u00f3n les classes <code>Request</code> i <code>Response</code>. El seu objectiu \u00e9s encapsular les funcionalitats relacionades amb la sol\u00b7licitud de l'usuari i la resposta.</p> <p>Nosaltres farem \u00fas de les classes que ens proporciona el component <code>symfony/http-foundation</code>:</p> <pre><code>composer require symfony/http-foundation\n</code></pre> <p>Ja tenim disponibles les classes:</p> <pre><code>use Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n$request = Request::createFromGlobals();\n$name = $request-&gt;query-&gt;get('name', 'World');\n$response = new Response(sprintf('Hello %s', htmlspecialchars($name, ENT_QUOTES, 'UTF-8')));\n$response-&gt;send();\n</code></pre> <p>El m\u00e8tode <code>createFromGlobals()</code> crea un objecte <code>Request</code> basat en les variables supergoblals de PHP.</p> <p>El m\u00e8tode <code>send()</code> envia l'objecte <code>Response</code> al client.</p> <p>Amb la classe <code>Request</code>, teniu tota la informaci\u00f3 de l\u2019aplicaci\u00f3 al vostre abast gr\u00e0cies a una API agradable i senzilla:</p> <pre><code>// the URI being requested (e.g. /about) minus any query parameters\n$request-&gt;getPathInfo();\n// retrieves GET and POST variables respectively\n$request-&gt;query-&gt;get('foo');\n$request-&gt;request-&gt;get('bar', 'default value if bar does not exist');\n// retrieves SERVER variables\n$request-&gt;server-&gt;get('HTTP_HOST');\n// retrieves an instance of UploadedFile identified by foo\n$request-&gt;files-&gt;get('foo');\n// retrieves a COOKIE value\n$request-&gt;cookies-&gt;get('PHPSESSID');\n// retrieves a HTTP request header, with normalized, lowercase keys\n$request-&gt;headers-&gt;get('host');\n$request-&gt;headers-&gt;get('content-type');\n$request-&gt;getMethod();    // GET, POST, PUT, DELETE, HEAD\n$request-&gt;getLanguages(); // an array of languages the client accepts\n</code></pre> <p>Amb la classe <code>Response</code> podeu ajustar la resposta:</p> <pre><code>$response = new Response();\n$response-&gt;setContent('Hello world!');\n$response-&gt;setStatusCode(200);\n$response-&gt;headers-&gt;set('Content-Type', 'text/html');\n// configure the HTTP cache headers\n$response-&gt;setMaxAge(10);\n</code></pre>"},{"location":"07-mvc/07-01-classe-request-response/#aplicacio-practica","title":"Aplicaci\u00f3 pr\u00e0ctica","text":"<p>Aix\u00ed quedaria la nova versi\u00f3 de les p\u00e0gines relacionades amb la creaci\u00f3 de  nous tuits.</p> <p>En <code>tweet-new.php</code> far\u00edem els seg\u00fcents canvis:</p> <pre><code>## tweet-new.php\n$request = Request::createFromGlobals();\n// creem la resposta\n$response = new Response();\n// activem el buffering, l'eixida s'emmagatzema en mem\u00f2ria (buffer).\nob_start();\nrequire 'views/tweet-new.view.php';\n$content = ob_get_clean();\n// la variable $content contindr\u00e0 tot l'HTML generat per la vista.\n$response-&gt;setContent($content);\n$response-&gt;setStatusCode(200);\n$response-&gt;headers-&gt;set('Content-Type', 'text/html');\n// el m\u00e8tode prepare assegura que la resposta compleix l'especificaci\u00f3 HTTP.\n$response-&gt;prepare($request);\n$response-&gt;send();\n</code></pre> <p>Cal destacar:</p> <ul> <li>Les funcions <code>ob_start()</code> i <code>ob_get_clean()</code>. El primer activa el buffering, \u00e9s a dir, canvia l'eixida      est\u00e0ndard a mem\u00f2ria (buffer) i el segon retorna les dades del buffer, l'esborra i desactiva      el buffering. </li> <li>El m\u00e8tode <code>Response::prepare</code> s'assegura que la resposta acompleix l'especificaci\u00f3 HTTP.</li> </ul> <p>Els canvis en <code>tweet-new-process.php</code> serien aquests:</p> <pre><code>...\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\n// comprovant si l'usuari ha iniciat sessi\u00f3\n$user = $_SESSION[\"user\"] ?? null;\nif (empty($user)) {\n$response = new RedirectResponse('login.php');\n$response-&gt;send();\n}\n$request = Request::createFromGlobals();\n...\n$newFilename = \"\";\n$text = $request-&gt;request-&gt;get('text', '');\n$text = filter_var($text, FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n...\nif (!empty($errors)) {\nFlashMessage::set('errors', $errors);\nFlashMessage::set('data', $data);\n$response = new RedirectResponse(\"tweet-new.php\");\n$response-&gt;send();\n}\ntry {\n$tweet = new Tweet($data[\"text\"], $user);\n$tweet-&gt;setCreatedAt(new DateTime());\n$tweet-&gt;setLikeCount(0);\n$tweetRepository-&gt;save($tweet);\nif (!empty($newFilename)) {\ntry {\nlist($width, $height) = getimagesize(UPLOAD_PATH . \"/\" . $newFilename);\n$photo = new Photo($newFilename, $width, $height, $newFilename);\n$photo-&gt;setUrl($newFilename);\n$photo-&gt;setTweet($tweet);\n$tweet-&gt;addAttachment($photo);\n$photoRepository-&gt;save($photo);\n} catch (Exception $e) {\n$errors[] = $e-&gt;getMessage();\n}\n}\n} catch (PDOException $e) {\n$errors[] = $e-&gt;getMessage();\n}\nif (!empty($errors)) {\nFlashMessage::set(\"errors\", $errors);\n$response = new RedirectResponse(\"tweet-new.php\");\n$response-&gt;send();\n}\n$_SESSION[\"data\"] = $data;\n$response = new RedirectResponse(\"index.php\");\n$response-&gt;send();\n</code></pre> <p>Resumint:</p> <ul> <li>Usarem la classe <code>RedirectResponse</code> per fer les redireccions.</li> <li>Emprarem <code>request-&gt;request-&gt;get('text', '')</code>, per a obtenir el que s'envia pel m\u00e8tode POST. El segon par\u00e0metre indica     el valor que es tornar\u00e0 en cas que no existisca dita variable.</li> </ul>"},{"location":"07-mvc/07-01-classe-request-response/#encapsulant-les-vistes","title":"Encapsulant les vistes","text":"<p>Un altre aspecte que ens queda per convertir en classe \u00e9s la gesti\u00f3 de les vistes.  En lloc d'usar una inclusi\u00f3 farem \u00fas de la seg\u00fcent classe que, a m\u00e9s d'encapsular  la funcionalitat tamb\u00e9 incorpora l'opci\u00f3 d'usar plantilles:</p> <pre><code>namespace App\\Core;\nclass View\n{\nstatic public function render(string $view, string $layout = 'default', \narray $data = []): string {\nextract($data);\nob_start();\nrequire __DIR__ . \"/../../views/{$view}.view.php\";\n$content = ob_get_clean();\nob_start();\nrequire __DIR__ . \"/../../views/layouts/{$layout}.layout.php\";\n// Retorna el contingut del buffer i desactiva el buffering\n$content = ob_get_clean();\nreturn $content;\n}\n}\n</code></pre> <p>La constant m\u00e0gica <code>__DIR__</code></p> <p>En PHP, generalment es considera una bona pr\u00e0ctica utilitzar la constant m\u00e0gica <code>__DIR__</code> en lloc d'una ruta relativa quan s'inclouen o requereixen fitxers. Aix\u00f2 es deu  al fet que <code>__DIR__</code> sempre retorna la ruta absoluta al directori on es troba el  fitxer on s'utilitza, mentre que un cam\u00ed relatiu es pot veure afectat per la  ubicaci\u00f3 de l'script que l'est\u00e0 executant. </p> <p>Es pot observar l'\u00fas de dues inclusions, la primera obt\u00e9 la informaci\u00f3 de la  vista que \u00e9s passada a la plantilla mitjan\u00e7ant la variable <code>$content</code>.</p> <p>La vista representa la part de la p\u00e0gina que canvia en cada p\u00e0gina, mentre que la plantilla defineix aquells elements fixos de la p\u00e0gina.</p> <p>Respecte a la funci\u00f3 <code>extract</code>, el que fa \u00e9s convertir una array associatiu en variables,  on cada clau es converteix en una variable.</p> <p>La seua contrapart \u00e9s el m\u00e8tode <code>compact</code> que converteix variables en un array associatiu on el nom de la variable \u00e9s la clau i el seu valor, el valor.</p> <p>Per exemple:</p> <pre><code>$tweets = $tweetRepository-&gt;findAll();\necho View::render('index', 'default', compact('tweets'));\n</code></pre>"},{"location":"07-mvc/07-01-classe-request-response/#integrant-la-vista-en-la-resposta","title":"Integrant la vista en la resposta","text":"<p>Per a integrar la vista en la resposta sols caldr\u00e0 fer el seg\u00fcent:</p> <pre><code>$content = View::render('index', 'default', compact('tweets'));\n$response = new Response($content);\n$response-&gt;send();\n</code></pre> <p>El contingut que retorna la vista el passem directament a la resposta pel constructor.</p>"},{"location":"07-mvc/07-01-classe-request-response/#bibliografia-i-recursos","title":"Bibliografia i recursos","text":"<ul> <li>The HttpFoundation Component (Symfony Docs). https://symfony.com/doc/current/create_framework/http_foundation.html. Consulta 6 desembre 2022.</li> </ul>"},{"location":"07-mvc/07-02-controlador-frontal/","title":"El controlador frontal","text":"<p>El controlador frontal \u00e9s un patr\u00f3 de disseny que apareix en diversos cat\u00e0legs de patrons  i est\u00e0 relacionat amb el disseny d\u2019aplicacions web. \u00c9s \"un controlador que gestiona totes les  sol\u00b7licituds d'un lloc web\", que \u00e9s una estructura \u00fatil per als desenvolupadors d'aplicacions web per  a aconseguir la flexibilitat i la reutilitzaci\u00f3 sense redund\u00e0ncia de codi.</p> <p>Normalment el controlador frontal s'implementa en la p\u00e0gina principal del lloc web: <code>index.php</code>.</p> <p>Perqu\u00e8 el controlador frontal siga funcional \u00e9s important que qualsevol petici\u00f3 al lloc web siga redirigida al controlador frontal. En eixe sentit les URL amigables tenen un paper esencial.</p>"},{"location":"07-mvc/07-02-controlador-frontal/#que-posa-ahi-url-amigables","title":"Qu\u00e8 posa ah\u00ed? URL amigables","text":"<p>Les URL sem\u00e0ntiques o URL amigables s\u00f3n aquelles URL que, dins del que cap, poden ser enteses  pels usuaris.</p> <p>Lluny de les cl\u00e0ssiques URL de les p\u00e0gines din\u00e0miques plenes de variables en el querystring i nombres dif\u00edcils de recordar, les URL sem\u00e0ntiques estan formades amb paraules relacionades amb el contingut de la p\u00e0gina i f\u00e0cils de recordar. </p> <p>Aquestes s'utilitzen en els llocs web din\u00e0mics (no est\u00e0tics). Per aix\u00f2 s'estan utilitzant molt m\u00e9s que les URL extenses.</p> <p>Suposem que vols comprar una c\u00e0mera fotos. Has trobat dues botigues amb el model que busques.</p> <p>La direcci\u00f3 de l'producte a la primera botiga \u00e9s:</p> <pre><code>http://www.example.com/B001G5ZTLS/ref=sr_1_5?s=foto&amp;ie=UTF8&amp;qid=1365525726&amp;sr=1-5\n</code></pre> <p>I la direcci\u00f3 de la segona:</p> <pre><code>http://www.example.com/camaras/reflex/canon-eos-5d-mark-2/\n</code></pre> <p>Quan desenvolupem una aplicaci\u00f3 web hem de tractar que les url tinguen c\u00e0rrega sem\u00e0ntica.</p> <p>Els seus principals avantatges s\u00f3n:</p> <ul> <li>F\u00e0cils de recordar i de deduir.</li> <li>Oculta de la tecnologia usada.</li> <li>\u00c9s conforme a l\u2019estil REST el que li dona consist\u00e8ncia.</li> <li>Crear URL netes i llegibles que s\u00f3n m\u00e9s f\u00e0cils de recordar i m\u00e9s  adequades per al Search Engine Optimization (SEO).</li> </ul> <p>Quina url tindr\u00e0 m\u00e9s c\u00e0rrega sem\u00e0tica?</p> <pre><code>http://movies.local/movies/title/ava\n</code></pre> <p>o </p> <pre><code>http://movies.local/show-movie.php?id=1488\n</code></pre>"},{"location":"07-mvc/07-02-controlador-frontal/#reescriptura-de-rutes","title":"Reescriptura de rutes","text":"<p>Com hem dit abans, per a disposar d'un lloc web en url amigables necessitem que totes  les peticions a la la nostra aplicaci\u00f3 es redirigisquen al nostre controlador frontal  (<code>index.php</code>)</p> <p>En <code>index.php</code> obtindrem el path (ruta) i cridarem al controlador adient.</p> <p>Per redirigir totes les cridades al controlador frontal haurem de configurar el m\u00f2dul de reescriptura d'Apache (mod_rewrite).</p>"},{"location":"07-mvc/07-02-controlador-frontal/#objectius-de-les-regles-de-reescriptura","title":"Objectius de les regles de reescriptura","text":"<p>Els objectius s\u00f3n diversos:</p> <ul> <li>Amagar la funcionalitat de PHP i, per tant, exposa menys les parts internes de el lloc.</li> <li>Restringir l'acc\u00e9s.</li> <li>Crear URL netes i llegibles que s\u00f3n m\u00e9s f\u00e0cils de recordar i m\u00e9s adequades per al Search Engine Optimization.</li> </ul> <p>La reescriptura d'URL \u00e9s la t\u00e8cnica utilitzada per \"traduir\" un URL amigable a una altra    que el servidor puga entendre.</p>"},{"location":"07-mvc/07-02-controlador-frontal/#directives","title":"Directives","text":"<p>Perqu\u00e8 la reescriptura d'URL funcione tenim dues opcions:</p> <ul> <li>Introduir una s\u00e8rie de directives <code>&lt;Directory&gt;</code> en els fitxers de configuraci\u00f3 d'Apache</li> <li>Introduir aquestes directives en un fitxer <code>.htaccess</code> dins del directori en el que vulgues que es realitze la reescriptura.</li> </ul> <p>Nosaltres utilitzarem la segona opci\u00f3.</p> <p>D'aquesta manera, en producci\u00f3 n'hi haur\u00e0 prou amb pujar el <code>.htaccess</code> al servidor i no  necessitarem tocar la configuraci\u00f3.</p> <p>Alert</p> <p>Perqu\u00e8 funcione <code>.htaccess</code> cal tindre activida la directiva <code>AllowOverride</code> d'Apache.</p> <p>Els passos a realitzar s\u00f3n:</p> <ul> <li>Comprovar si existeix el <code>mod_rewrite</code></li> <li>Totes les directives de <code>mod_rewrite</code> les introduirem dins d\u2019una directiva IfModule:</li> </ul> <pre><code>&lt;IfModule mod_rewrite.c&gt;\nDirectives de reescriptura\n&lt;/IfModule&gt;\n</code></pre> <p>Deshabilitar l\u2019opci\u00f3 Multiviews</p> <p>\u00c9s convenient desactivar aquesta opci\u00f3 per evitar problemes amb fitxers que tenen noms semblants, teniu  m\u00e9s informaci\u00f3 en What exactly does the multiviews option in htacces</p> <pre><code>&lt;IfModule mod_rewrite.c&gt;\noptions -MultiViews\n    Directives de reescriptura\n&lt;/ IfModule&gt;\n</code></pre>"},{"location":"07-mvc/07-02-controlador-frontal/#directiva-rewriteengine","title":"Directiva RewriteEngine","text":"<p>Per indicar a Apache que fem servir el <code>mod_rewrite</code>:</p> <pre><code>RewriteEngine on\n</code></pre> <p>Si vols desactivar-lo i que el servidor ignore la resta de la configuraci\u00f3:</p> <pre><code>RewriteEngine off\n</code></pre>"},{"location":"07-mvc/07-02-controlador-frontal/#directiva-rewritecond","title":"Directiva RewriteCond","text":"<p>La directiva <code>RewriteCond</code>  ens permet especificar una condici\u00f3. Si es compleix, s'executa la directiva <code>RewriteRule</code>  posterior.</p> <p>Es poden posar diverses condicions. Quan es compleixen totes les condicions (llevat que s'indique una altra cosa)  s'executa la directiva <code>RewriteRule</code> posterior</p> <p>La seua sintaxi \u00e9s: </p> <pre><code>RewriteCond variable_apache expresi\u00f3n_regular flags\n</code></pre> <p>Hi ha diverses variables per a condicions com es pot observar en la imatge:</p> <p>.</p> <p>Nosaltres usarem <code>REQUEST_FILENAME</code> que emmagatzema la URL sol\u00b7licitada per l'usuari.</p> <p>Despr\u00e9s de la variable indicarem una expressi\u00f3 regular per seleccionar les adreces que es corresponen amb un  determinat patr\u00f3. Existeixen tamb\u00e9 una s\u00e8rie de variables predefinides que es poden utilitzar en comptes  d'introduir una expressi\u00f3 regular:</p> <ul> <li><code>-d</code>: es tracta la URL com si fos una ruta d'el sistema d'arxius i es comprova si existeix i si \u00e9s un directori.</li> <li><code>-f</code>: igual que l'anterior, per\u00f2 comprovant si \u00e9s un fitxer.</li> <li><code>-l</code>: Igual que els anteriors, per\u00f2 comprovant si \u00e9s un enlla\u00e7 simb\u00f2lic. Etc.</li> </ul> <p>Si indiquem el s\u00edmbol <code>!</code> Davant de l'expressi\u00f3 regular o la variable, l'estem negant, \u00e9s a dir,  que s'avaluar\u00e0 la condici\u00f3 a cert quan no coincideixi amb l'expressi\u00f3 indicada.</p> <p>Flags (banderes) </p> <p>Podem indicar una llista de flags per especificar un comportament determinat:</p> <p>nocase | NC: El testeig \u00e9s insensible a maj\u00fascules i min\u00fascules(no case-sensitive). ornext | OR: S'utilitza l'operaci\u00f3 OR (en lloc de AND que \u00e9s l'opci\u00f3 per defecte) per combinar el resta de  condicions en les regles</p> <p>Per exemple:</p> <pre><code>RewriteCond %{HTTP_USER_AGENT} ^exemple [OR, NC]\nRewriteCond %{HTTP_USER_AGENT} ^google [NC]\n</code></pre> <p>La variable %{HTTP_USER_AGENT} representa el nom del navegador que utilitza l'usuari.</p> <p>L'expressi\u00f3 regular s'utilitza per determinar quin \u00e9s el valor de la variable que estem analitzant. En aquest exemple <code>^exemple</code> indica que el nom del navegador comen\u00e7a per <code>exemple</code>.</p> <p>En els flags s'indica que les dues condicions s'agrupen com operacions OR, \u00e9s a dir, el nom de el navegador  ha de comen\u00e7ar per <code>exemple</code> o per <code>google</code>.</p> <p>El valor NC indica que no ha de distingir entre maj\u00fascules i min\u00fascules.</p>"},{"location":"07-mvc/07-02-controlador-frontal/#directiva-rewriterule","title":"Directiva RewriteRule","text":"<p>Aquesta directiva ser\u00e0 l'encarregada de realitzar la redirecci\u00f3 (reescriptura) corresponent.</p> <p>Sintaxi:</p> <pre><code>RewriteRule expresi\u00f3n_regular redirecci\u00f3 flags\n</code></pre> <p>Mitjan\u00e7ant el car\u00e0cter \"-\" indicarem que no volem cap p\u00e0gina de redirecci\u00f3</p>"},{"location":"07-mvc/07-02-controlador-frontal/#el-nostre-cas","title":"El nostre cas","text":"<p>En el nostre crearem aquest fitxer <code>.htacces</code> en la carpeta on tingam el fitxer  que implemente el controlador frontal.</p> <pre><code># .htaccess\n&lt;IfModule mod_rewrite.c&gt;\nOptions -MultiViews\n    RewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^(.*)$ /index.php [QSA,L]\n\n&lt;/IfModule&gt;\n</code></pre> <p><code>RewriteCond</code> indica qualsevol sol\u00b7licitud que no siga un fitxer.</p> <p>I en <code>RewriteRule</code> l'expressi\u00f3 regular selecciona qualsevol URI. </p> <p>Tenint en compte les seg\u00fcents que:</p> <ul> <li><code>^</code> indica que l'inici </li> <li><code>$</code> indica el final.</li> <li><code>()</code> representa una agrupaci\u00f3</li> <li><code>.</code> representa qualsevol car\u00e0cter excepte espai.</li> <li><code>*</code> representa que el car\u00e0cter anterir es pot repetir.</li> </ul> <p>L'expressi\u00f3 regular <code>^(.*)$</code> indica que es seleccionar\u00e0 qualsevol cadena de text que entre l'inici i el final continga qualsevol car\u00e0cter que no siga espai, \u00e9s a dir, qualsevol URL. </p> <p>Els flags indiquen:</p> <ul> <li><code>QSA</code>, les query strings, d'existir, es combinen en la reescritura.</li> <li><code>L</code>, indica que aplicada la regla, s'ature l'execuci\u00f3. </li> </ul> <p>M\u00e9s informaci\u00f3:</p> <ul> <li>Apache mod_rewrite</li> </ul>"},{"location":"07-mvc/07-02-controlador-frontal/#proteccio-del-nostre-codi","title":"Protecci\u00f3 del nostre codi","text":"<p>Per a protegir el nostre codi d'accessos mitjan\u00e7ant el navegador moure'm el <code>DocumentRoot</code> al directori <code>public</code>. Aquest directori sols contindr\u00e0 aquelles recursos que volem que siguen accessibles directament des del navegador:</p> <ul> <li><code>index.php</code> que implementar\u00e0 el controlador frontal</li> <li>fitxers d'estils, imatges, etc.</li> </ul> <p>Per a aconseguir-ho caldr\u00e0 canviar la configuraci\u00f3 del <code>DocumentRoot</code> nostre servidor virtual perqu\u00e8 apunte al directori <code>public</code>.</p>"},{"location":"07-mvc/07-02-controlador-frontal/#aplicacio-practica","title":"Aplicaci\u00f3 pr\u00e0ctica","text":"<p>El nostre controlador frontal tindr\u00e0 un aspecte semblant a aquest:</p> <pre><code>require_once __DIR__ . '/../bootstrap.php';\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n$request = Request::createFromGlobals();\n$path = $request-&gt;getPathInfo();\n$routes = [\n\"/\" =&gt; \"index.php\",\n\"/login\" =&gt; \"login.php\",\n\"/login/process\" =&gt; \"login-process.php\",\n\"/tweet/new\" =&gt; \"tweet-new.php\",\n\"/tweet/new/process\" =&gt; \"tweet-new-process.php\",\n\"/logout\" =&gt; \"logout.php\"\n];\nif (array_key_exists($path, $routes))\nrequire __DIR__ . \"/../{$routes[$path]}\";\nelse {\n$response = new Response(\"page not found!\");\n$response-&gt;setStatusCode(Response::HTTP_NOT_FOUND);\n$response-&gt;prepare($request);\n$response-&gt;send();\n}\n</code></pre>"},{"location":"07-mvc/07-03-classe-router/","title":"Rutes i controladors","text":"<p>Una de les tasques que ha de realitzar el nostre controlador frontal \u00e9s enrutar, \u00e9s a dir, analitzar la sol\u00b7licitud de l'usuari i activar el controlador associat. Actualment el nostre \"router\" \u00e9s molt b\u00e0sic i simplement fa una inclusi\u00f3 de la p\u00e0gina que volem activar.</p> <p>Una ruta estar\u00e0 vinculada a un URL que ens donar\u00e0 acc\u00e9s a un controlador.  \u00c9s important, a l'hora de definir les rutes seguir una convenci\u00f3, nosaltres seguirem aquesta: REST resource naming. </p> <p>Aix\u00ed doncs, el router s'ha d'encarregar de:</p> <ol> <li>Gestionar la taula de rutes, on es vincula cada ruta a un controlador.</li> <li>Resoldre les sol\u00b7licituds, \u00e9s a dir, buscar el controlador vinculat a la ruta.</li> </ol>"},{"location":"07-mvc/07-03-classe-router/#el-router","title":"El router","text":"<p>Per a disposar d'un component d'enrutament farem \u00fas del component <code>Routing</code> de Symfony.</p> <pre><code>composer require symfony\\routing\n</code></pre> <p>Aquest component ens permetr\u00e0 definir les rutes de la nostra aplicaci\u00f3:</p> <pre><code>// routes.php\nuse Symfony\\Component\\Routing;\n$routes = new Routing\\RouteCollection();\n$routes-&gt;add('index', new Routing\\Route('/'));\n$routes-&gt;add('login', new Routing\\Route('/login'));\nreturn $routes;\n</code></pre> <p>El primer par\u00e0metre \u00e9s el nom que li volem donar a la ruta, aquest nom ha de ser \u00fanic. El segon par\u00e0metre \u00e9s un objecte de tipus <code>Route</code>.  </p> <p>Les dues primeres rutes simplement defineixen dos URL v\u00e0lids de la nostra aplicaci\u00f3. </p> <p><code>return</code> en fitxers</p> <p>Fent <code>return $routes;</code>  en el fitxer que ser\u00e0 incl\u00f2s aconseguim un comportament semblant al de les funcions, com veurem a continuaci\u00f3.</p> <p>El controlador frontal quedaria aix\u00ed: </p> <pre><code>// public/index.php\nrequire_once __DIR__.'/../bootstrap.php';\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing;\n$request = Request::createFromGlobals();\n$routes = include __DIR__.'/../routes.php';\n$context = new Routing\\RequestContext();\n$context-&gt;fromRequest($request);\n$matcher = new Routing\\Matcher\\UrlMatcher($routes, $context);\ntry {\nextract($matcher-&gt;match($request-&gt;getPathInfo()), EXTR_SKIP);\ninclude sprintf(__DIR__.'/../%s.php', $_route);\n} catch (Routing\\Exception\\ResourceNotFoundException $exception) {\n$response = new Response('Not Found', 404);\n} catch (Exception $exception) {\n$response = new Response('An error occurred', 500);\n}\n$response-&gt;send();\n</code></pre> <p>Ser\u00e0 el m\u00e8tode <code>match</code> de la classe <code>UrlMatcher</code> el que s'encarregar\u00e0 de  buscar el controlador associat a l'URL sol\u00b7licitat. </p> <p>En usar com a nom de la ruta el nom del fitxer sense <code>.php</code> ens permet fer la inclusi\u00f3 usant el nom.</p> <p>A m\u00e9s, incloure la funcionalitat dintre d'un bloc <code>try...catch</code> ens  permetr\u00e0 poder gestionar les excepcions globalment a l'aplicaci\u00f3.</p>"},{"location":"07-mvc/07-03-classe-router/#els-controladors","title":"Els controladors","text":"<p>Com hem vist en la introducci\u00f3, el controlador \u00e9s el component del patr\u00f3 MVC que s'encarrega de rebre la sol\u00b7licitud de l'usuari, interactuar en el model i la vista i retornar la informaci\u00f3 al client. </p> <p>Els controladors solen implementar-se en una classe (ara els tenim en fitxers), els m\u00e8todes de la qual,  s\u00f3n les diferents accions que es poden realitzar. </p> <p>Per exemple:</p> <pre><code>namespace App\\Controller;\n...\nclass DefaultController\n{\npublic function index(Request $request): Response\n{\n$logger = Registry::get(\"logger\");\n$tweetRepository = Registry::get(TweetRepository::class);\n$tweets = $tweetRepository-&gt;findAll();\n$logger-&gt;info(\"S'ha consultat la pagina\", $tweets);\n$content = View::render('index', 'default', compact('tweets'));\nreturn new Response($content);\n}\n}\n</code></pre> <p>Per poder activar els controladors caldr\u00e0 introduir els seg\u00fcents canvis en la definici\u00f3  de rutes:</p> <pre><code>// src/routes.php\nuse Symfony\\Component\\Routing;\n$routes = new Routing\\RouteCollection();\n$routes-&gt;add('index', new Routing\\Route('/',\n['_controller'=&gt;'App\\Controller\\DefaultController::index']));\n$routes-&gt;add('login', \nnew Routing\\Route(\npath: '/login',\ndefaults: ['_controller'=&gt;'App\\Controller\\DefaultController::login'], \nmethods: [\"GET\"])\n);\n$routes-&gt;add('login_process',\nnew Routing\\Route(\npath:'/login',\ndefaults: ['_controller'=&gt;'App\\Controller\\DefaultController::loginProcess'],\nmethods: [\"POST\"])\n);\nreturn $routes;\n</code></pre> <p>Per a definir els controladors associats a cada URL usarem el segon par\u00e0metre (<code>defaults</code>) del constructor de <code>Route</code>, associant la clau <code>_controller</code>  al controlador. A m\u00e9s, tamb\u00e9  podem restringir les rutes a m\u00e8todes concrets. En aquest cas l'URL <code>/login</code> activar\u00e0 un controlador  diferent si la sol\u00b7licitud \u00e9s <code>POST</code> o <code>GET</code>.</p> <p>Parametres amb nom</p> <p>Recorda que a partir de PHP 8.0 podem passar els par\u00e0metres pel seu nom.</p> <p>El nostre controlador frontal quedar\u00e0 aix\u00ed:</p> <pre><code>require_once __DIR__ . '/../bootstrap.php';\n//...\n$request = Request::createFromGlobals();\n$routes = include __DIR__.'/../routes.php';\n$context = new Routing\\RequestContext();\n$context-&gt;fromRequest($request);\n$matcher = new Routing\\Matcher\\UrlMatcher($routes, $context);\n$controllerResolver = new ControllerResolver();\n$argumentResolver = new ArgumentResolver();\ntry {\n$request-&gt;attributes-&gt;add($matcher-&gt;match($request-&gt;getPathInfo()));\n$controller = $controllerResolver-&gt;getController($request);\n$arguments = $argumentResolver-&gt;getArguments($request, $controller);\n$response = call_user_func_array($controller, $arguments);\n} catch (Routing\\Exception\\ResourceNotFoundException $exception) {\n$response = new Response('Not Found', 404);\n} catch (Exception $exception) {\n$response = new Response('An error occurred: ' . $exception-&gt;getMessage(), 500);\n}\n$response-&gt;send();\n</code></pre> <p>Les classes <code>ControllerResolver</code> i <code>ArgumentResolver</code> s'encarreguen d'esbrinar,  a partir de la sol\u00b7licitud, el controlador i els seus arguments, respectivament.</p> <p>Formen part del component <code>http-kernel</code>  de Symfony que caldr\u00e0 instal\u00b7lar:</p> <pre><code>composer require symfony/http-kernel\n</code></pre> <p>La funci\u00f3 <code>call_user_func_array</code> executa el controlador amb els seus arguments.</p> <p>Reflection (o reflexi\u00f3)</p> <p>La reflexi\u00f3 \u00e9s quan un objecte \u00e9s capa\u00e7 d'examinar-se de forma retrospectiva per informar  dels seus m\u00e8todes, propietats o classes durant l'execuci\u00f3 del script.</p>"},{"location":"07-mvc/07-04-dependency-injection/","title":"La injecci\u00f3 de depend\u00e8ncies","text":"<p>La injecci\u00f3 de depend\u00e8ncies (dependency injection) \u00e9s un patr\u00f3 de disseny orientat a objectes en  qu\u00e8 es subministren els objectes a una classe en lloc de ser la mateixa classe la que crea   aquests objectes. </p> <p>Aquests objectes compleixen contractes (interf\u00edcies, classes abstractes) que necessiten les nostres  classes per poder funcionar (d'aqu\u00ed el concepte de depend\u00e8ncia). </p> <p>Les nostres classes no creen els objectes que necessiten, sin\u00f3 que se'ls subministra una altra  classe 'contenidora' que injectar\u00e0 la implementaci\u00f3 desitjada al nostre contracte.</p> <p>Simplificant:</p> <p>La injecci\u00f3 de depend\u00e8ncies proporciona a una classe les seves depend\u00e8ncies ja siga mitjan\u00e7ant    la injecci\u00f3 del constructor, crides a m\u00e8todes o l\u2019establiment de propietats.</p> <p>Exemple: https://github.com/Seldaek/monolog/blob/master/doc/01-usage.md</p>"},{"location":"07-mvc/07-04-dependency-injection/#contenidor-de-serveis","title":"Contenidor de serveis","text":"<p>El contenidor de serveis \u00e9s una utilitat que ajuda a la implementaci\u00f3 de la injecci\u00f3 de depend\u00e8ncies.  S'encarrega de registrar totes les deped\u00e8ncies (objectes) de l'aplicaci\u00f3. L'aplicaci\u00f3 web les extraur\u00e0 i  injectar\u00e0 quan les necessite. Es tracta d'una estructura de dades semblant al <code>Registry</code>.</p>"},{"location":"07-mvc/07-04-dependency-injection/#autowiring","title":"Autowiring","text":"<p>Autowiring \u00e9s una palabra ex\u00f3tica que representa una cosa molt senzilla: la capacitat del contenidor per a crear i  injectar depend\u00e8ncies autom\u00e0ticament.</p> <p>La idea b\u00e0sica \u00e9s que quan es cride un m\u00e8tode d'una classe, si s'ha indicat el tipus de dada de l'argument en la  declaraci\u00f3 del m\u00e8tode, el contenidor busque una inst\u00e0ncia d'eixa classe i  la injecte autom\u00e0ticament. </p> <p>Per exemple:</p> <pre><code>class DatabaseConnection\n{\n// ...\n}\nclass MovieModel\n{\npublic function __construct(DatabaseConnection $DBconnection)\n{\n// ...\n}\n}\n</code></pre> <p>Quan el contenidor necessite crear un objecte <code>MovieModel</code>, detectar\u00e0 que aquesta classe necessita un objecte  <code>DatabaseConnection</code>, el buscar\u00e0 en el contenidor i l'injectar\u00e0 autom\u00e0ticament.</p> <p>Aquesta \u00e9s una funcionalitat molt important en els frameworks PHP moderns.</p> <p>M\u00e9s informaci\u00f3: * https://php-di.org/doc/autowiring.html</p>"},{"location":"07-mvc/07-98-bibliografia/","title":"Bibliografia","text":"<ul> <li>WIKIPEDIA CONTRIBUTORS. Front controller [en l\u00ednia].   https://en.wikipedia.org/w/index.php?title=Front_controller&amp;oldid=965938044. Data de consulta: 20/11/2020.</li> </ul>"},{"location":"07-mvc/07-99-activitats/","title":"Activitats","text":""},{"location":"07-mvc/07-99-activitats/#request-i-response","title":"<code>Request</code> i <code>Response</code>","text":"<ol> <li> <p>Instal\u00b7la les classes <code>Request</code> i <code>Response</code> de Symfony i usa-les en la       p\u00e0gina principal, l'inici de sessi\u00f3 d'usuari i la creaci\u00f3 d'un nou tuit.</p> </li> <li> <p>Implementa la classe <code>View</code> en les p\u00e0gines anteriors.</p> </li> <li>Adapta la p\u00e0gina de registre d'usuaris en les noves classes. </li> </ol>"},{"location":"07-mvc/07-99-activitats/#controlador-frontal","title":"Controlador frontal","text":"<ol> <li>Implementa el patr\u00f3 controlador frontal, inclou les rutes a les p\u00e0gines: principal, inici de sessi\u00f3, creaci\u00f3 d'un nou tuit i tancament de la sessi\u00f3.</li> </ol>"},{"location":"07-mvc/07-99-activitats/#rutes-i-controladors","title":"Rutes i controladors","text":"<ol> <li> <p>Instal\u00b7la el component <code>routing</code> de Symfony i adapta el projecte perqu\u00e8 registre les rutes mitjan\u00e7ant      els seus components. Fes-ho en les mateixes rutes de l'activitat anterior.</p> </li> <li> <p>Instal\u00b7la el component <code>http-kernel</code> de Symfony, actualitza el controlador frontal i crea       els controladors necessaris. Fes-ho en les mateixes rutes que en l'activitat anterior.</p> </li> </ol>"},{"location":"08-symfony/00-index/","title":"Introducci\u00f3 a Symfony","text":""},{"location":"08-symfony/01-introducci%C3%B3-va/","title":"Introducci\u00f3 als frameworks PHP i a Symfony","text":"Objectius <ul> <li>Comprendre la import\u00e0ncia de l'\u00fas de frameworks per al desenvolupament d'aplicacions</li> <li>Entendre l'arquitectura de les aplicacions Symfony.</li> <li>Desenvolupar una aplicaci\u00f3 amb Symfony.</li> </ul> Continguts <ol> <li>Instal\u00b7laci\u00f3 i configuraci\u00f3 de Symfony</li> <li>Arquitectura MVC</li> <li>Introducci\u00f3 a YAML</li> <li>Vistes</li> <li>Motor de plantilles Twig</li> <li>Injecci\u00f3 de depend\u00e8ncies: Contenidors</li> <li>El model</li> <li>Doctrine</li> <li>Creaci\u00f3 i validaci\u00f3 de formularis</li> <li>Seguretat i Control d\u2019acc\u00e9s</li> <li>Bundles</li> </ol> Continguts procedimentals <ul> <li>Instal\u00b7laci\u00f3 i configuraci\u00f3 de Symfony 5.</li> <li>\u00das del motor de plantilles Twig per creaci\u00f3 de vistes.</li> <li>Implementaci\u00f3 de contenidors de serveis per a la injecci\u00f3 de depend\u00e8ncies.</li> <li>\u00das de l'ORM Doctrine per treballar amb la base de dades</li> <li>Creaci\u00f3 i validaci\u00f3 de formularis utilitzant form builder.</li> <li>Implementaci\u00f3 de control d'acc\u00e9s</li> <li>Inserci\u00f3 de bundles en el nostre projecte</li> </ul>"},{"location":"08-symfony/01-introducci%C3%B3-va/#frameworks-php","title":"Frameworks PHP","text":"<p>Un framework \u00e9s una eina que proporciona una s\u00e8rie de m\u00f2duls que ajuden a organitzar i desenvolupar un producte de programari. En el cas concret dels frameworks PHP, la majoria d'ells proporcionen una s\u00e8rie de comandos o eines per a crear projectes amb una estructura determinada (normalment, seguint el patr\u00f3 MVC), de manera que ja donen una base de treball feta,  i facilitats per a poder crear el model de dades, la connexi\u00f3 a la base de dades, les rutes de les diferents seccions de l'aplicaci\u00f3, etc.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#exemples-de-frameworks-php","title":"Exemples de frameworks PHP","text":"<p>Actualment existeix una gran varietat de frameworks PHP que triar per a desenvolupar les nostres aplicacions. Alguns dels m\u00e9s populars s\u00f3n:</p> <ul> <li>Laravel, un framework relativament recent (va ser creat en     2011), i que ha guanyat bastant popularitat en els \u00faltims anys. La     seua filosofia \u00e9s el poder desenvolupar projectes de forma elegant i     simple. Compta amb una \u00e0mplia comunitat de suport darrere, i se li     augura un futur bastant consolidat.</li> <li>Symfony, el framework que emprarem en aquest curs. Creat en     2005, compta amb m\u00e9s cam\u00ed fet que Laravel, i una estructura m\u00e9s     consolidada. En les seues primeres versions es presentava com un     framework m\u00e9s monol\u00edtic (s'instal\u00b7laven massa m\u00f2duls que despr\u00e9s no     necessit\u00e0vem), per\u00f2 recentment ha adaptat la seua estructura per a     fer-la m\u00e9s modular. Est\u00e0 molt orientat al patr\u00f3 MVC, i a una     estructura r\u00edgida i correcta de fer aplicacions.</li> <li>CodeIgniter, un framework m\u00e9s lleuger que els anteriors, per\u00f2     tamb\u00e9 amb un ampli grup de seguidors i desenvolupadors. Va ser creat     en 2006 i, encara que ha patit una etapa d'aband\u00f3, ha tornat a     agafar for\u00e7a en els \u00faltims anys, potser a causa de la seua     simplicitat d'\u00fas.</li> <li>Phalcon, un altre framework de recent creaci\u00f3 (2012), amb una     potent capacitat de processament de p\u00e0gines PHP, i la possibilitat     de treballar com microframework (m\u00e9s lleuger, per a oferir     funcionalitats molt espec\u00edfiques) o com framework complet. De fet,     molts frameworks m\u00e9s antics tamb\u00e9 han incorporat recentment la     possibilitat d'executar-los com microframeworks.</li> <li>CakePHP, creat en 2005, \u00e9s un altre framework similar a     CodeIgniter quant a simplicitat i facilitat d'\u00fas. T\u00e9 una \u00e0mplia     comunitat tamb\u00e9 darrere que li dona suport.</li> <li>Zend, creat en 2006, \u00e9s un altre framework bastant popular,     encara que potser amb menor visibilitat que els anteriors avui dia.</li> <li>... etc.</li> </ul> <p>Quasi tots els frameworks PHP tenen una s\u00e8rie de caracter\u00edstiques comunes, com s\u00f3n l'\u00fas del patr\u00f3 MVC per a desenvolupar els seus projectes, la injecci\u00f3 de depend\u00e8ncies per a gestionar recursos tals com a connexions a bases de dades o elements compartits per tota l'aplicaci\u00f3,  la possibilitat de desenvolupar tant webs completes com a serveis REST accessibles des de diversos clients, etc.</p> <p>En el seg\u00fcent article teniu una comparatova entre Laravel i Symfony:  PHP Laravel VS Symfony: A Detailed Comparison of Web Development Frameworks</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#quin-triar","title":"Quin triar?","text":"<p>A l'hora de decantar-nos per un o un altre framework, no ens haur\u00edem de deixar enganyar per la seua popularitat, en termes de quota de mercat. En aqueix terreny, Symfony i Laravel probablement siguen els m\u00e9s beneficiats, per\u00f2 la corba d'aprenentatge en ells pot ser que siga m\u00e9s pronunciada que en uns altres a priori m\u00e9s senzills, com CodeIgniter o CakePHP.</p> <p>Cada framework pot estar millor orientat que un altre para determinats tipus de projectes o necessitats. Si volem aprendre alguna cosa r\u00e0pida per a llan\u00e7ar l'aplicaci\u00f3 com m\u00e9s prompte millor, potser Symfony no siga la millor opci\u00f3. Si, per contra, preferim fer \u00fas d'un framework amb una comunitat important darrere que ens puga donar suport i ens garantisca un temps de vida llarg, llavors Symfony o Laravel poden ser millors candidats.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#per-que-symfony","title":"Per qu\u00e8 Symfony?","text":"<p>Arribats a aquest punt... quines caracter\u00edstiques t\u00e9 Symfony que ens hagen fet triar-ho per a aquest curs enfront d'altres frameworks? El principal inconvenient que pot tenir aquest framework \u00e9s, potser, la seua corba d'aprenentatge, que \u00e9s bastant elevada comparada amb uns altres. No obstant aix\u00f2, els avantatges que ofereix compensen aquest inconvenient:</p> <ul> <li>\u00c9s un framework amb molt recorregut (creat en 2005).</li> <li>Desenvolupa versions LTS (Long Term Support) que garanteixen un     suport a llarg termini.</li> <li>T\u00e9 una gran comunitat darrere, la qual cosa permet trobar f\u00e0cilment     ajuda per a problemes que tinguem.</li> <li>T\u00e9 una bona documentaci\u00f3. De fet, en la mateixa p\u00e0gina de Symfony es     tenen disponibles alguns llibres editats pel mateix equip de     desenvolupament, i una web amb la documentaci\u00f3 oficial de l'actual     versi\u00f3.</li> <li>Utilitza (i anima a utilitzar) bones pr\u00e0ctiques de programaci\u00f3 en     els projectes.</li> <li>S'enlla\u00e7a b\u00e9 amb altres frameworks i llibreries de tercers molt     \u00fatils, denominades bundles. Alguns exemples que utilitzarem en el     curs s\u00f3n Twig (un potent motor de plantilles per a desenvolupar les     nostres vistes) o Doctrine (un ORM per a poder mapejar les dades en     objectes).</li> </ul> <p>En realitat, una vegada es coneix un d'aquests frameworks, \u00e9s m\u00e9s senzill assimilar la resta, arribat el moment. Aix\u00ed que Symfony pot ser un bon punt de partida. En concret, durant el curs utilitzarem la versi\u00f3 6 del framework, que es recolza en PHP 8.1 per a funcionar, com veurem a continuaci\u00f3.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#recursos-previs","title":"Recursos previs","text":"<p>A l'hora de treballar amb Symfony 6.4, necessitem tenir pr\u00e8viament instal\u00b7lats en el nostre sistema una s\u00e8rie de recursos programari, com s\u00f3n:</p> <ul> <li>Un servidor web que suporte PHP 8.1 o posterior. En el nostre cas,     utilitzarem Apache.</li> <li>Un servidor de bases de dades en el qual emmagatzemar la informaci\u00f3     de les nostres aplicacions. Emprarem un servidor MariaDB/MySQL.</li> <li>PHP (versi\u00f3 8.1 o posterior)</li> <li>El propi framework Symfony.</li> <li>Un IDE (entorn de desenvolupament) amb el qual editar el codi dels     nostres projectes.</li> </ul>"},{"location":"08-symfony/01-introducci%C3%B3-va/#installar-apache-mysql-i-php","title":"Instal\u00b7lar Apache, MySQL i PHP","text":"<p>Per a complir amb els tres primers requisits (Apache, MariaDB/MySQL i PHP) instal\u00b7larem un sistema XAMPP, des del seu web oficial. En el cas de la m\u00e0quina virtual que tenim disponible per al curs, podem instal\u00b7lar-ho descarregant la versi\u00f3 per a Linux.</p> <p>Es tracta d'un arxiu <code>.run</code>. Primer hem de fer-ho executable, escrivint aquest comando des de la carpeta on l'h\u00e0gem descarregat (per exemple, per a la versi\u00f3 8.2.12 de XAMPP, que \u00e9s la que est\u00e0 disponible en el moment d'escriure aquestes anotacions):</p> <p><pre><code>chmod +x xampp-linux-x64-8.2.12-0-installer.run\n</code></pre> Despr\u00e9s, ho executem amb permisos de root:</p> <pre><code>sudo ./xampp-linux-x64-8.2.12-0-installer.run\n</code></pre> <p>S'iniciar\u00e0 un assistent que ens guiar\u00e0 en la instal\u00b7laci\u00f3. Podem deixar totes les opcions marcades per defecte, excepte l'opci\u00f3 sobre Bitnami, que podem desmarcar, ja que no ho utilitzarem (\u00e9s una esp\u00e8cie d'assistent que permet instal\u00b7lar altres paquets com Wordpress, Joomla, Moodle... en els nostres projectes web).</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#el-panell-de-control-manager-de-xampp","title":"El panell de control (manager) de XAMPP","text":"<p>Farem \u00fas del manager que s'haur\u00e0 instal\u00b7lat per a engegar els servidors. Haurem de cercar el manager en q\u00fcesti\u00f3 en la carpeta on s'haja instal\u00b7lat XAMPP. En el cas de Linux, el manager es troba en <code>/opt/lampp/manager\u00ad-linux-\u00adx64.run</code>, que podem executar directament des d'un terminal, amb permisos d'administrador. Si accedim a la carpeta on est\u00e0, el comando quedaria aix\u00ed:</p> <pre><code>sudo ./manager-linux-x64.run\n</code></pre>"},{"location":"08-symfony/01-introducci%C3%B3-va/#creant-un-acces-directe-per-al-manager-en-lescriptori","title":"Creant un acc\u00e9s directe per al manager en l'escriptori","text":"<p>Com pot ser inc\u00f2mode anar a la carpeta de XAMPP per a engegar el manager cada vegada, podem crear un acc\u00e9s directe en l'escriptori. Per a Linux, existeixen diverses formes de fer-ho, vegem una: crearem un arxiu en l'escriptori (el podem cridar, per exemple \"xampp.desktop\"), i l'editem amb un editor de text, deixant-ho aix\u00ed:</p> <pre><code>[Desktop Entry]\nEncoding=UTF-8\nName=XAMPP Manager\nComment=Manager XAMPP\nExec=sudo /opt/lampp/manager-linux-x64.run\nIcon=/opt/lampp/htdocs/favicon.ico\nCategories=Aplicacions;Programaci\u00f3;Web\nVersion=7.4\nType=Application\nTerminal=true\n</code></pre> <p>El que hem fet \u00e9s definir diversos par\u00e0metres de configuraci\u00f3 de l'acc\u00e9s directe. Entre ells, els m\u00e9s destacats s\u00f3n la ruta cap a l'executable (par\u00e0metre <code>exec</code>) i la icona per a l'acc\u00e9s directe (par\u00e0metre Icon, on hem triat directament una icona que ja ve amb XAMPP).</p> <p>Despr\u00e9s d'a\u00e7\u00f2, fem que l'arxiu <code>xampp.desktop</code> siga executable (amb clic dret, en les seues propietats, podem fer-ho), i ho executem. Pot ser que ens demane la contrasenya per a llan\u00e7ar-ho, i despr\u00e9s ja podrem veure el manager.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#installant-symfony-a-traves-de-composer","title":"Instal\u00b7lant Symfony a trav\u00e9s de Composer","text":"<p>L'\u00faltim requisit per a comen\u00e7ar a treballar amb Symfony \u00e9s, \u00f2bviament, disposar del framework Symfony. Per a a\u00e7\u00f2, la mateixa web ofereix algunes alternatives, per\u00f2 recomana instal\u00b7lar Symfony a trav\u00e9s de l'eina Composer, que \u00e9s un gestor de depend\u00e8ncies que permet instal\u00b7lar diferents m\u00f2duls o llibreries en un projecte. Cont\u00e9 una base de dades en l\u00ednia amb moltes llibreries disponibles centralitzades, amb el que podem indicar quin(es) volem per a cada projecte concret, i Composer les descarrega i instal\u00b7la per nosaltres. \u00c9s molt similar a altres gestors com NPM (Node Package Manager), que s'aplica a llibreries per a Node o Javascript en general.</p> <p>Composer pot instal\u00b7lar-se localment per a cada projecte web, o de forma global per a tot el sistema. Aquesta \u00faltima opci\u00f3 \u00e9s la recomanable en el cas de voler gestionar diversos projectes en el nostre equip, per a no haver d'instal\u00b7lar-ho en tots ells. Per a fer a\u00e7\u00f2, escrivim aquests comandos des de terminal:</p> <pre><code>curl -sS https://getcomposer.org/installer | /opt/lampp/bin/php\nsudo mv composer.phar /usr/local/bin/composer\n</code></pre> <p>El que hem fet \u00e9s descarregar Composer amb el comando <code>curl</code> (pot ser que necessites instal\u00b7lar el comando <code>curl</code> si no t'ho el sistema, mitjan\u00e7ant  <code>sudo apt-get install curl</code>). Despr\u00e9s, movem l'arxiu descarregat (<code>composer.phar</code>) a la carpeta <code>/usr/local/bin</code>, amb el nom \"composer\", perqu\u00e8 en executar-ho ho trobe en el PATH del sistema.</p> <p>PHP CLI</p> <p>Les ferramentes de Symfony fan \u00fas de l'int\u00e8rpret de PHP, aix\u00ed  que hem de tenir configurat el sistema perqu\u00e8 siga capa\u00e7 d'executar la mateixa versi\u00f3 que tenim al servidor Apache, on executar\u00e0 l'aplicaci\u00f3 web.</p> <p>Com a \u00faltim pas, i ja que Composer utilitza l'executable de PHP, necessitem que l'executable estiga tamb\u00e9 en el PATH del sistema, per al que farem el seg\u00fcent:</p> <pre><code>echo \"export PATH=$PATH:/opt/lampp/bin\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre> <p>La primera l\u00ednia afig la carpeta <code>/opt/lampp/bin</code> al PATH, amb el que ja es pot localitzar el comando <code>php</code> a nivell global. La segona recarrega el fitxer <code>.bashrc</code> per a fer efectius els canvis.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#symfony-cli","title":"Symfony CLI","text":"<p>Opcionalment pots instal\u00b7lar Symfony CLI.  Des de la versi\u00f3 5 Symfony inclou un binari anomenat <code>symfony</code> que proporciona totes les eines per a desenvolupar aplicacions basades en Symfony de forma local.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#el-ide-per-a-desenvolupar-els-projectes","title":"El IDE per a desenvolupar els projectes","text":"<p>Finalment, per a poder desenvolupar els projectes, necessitem un entorn de desenvolupament que ens permeta editar el codi dels fitxers que necessitem. Podem treballar en <code>Visual Studio Code</code> instal\u00b7lant els plugins adients,  per\u00f2 com tenim la llic\u00e8ncia educativa de PHPStorm l'emprarem per la seua facilitat d'\u00fas i versatilitat. </p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#primers-passos-amb-symfony","title":"Primers passos amb Symfony","text":"<p>Ara que ja tenim tot el necessari per a comen\u00e7ar a treballar amb Symfony, \u00e9s hora de crear el nostre primer projecte de prova. Veurem quins passos seguir per a crear els projectes, quina estructura tenen i com provar-los.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#el-nostre-primer-projecte-symfony","title":"El nostre primer projecte Symfony","text":"<p>Per a crear un projecte Symfony, podem descarregar directament el framework i instal\u00b7lar-lo en la nostra carpeta d'aplicaci\u00f3 web, o b\u00e9 utilitzar Composer (opci\u00f3 recomanada). En aquest \u00faltim cas, existeixen dues alternatives per a crear projectes Symfony:</p> <p><pre><code>composer create-project symfony/skeleton:\"6.4.*\" project-name\n</code></pre> Que crear\u00e0 un projecte amb el nom indicat en el directori, contenint l'estructura m\u00ednima, sense llibreries de tercers. Ser\u00e0 la nostra responsabilitat afegir-les m\u00e9s tard. Aquesta funcionalitat ha sigut afegida en la versi\u00f3 4 de Symfony, per a permetre que s'instal\u00b7le com a microframework i no deixar un projecte massa pesat per a les nostres necessitats.</p> <p>Si tenim clar que volem fer una aplicaci\u00f3 tradicional (amb vistes i datamapper, per exemple)  podem afegir els components amb el paquet: <code>symfony/webapp-pack</code></p> <p><pre><code>composer create-project symfony/skeleton project-name\ncd project-name\ncomposer require webapp\n</code></pre> Sol ser bastant habitual emprar aquesta segona opci\u00f3 per a crear projectes, ja que, encara que ens instal\u00b7la depend\u00e8ncies que pot ser que no arribem a utilitzar, s\u00ed ens instal\u00b7la autom\u00e0ticament unes altres molt requerides, com el motor de plantilles Twig, l'ORM Doctrine, o el gestor de logs Monolog.</p> <p>Per a comen\u00e7ar, crearem un projecte anomenat \"testing\" amb la segona opci\u00f3. Accedim a la carpeta de treball (podem crear una en /home/alumne/projectes-symfony, per exemple), i escrivim aquest comando des de dins d'aqueixa carpeta:</p> <pre><code>composer create-project symfony/skeleton:\"^6.4\" testing\ncd testing\ncomposer require webapp\n</code></pre>"},{"location":"08-symfony/01-introducci%C3%B3-va/#symfony-profiler","title":"Symfony Profiler","text":"<p>El Symfony Profiler \u00e9s una eina de depuraci\u00f3 i desenvolupament inclosa en Symfony.  Proporciona informaci\u00f3 detallada sobre el funcionament intern d'una aplicaci\u00f3 Symfony,  incloent-hi les dades de sol\u00b7licitud i resposta, les m\u00e8triques de rendiment i els missatges   de registre. Nom\u00e9s est\u00e0 disponible en l'entorn de desenvolupament i es pot accedir a trav\u00e9s del   navegador web. Inclou una barra d'eines i una interf\u00edcie web per a una visi\u00f3 m\u00e9s    detallada de les dades recopilades.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#estructura-general-dun-projecte-symfony","title":"Estructura general d'un projecte Symfony","text":"<p>Despr\u00e9s de completar les ordes anteriors, s'haur\u00e0 creat una estructura amb diversos directoris i fitxers dins de <code>/home/alumne/symfony-projects/testing</code>. Si obrim aquest directori des del nostre IDE, podrem veure en el panell esquerre (Explorador) l'estructura del projecte. Aquesta estructura ha variat lleugerament al llarg de les versions per a assemblar-se m\u00e9s a una estructura Unix.</p> <p>En el cas concret d'un projecte Symfony 5, l'estructura queda com segueix:</p> <ul> <li>La carpeta bin cont\u00e9 alguns executables del nostre projecte, com     console per a escriure comandos de consola, o phpunit per a llan\u00e7ar     les proves unit\u00e0ries. Analitzarem el primer d'ells m\u00e9s endavant en     aquesta mateixa sessi\u00f3.</li> <li>La carpeta config cont\u00e9 els arxius de configuraci\u00f3 per als     diferents \u00e0mbits en qu\u00e8 es desenvolupe el projecte. Per defecte es     defineixen 3 \u00e0mbits: dev (per a desenvolupament), prod (per a posada     en producci\u00f3) i test (per a proves), encara que podem afegir els que     vulguem. Cada \u00e0mbit cont\u00e9 uns arxius de configuraci\u00f3 YAML (veurem     m\u00e9s endavant en qu\u00e8 consisteix aquest format), per a poder     especificar opcions concretes. Per exemple, en l'\u00e0mbit dev ens pot     interessar que es mostre tota la informaci\u00f3 necess\u00e0ria per pantalla,     o a un arxiu, mentre que en l'\u00e1mbido prod prevaldr\u00e0 m\u00e9s     l'efici\u00e8ncia. En qualsevol cas, fonamentalment emprarem aquesta     carpeta per a configurar rutes i serveis, com veurem en sessions     posteriors.</li> <li>La carpeta migrations contindr\u00e0 els canvis en la base de dades i que veurem m\u00e9s avant.   </li> <li>La carpeta public contindr\u00e0     la part p\u00fablica o est\u00e0tica de la web. Ac\u00ed col\u00b7locarem fulles     d'estils CSS, arxius Javascript per a la part del client, p\u00e0gines     est\u00e0tiques HTML o PHP...</li> <li>La carpeta src cont\u00e9 el codi font PHP pr\u00f2piament dit, \u00e9s a dir,     les classes que conformaran el nostre model de dades, i els     controladors de l'aplicaci\u00f3, fonamentalment. Tamb\u00e9 hi ha elements     importants, com l'arxiu Kernel.php , que d'alguna forma     controla la resta de la configuraci\u00f3: estableix quins bundles han     d'activar-se, i per a quins \u00e0mbits, entre altres coses.</li> <li>La carpeta templates contindr\u00e0 les plantilles per a les vistes,     \u00e9s a dir p\u00e0gines que es preprocesar\u00e1n pel motor de plantilles (Twig,     en el nostre cas) per a generar les vistes de l'aplicaci\u00f3, com     veurem m\u00e9s endavant.</li> <li>La carpeta tests es destina al desenvolupament de proves. </li> <li>La carpeta translations s'utilitza per a opcions     d'internacionalitzaci\u00f3</li> <li>La carpeta var s'empra per a arxius temporals, com per exemple     arxius de cach\u00e9 o de log.</li> <li>La carpeta vendor s'empra per a instal\u00b7lar els bundles de     tercers que ens descarreguem, com tamb\u00e9 veurem en sessions     posteriors.</li> </ul>"},{"location":"08-symfony/01-introducci%C3%B3-va/#provant-el-nostre-projecte","title":"Provant el nostre projecte","text":"<p>Per a poder provar el projecte, i tenint en compte que ho hem creat fora de la carpeta de treball per defecte de XAMPP (<code>/opt/lampp/htdocs</code>), hem de crear un virtual host que apunte a la nostra carpeta. Per a a\u00e7\u00f2, seguim aquests passos:</p> <ol> <li> <p>Edita l'arxiu <code>/etc/hosts</code> (amb permisos d'administrador) per a afegir un nou     domini local per a la nostra aplicaci\u00f3. Cridarem al domini     <code>symfony-testing</code>: </p> <p><pre><code>127.0.0.1 symfony-testing\n</code></pre> 2.  Hem d'editar un arxiu de configuraci\u00f3 secundari de XAMPP per a donar permisos d'acc\u00e9s a la nostra carpeta de treball. L'arxiu en q\u00fcesti\u00f3 \u00e9s <code>/opt/lampp/apache2/conf/httpd.conf</code>, i hem d'afegir al final la seg\u00fcent entrada:  <pre><code>&lt;Directory \"/home/alumne/symfony-projects/testing\"&gt;\nOptions Indexes FollowSymLinks\n    AllowOverride All Require all granted\n&lt;/Directory&gt;\n</code></pre> 3.  Habilita la creaci\u00f3 d'hosts virtuals en Apache, editant l'arxiu principal de configuraci\u00f3 <code>/opt/lampp/etc/httpd.conf</code> i descomentant la l\u00ednia que apareix en negreta, que est\u00e0 quasi al final de l'arxiu:  <pre><code># Virtual hosts \nInclude etc/extra/httpd-vhosts.conf\n</code></pre> 4.  Edita l'arxiu <code>/opt/lampp/etc/extra/httpd-\u00advhosts.conf</code> i afig un nou host virtual per a la nostra aplicaci\u00f3. En el nostre cas, haur\u00e0 de quedar-te aix\u00ed, si has seguit els passos anteriors per a crear el projecte en la carpeta corresponent:  <pre><code>&lt;VirtualHost *:80&gt;\nDocumentRoot \"/home/alumne/symfony-projects/testing/public\" ServerName  symfony-testing\n&lt;/VirtualHost&gt;    </code></pre> 5.  Reinicia el servidor Apache, i intenta accedir a <code>http://symfony-testing</code>, per a veure la p\u00e0gina d'inici:</p> </li> </ol> <p></p> <p>Nota</p> <p>Per a les seg\u00fcents aplicacions que faces, no ser\u00e0 necessari realitzar els  passos 2 i 3, ja que amb a\u00e7\u00f2 ja haur\u00e0s donat permisos d'acc\u00e9s a la teua  carpeta de treball, i deixat habilitats els hosts virtuals per al futur.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#distribuir-els-nostres-projectes-symfony","title":"Distribuir els nostres projectes Symfony","text":"<p>Si fas una ullada a la grand\u00e0ria de la carpeta <code>/home/alumne/symfony-projects/testing</code> del projecte que hem creat, comprovar\u00e0s que ocupa  bastants megues. Gran part d'aqueixa grand\u00e0ria es deu a les depend\u00e8ncies que per defecte s'instal\u00b7len en crear   el projecte amb l'opci\u00f3 <code>webapp</code>, i la grand\u00e0ria creixer\u00e0 m\u00e9s encara si necessitem instal\u00b7lar alguna altra depend\u00e8ncia addicional a les quals ja venen.</p> <p>omissi\u00f3 de directoris</p> <p>\u00d2bviament, distribuir una carpeta d'aqueixa grand\u00e0ria no \u00e9s c\u00f2mode, ni recomanable. En lloc d'a\u00e7\u00f2, el que pots fer \u00e9s ometre la subcarpeta <code>vendor</code>, que \u00e9s on s'instal\u00b7len totes les depend\u00e8ncies externes. Aquest fet no suposa cap problema, ja que, una vegada obtingut el projecte Symfony, es pot regenerar el directori amb aquest comando (des de la carpeta principal del projecte Symfony en q\u00fcesti\u00f3):</p> <pre><code>composer install\n</code></pre> <p>que simplement torna a crear la carpeta <code>vendor</code> i reinstal\u00b7la dins les depend\u00e8ncies que figuren en l'arxiu <code>composer.json</code> , que per defecte cont\u00e9 totes les depend\u00e8ncies necess\u00e0ries per al <code>webapp</code>. M\u00e9s endavant veurem com afegir m\u00e9s depend\u00e8ncies als projectes Symfony.</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#la-consola-de-symfony","title":"La consola de Symfony","text":"<p>En analitzar l'estructura d'un projecte Symfony, hem vist que existeix una carpeta <code>bin</code> amb un parell d'arxius executables a trav\u00e9s de PHP. Un d'ells s'empra per a proves unit\u00e0ries (phpunit), i no ho veurem en el curs per motius de temps, i l'altre ( console ) s\u00ed \u00e9s m\u00e9s \u00e0mpliament utilitzat per a ajudar-nos a certes tasques, com per exemple crear entitats, engegar un servidor de proves, examinar serveis, etc.</p> <p>Per a comen\u00e7ar, prova a obrir un terminal i situar-te en la carpeta del projecte \"testing\" de Symfony que hem creat aquesta sessi\u00f3. Pots fer a\u00e7\u00f2 directament si obris el terminal integrat en l'IDE.</p> <p>Prova d'executar aquesta ordre:</p> <pre><code>php bin/console debug:autowiring\n</code></pre> <p>Obtindr\u00e0s un llistat dels serveis que hi ha actualment predefinits en Symfony (m\u00e9s endavant veurem qu\u00e8 \u00e9s a\u00e7\u00f2 dels serveis).</p> <p>Existeixen altres comandos \u00fatils, com un petit servidor PHP per a poder provar r\u00e0pidament el projecte sense necessitat d'Apache, o altres comandos per a crear certs elements de l'aplicaci\u00f3 o examinar-los. Els anirem veient m\u00e9s endavant.</p> <p>Problemes amb permisos</p> <p>Els requeriments de permisos de Symfony s\u00f3n senzills d'aplicar, en cas que hi haja algun problema aquest article aporta informaci\u00f3 d'inter\u00e8s Setting up or Fixing file Permissions</p>"},{"location":"08-symfony/01-introducci%C3%B3-va/#introduccio-a-yaml","title":"Introducci\u00f3 a YAML","text":"<p>La configuraci\u00f3 dels projectes Symfony, per defecte, es defineix mitjan\u00e7ant fitxers YAML. Aquests fitxers s\u00f3n una alternativa al format XML, m\u00e9s llargs i enutjosos normalment, i al format PHP, m\u00e9s complicat d'escriure. Podr\u00edem dir que suposa un terme mitj\u00e0 quant a facilitat d'\u00fas i concreci\u00f3, i s\u00f3n fitxers que es poden executar sobre la marxa. A\u00e7\u00f2 t\u00e9 l'inconvenient que els possibles errors (de sintaxi, per exemple) no es mostraran fins que l'aplicaci\u00f3 no s'execute.</p> <p>L'est\u00e0ndard YAML \u00e9s molt ampli (es pot consultar en el seu web oficial), per\u00f2 per a Symfony nom\u00e9s \u00e9s necessari emprar un subconjunt redu\u00eft. Com podem veure si editem qualsevol arxiu YAML d'un projecte Symfony, la informaci\u00f3 s'estructura en parelles clau, valor. Si la clau o el valor estan compostos per m\u00e9s d'una paraula separades per espais, es tanquen entre cometes dobles (encara que no \u00e9s habitual).</p> <p><pre><code>driver: 'pdo_mysql'\n</code></pre> La jerarquia de la informaci\u00f3 s'estableix mitjan\u00e7ant indentacions, per\u00f2 aquestes no han de fer-se amb el tabulador, sin\u00f3 amb la barra espaiadora (quatre espais per nivell).</p> <p><pre><code>default_table_options:\ncharset: utf8mb\ncollate: utf8mb4_unicode_ci\n</code></pre> Pot haver-hi grups d'elements clau: valor, formant arrays. Aquests arrays van entre claud\u00e0tors, en el cas d'arrays normals, o entre claus, en el cas d'arrays associatius:</p> <pre><code>rols: [ROLE_USER, ROLE_ADMIN]\nusers:\nadmin: { password: adminpass, rols: [ROLE_ADMIN] }\nuser: { password: userpass, rols: [ROLE_USER] }\n</code></pre> <p>Tamb\u00e9 es pot indicar una matriu (array) escrivint cada element en una nova l\u00ednia  que comence per <code>-</code>.</p> <pre><code>App\\:\nresource: '../src/'\nexclude:\n- '../src/DependencyInjection/'\n- '../src/Entity/'\n- '../src/Kernel.php'\n</code></pre> <p>Els comentaris s'indiquen amb un coixinet al principi de cada l\u00ednia del comentari.</p> <p><pre><code># in-memory users\nusers:\nadmin: ...\n</code></pre> La primera clau de cada arxiu YAML \u00e9s la seua clau principal, que cont\u00e9 a la resta de claus i valors (la resta van indentadas un o diversos nivells respecte a aquesta). Quan s'executa l'aplicaci\u00f3, Symfony converteix aquests arxius YAML en arxius PHP amb un codi equivalent.</p>"},{"location":"08-symfony/02-mvc/","title":"El patr\u00f3 MVC en Symfony","text":""},{"location":"08-symfony/02-mvc/#el-patro-mvc","title":"El patr\u00f3 MVC","text":"<p>MVC s\u00f3n les sigles de Model-Vista-Controlador (o en angl\u00e8s, Model-View-Controller), i \u00e9s el patr\u00f3 d'arquitectura de programari per excel\u00b7l\u00e8ncia ara mateix en el m\u00f3n de les aplicacions web, i fins i tot de moltes aplicacions d'escriptori.</p> <p>Com el seu nom indica, aquest patr\u00f3 es basa a dividir el disseny o l'estructura d'una aplicaci\u00f3 web en tres components fonamentals:</p> <ul> <li>El model, que podr\u00edem resumir com el conjunt de totes les dades     o informaci\u00f3 que maneja l'aplicaci\u00f3. T\u00edpicament seran variables o     objectes extrets d'una base de dades o qualsevol altre sistema     d'emmagatzematge, per la qual cosa el codi del model normalment     estar\u00e0 format per instruccions per a connectar amb la base de dades,     recuperar informaci\u00f3 d'ella i emmagatzemar-la en algunes variables     determinades. Per tant, no tindr\u00e0 coneixement de la resta de     components del sistema.</li> <li>La vista, que \u00e9s l'intermediari entre l'aplicaci\u00f3 i l'usuari, \u00e9s     a dir, la qual cosa l'usuari veu en pantalla de l'aplicaci\u00f3. Per     tant, la vista la compondran les diferents p\u00e0gines, formularis, etc,     que l'aplicaci\u00f3 mostrar\u00e0 a l'usuari per a interactuar amb ell.</li> <li>El controlador (o controladors), que s\u00f3n els fragments de codi     encarregats de coordinar el funcionament general de l'aplicaci\u00f3.     Davant peticions dels usuaris, les arrepleguen, les identifiquen, i     accedeixen al model per a actualitzar o recuperar dades, i al seu     torn, decideixen qu\u00e8 vestisca mostrar-li a l'usuari a continuaci\u00f3     de l'acci\u00f3 que acaba de realitzar.</li> </ul> <p>\u00c9s un patr\u00f3 arquitect\u00f2nic disseny molt conc\u00eds i ben estructurat, la qual cosa li ha valgut la fama que t\u00e9 avui dia. Entre els seus molts avantatges, permet a\u00efllar el codi dels tres elements involucrats (vista, model i controlador), de manera que el treball \u00e9s molt m\u00e9s modular i divisible, podent encarregar-se de les vistes, per exemple, un dissenyador web que no tinga molta idea de programaci\u00f3 en el servidor, i del controlador un programador PHP que no tinga moltes nocions d'HTML.</p> <p>En forma d'esquema, podr\u00edem representar-ho aix\u00ed:</p> <p></p>  Components del framework MVC  <p>Les peticions de l'usuari arriben al controlador, que les identifica, i es comunica amb el model per a obtenir les dades necess\u00e0ries, i amb les vistes per a decidir qu\u00e8 mostrar a continuaci\u00f3 i omplir-la amb les dades del model, per a despr\u00e9s servir-li-la a l'usuari com a resposta. En aquesta sessi\u00f3 veurem com definir controladors en Symfony, i associar-los a rutes, de manera que mostren algun contingut o vista com a resposta.</p>"},{"location":"08-symfony/02-mvc/#controladors-i-rutes-en-symfony","title":"Controladors i rutes en Symfony","text":"<p>Per a crear p\u00e0gines en una aplicaci\u00f3 Symfony es necessiten dos elements: una ruta (\u00e9s a dir, un URI que indique a quin contingut accedir de la web) i un controlador associat a ella, que ser\u00e0 l'encarregat de mostrar el resultat (la p\u00e0gina) per a aqueixa petici\u00f3 de ruta.</p>"},{"location":"08-symfony/02-mvc/#el-concepte-de-ruta-en-symfony","title":"El concepte de ruta en Symfony","text":"<p>Les rutes en Symfony poden ser tradicionals o amigables. Una ruta tradicional \u00e9s aquella la part din\u00e0mica de la qual s'especifica en la query string. Per exemple, si volem saber la fitxa d'una pel\u00b7l\u00edcula a trav\u00e9s del seu codi, tindr\u00edem un URL com aquest:</p> <p><pre><code>http://blog-site/post.php?id=1\n</code></pre> Les rutes amigables s\u00f3n aquelles que separen els seus elements \u00fanicament per barres <code>/</code>, de manera que la part din\u00e0mica de la ruta s'intercala entre aqueixes barres. La URL anterior, en forma amigable, podria quedar aix\u00ed:</p> <pre><code>http://blog-site/post/1\n</code></pre> <p>o millor encara:</p> <pre><code>http://blog-site/post/hello-world\n</code></pre> <p>A m\u00e9s, amb les rutes amigables es sol emmascarar el tipus de fitxer que s'est\u00e0 sol\u00b7licitant, amb el que s'omet la informaci\u00f3 de si \u00e9s una p\u00e0gina PHP, o HTML, o de qualsevol altre tipus. Ens centrarem en aquestes altres rutes en aquest curs.</p>"},{"location":"08-symfony/02-mvc/#el-nostre-primer-controlador","title":"El nostre primer controlador","text":"<p>Un controlador en Symfony \u00e9s b\u00e0sicament una classe que cont\u00e9 m\u00e8todes PHP l'\u00fanic prop\u00f2sit dels quals \u00e9s obtenir la petici\u00f3 de l'usuari per a una ruta concreta, processar-la i enviar-li una resposta. </p> <p>Els controladors se situen dins de la carpeta <code>src</code> del nostre projecte Symfony, concretament en l'espai de noms <code>Controller</code> que ja est\u00e0 creat.</p> <pre><code>namespace App\\Controller;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nclass DefaultController\n{\n#[Route('/', name: 'app_default')]\npublic function home()\n{\nreturn new Response(\"Welcome to my blog\");\n}\n}\n</code></pre> <p>Observa el codi de la classe, i el del m\u00e8tode <code>home()</code> en concret. Simplement mostra un missatge de benvinguda a trav\u00e9s d'un objecte <code>Response</code>, que s'empra per a definir la resposta a enviar. Si guardem els canvis i accedim a http://blog-site, veurem aquest missatge de benvinguda.</p>"},{"location":"08-symfony/02-mvc/#definir-els-espais-de-noms-namespaces","title":"Definir els espais de noms (namespaces)","text":"<p>Si dones una ullada al codi del controlador anterior, veur\u00e0s que comen\u00e7a amb la l\u00ednia:</p> <p><pre><code>namespace App;\n</code></pre> El que estem fent \u00e9s situar la classe (<code>DefaultController</code>, en aquest cas) dins d'un espai de noms. Cada subcarpeta que hi ha dins de la carpeta <code>src</code> constitueix un espai de noms, de manera que quan situem un arxiu font dins d'un d'aqueixos subdirectoris, hem d'indicar que pertany a aquest espai de noms. Tots aquests espais de noms pengen d'una arrel <code>App</code>, per la qual cosa l'espai de noms per al nostre controlador \u00e9s <code>App</code> (els subespais se separen amb barres invertides).</p> <p>Els espais de noms s\u00f3n \u00fatils en aplicacions amb molts arxius font, com solen ser les aplicacions web m\u00e9s o menys importants, ja que es corre el risc de cridar exactament igual a dues classes que estiguen en carpetes diferents. Si les agrupem per espais de noms, no hi haur\u00e0 problema a cridar igual a les classes i als arxius. El concepte \u00e9s similar al de paquet (package) en llenguatges com Java. De fet, en Java tenim molts exemples de classes que es diuen igual i pertanyen a paquets diferents, amb el que s\u00f3n f\u00e0cilment diferenciables.</p>"},{"location":"08-symfony/02-mvc/#incloure-altres-espais-de-noms-en-el-fitxer-actual","title":"Incloure altres espais de noms en el fitxer actual","text":"<p>Tornem de nou al codi del controlador. Despr\u00e9s de definir a quin espai de noms pertany aquest controlador (<code>App</code>), podem necessitar utilitzar objectes d'altres espais de noms. En aquest cas, per exemple, utilitzem un objecte <code>Response</code> que pertany a l'espai <code>Symfony</code>. Per a poder utilitzar aquest objecte de forma c\u00f2moda i no haver de col\u00b7locar tot aquest prefix cada vegada que vulguem fer refer\u00e8ncia al tipus <code>Response</code>, hem d'afegir una instrucci\u00f3 use indicant la ruta completa fins a la classe que utilitzarem:</p> <p><pre><code>use Symfony;\n</code></pre> Despr\u00e9s d'a\u00e7\u00f2, ja podrem referenciar a la classe <code>Response</code> directament pel seu nom en qualsevol lloc d'aquest fitxer font. De la mateixa manera, podem afegir totes les sent\u00e8ncies <code>use</code> que considerem, per a fer  refer\u00e8ncia a tots els elements externs que necessitarem.</p> <p>Tamb\u00e9 podem definir un \u00e0lies per a nomenar a la classe incorporada dins del nostre arxiu font. Si, en lloc d'utilitzar <code>Response</code>, volem referenciar a aquest tipus amb una forma m\u00e9s abreujada (Res, per exemple), far\u00edem a\u00e7\u00f2:</p> <pre><code>use Symfony as Res;\n...\nreturn new Res(...);\n</code></pre>"},{"location":"08-symfony/02-mvc/#crear-controladors-per-linia-de-comandos","title":"Crear controladors per l\u00ednia de comandos","text":"<p>Mitjan\u00e7ant el comando <code>bin/console</code> podem crear un controlador, amb la instrucci\u00f3:</p> <pre><code>php bin/console make:controller ControllerName\n</code></pre> <p>Es crear\u00e0 autom\u00e0ticament un arxiu <code>ControllerName.php</code> en la carpeta <code>src/Controller</code>, i una plantilla associada al mateix, en la carpeta <code>templates</code> o alguna subcarpeta. Com a avantatge destacable d'aquesta forma de crear controladors, ens crea autom\u00e0ticament el namespace i afig els recursos externs (use) que necessitem. Per\u00f2, com a desavantatge, ens crea una plantilla i unes connexions amb ella que normalment no necessitarem, i haurem de retocar.</p>"},{"location":"08-symfony/02-mvc/#definint-rutes","title":"Definint rutes","text":"<p>Donem una ullada m\u00e9s al codi del controlador que hem fet. Abans del m\u00e8tode <code>home</code> hi ha un especie de comentari. Realment no \u00e9s un comentari, es tracta d'un atribut, una forma d'afegir metadades al codi. En aquest exemple s'indica que aquest controlador s'activa en la ruta <code>/</code> i el seu nom \u00e9s <code>app_default</code>.</p> <pre><code>#[Route('/', name: 'app_default')]\npublic function home() ...\n</code></pre> <p>Info</p> <p>Els atributs van ser afegits a partir de PHP 8.0. En versions anteriors de PHP s'utilitzaven anotacions, que complien la mateixa funci\u00f3: <pre><code>/*** \n    @Route(\"/\", name=\"home\") \n*/\n</code></pre> Val a dir que mentre els atributs s\u00f3n nadius en PHP, les anotacions no ho s\u00f3n. Les  annotacions s\u00f3n una mena de constructe creat per poder afegir metadades adaptant les comentaris,  com poden ser els docblocks.</p>"},{"location":"08-symfony/02-mvc/#una-altra-forma-de-definir-rutes-larxiu-configroutesyaml","title":"Una altra forma de definir rutes: l'arxiu <code>config/routes.yaml</code>","text":"<p>Existeix una forma alternativa de definir rutes sense utilitzar anotacions, que consisteix a editar l'arxiu <code>config/routes.yaml</code> i afegir la nova ruta amb el controlador i nom associats. Per exemple, per al cas anterior, si volem que en accedir a l'arrel de l'aplicaci\u00f3 s'active el m\u00e8tode <code>home</code> del controlador <code>HomeController</code>, assignant-li a la ruta el nom <code>home</code> (tal com hem fet en l'exemple anterior), afegir\u00edem aquestes l\u00ednies al fitxer:</p> <p><pre><code>home: path: /\ncontroller: App\\Controller\\HomeController::home\n</code></pre> No obstant aix\u00f2, si atenem a la documentaci\u00f3 oficial de Symfony, es recomana definir les rutes mitjan\u00e7ant anotacions, per la qual cosa d'ara endavant utilitzarem aquest mecanisme en les anotacions.</p>"},{"location":"08-symfony/02-mvc/#comprovar-les-rutes-de-la-nostra-aplicacio","title":"Comprovar les rutes de la nostra aplicaci\u00f3","text":"<p>Utilitzant la consola de Symfony (fitxer <code>bin/console</code> del nostre projecte) podem comprovar quines rutes hi ha actualment definides en la nostra aplicaci\u00f3, mitjan\u00e7ant aquest comando:</p> <pre><code>php bin/console debug:router\n</code></pre> <p>Mostrar\u00e0 el llistat de rutes, indicant el seu nom, i la ruta associada. A m\u00e9s de la nostra ruta arrel, apareixeran altres rutes creades per defecte per a opcions de depuraci\u00f3 i proves, com per exemple les rutes profiler per a rastrejar i obtenir detalls de les peticions realitzades. No entrarem en aqueixos detalls en aquest curs.</p>"},{"location":"08-symfony/02-mvc/#configurar-la-reescriptura-de-rutes","title":"Configurar la reescriptura de rutes","text":"<p>Abans de continuar, hi ha un cosa que hem de tenir en compte: el controlador que hem provat (<code>HomeController::home</code>) funciona perqu\u00e8 fa refer\u00e8ncia a l'arrel de l'aplicaci\u00f3. Si canviem la ruta per qualsevol altra, com per exemple <code>/home</code>, no funcionar\u00e0:</p> <p></p> <p>El motiu \u00e9s que encara no tenim configurat el nostre projecte perqu\u00e8 reescriga les rutes de forma amigable. Per a a\u00e7\u00f2, haur\u00edem de tenir un fitxer <code>.htaccess</code> en la carpeta <code>public</code> amb els par\u00e0metres de configuraci\u00f3 d'Apache per a aqueixa reescriptura. Com aqueixa tasca \u00e9s una miqueta manual, l'eina <code>composer</code> posa a la nostra disposici\u00f3 un parell de  comandos per a fer-ho per nosaltres. </p> <p>Des de la carpeta del nostre projecte escriurem:</p> <pre><code>composer require symfony/apache-pack\n</code></pre> <p>En executar-lo ens mostrar\u00e0 el seg\u00fcent missatge:</p> <p><pre><code>Symfony operations: 1 recipe (5a8f9ff66bdb49d40606adc556254e91)\n-  WARNING  symfony/apache-pack (&gt;=1.0): From github.com/symfony/recipes-contrib:master\n    The recipe for this package comes from the \"contrib\" repository, which is open to community contributions.\n    Review the recipe at https://github.com/symfony/recipes-contrib/tree/master/symfony/apache-pack/1.0\n\nDo you want to execute this recipe?\n    [y] Yes\n    [n] No\n    [a] Yes for all packages, only for the current installation session\n    [p] Yes permanently, never ask again for this project\n    (defaults to n): </code></pre> Al que respondrem <code>y</code> o <code>p</code> si volem que no ens torne a preguntar.</p> <p>Les receptes de Symfony</p> <p>Les receptes de Symfony permeten automatitzar la configuraci\u00f3 de paquets Composer mitjan\u00e7ant el connector Symfony Flex Composer.</p> <p>Hi ha receptes oficials i contribucions de tercers (<code>contrib</code>) \u00e9s a dir, no s\u00f3n receptes dels desenvolupadors oficials de Symfony. Aquest \u00e9s el cas de la recepta <code>symfony/apache-pack</code>, per la qual cosa ens pregunta si volem instal\u00b7lar-la igualment.</p> <p>Podem executar <code>composer recipes</code> per veure les receptes que hi ha instal\u00b7lades i si cal actualitzar-les.</p> <p>A partir d'aquest punt, ja podrem crear les rutes amigables que vulguem en el nostre projecte. Recorda repetir aquests comandos en tots els projectes Symfony que utilitzen rutes amigables.</p>"},{"location":"08-symfony/02-mvc/#rutes-amb-parametres","title":"Rutes amb par\u00e0metres","text":"<p>Existeixen algunes rutes que tenen parts variables. Per exemple, si volgu\u00e9rem mostrar una entrada del bloc (el seu t\u00edtol, la data i l'autor),  a partir del seu codi, podr\u00edem plantejar una ruta com a http://blog-site/posts/1, i que el controlador ens mostrara la informaci\u00f3 de l'entrada amb id 1. Per\u00f2, si cridem a aqueixa ruta amb un altre codi, haur\u00e0 de mostrar la informaci\u00f3 de la pel\u00b7l\u00edcula amb l'altre codi.</p> <p>Anem a crear un nou controlador en el nostre espai de noms <code>Controller</code> dins de la carpeta <code>src</code>. En aquest cas, cridarem a la classe <code>DefaultController</code>. Definirem un m\u00e8tode anomenat <code>show</code>, que mostrar\u00e0 l'entrada  en el codi del qual li arribe en la ruta, encara que de moment nom\u00e9s mostrar\u00e0 un missatge amb el codi de l'entrada indicat en la ruta:</p> <p><pre><code>namespace App\\Controller;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nclass DefaultController\n{\n#[Route(\"/posts/{id}\", name: \"posts_show\")]\npublic function show(int $id)\n{\nreturn new Response(\"Post with id: $id\");\n}\n}\n</code></pre> Observa com en l'atribut afegim el <code>id</code> del post com un element variable, gr\u00e0cies a les claus (a aquesta notaci\u00f3 se li crida wildcard). El m\u00e8tode associat a la ruta ha de tenir un par\u00e0metre amb aqueixa mateixa dada (l'identificador), de manera que puguem utilitzar-lo dins del m\u00e8tode. Si ara accedim a la URI <code>blog-site/posts/54</code> ens mostrar\u00e0 el missatge \"Post with id: 54\".</p>"},{"location":"08-symfony/02-mvc/#afegir-requisits-a-les-wildcards","title":"Afegir requisits a les wildcards","text":"<p>Tal com hem definit el wildcard qu\u00e8 passaria si enlloc d'un enter rebera un text com a par\u00e0metre? </p> <p>Symfony ens permet afegir requisits als wildcards  en forma d'expressi\u00f3 regular per poder afinar millor a l'hora de llegir els par\u00e0metres.</p> <p>Per exemple:</p> <pre><code>#[Route(\"/posts/{id}&lt;\\d+&gt;\", name: \"posts_show\")]\n</code></pre> <p>D'aquesta forma la ruta <code>posts_show</code> sols s'activar\u00e0 si el par\u00e0metre rebut \u00e9s un d\u00edgit.</p>"},{"location":"08-symfony/02-mvc/#afegir-valors-per-defecte-a-les-wildcards","title":"Afegir valors per defecte a les wildcards","text":"<p>En algunes ocasions, tamb\u00e9 ens pot interessar donar un valor per defecte a una wildcard perqu\u00e8, si en la ruta no s'especifica res, tinga aquest valor per defecte. A\u00e7\u00f2 s'aconsegueix assignant un valor per defecte al par\u00e0metre associat en el controlador. En el cas de la publicaci\u00f3 anterior, si volgu\u00e9rem  que quan s'introdu\u00efsca la ruta <code>/posts</code> (sense id), es mostrara per defecte la publicaci\u00f3 amb id 2, far\u00edem a\u00e7\u00f2:</p> <pre><code>#[Route('/posts/{id&lt;\\d+&gt;?2}', name: 'posts_show')]\n</code></pre> <p>Per a m\u00e9s informaci\u00f3 podeu consultar la documentaci\u00f3 oficial de Symfony: Routing</p>"},{"location":"08-symfony/03-twig/","title":"Gesti\u00f3 de plantilles amb Twig","text":""},{"location":"08-symfony/03-twig/#definint-plantilles-de-vistes-amb-twig","title":"Definint plantilles de vistes amb Twig","text":"<p>Els exemples de controladors vistos fins ara queden un poc limitats, perqu\u00e8 el disseny brilla per la seua abs\u00e8ncia. Ens hem limitat a mostrar un text pla amb les dades per a comprovar que el controlador funciona, o en tot cas, a generar un HTML rudimentari en l'objecte <code>Response</code> per a mostrar una llista. Per\u00f2 si volem generar una vista m\u00e9s complicada, no \u00e9s bona idea fer-ho afegint els elements en la cadena de text per a la resposta. Ara veurem com podem generar vistes amb una mica de disseny, gr\u00e0cies al motor de plantilles Twig.</p> <p>La filosofia d'utilitzar motors de plantilles com Twig \u00e9s separar tot el possible el codi PHP de l'estructura HTML de la p\u00e0gina, de manera que tota la l\u00f2gica de negoci queda fora de la vista (en el controlador, normalment), i en aquesta deixem el necessari per a mostrar el contingut al client.</p> <p>Per a a\u00e7\u00f2, el que es sol fer \u00e9s, des del controlador, accedir al model per a obtenir o modificar les dades necess\u00e0ries, emmagatzemar-los en variables i passar aquestes variables a les vistes o plantilles, de manera que aquestes nom\u00e9s hagen d'encarregar-se de mostrar aqueixa informaci\u00f3 amb l'estructura i disseny adequats. A\u00efllem, per tant, el treball del programador d'una banda (controlador i model), i el del dissenyador per un altre (vistes)</p>"},{"location":"08-symfony/03-twig/#la-nostra-primera-plantilla","title":"La nostra primera plantilla","text":"<p>Anem a veure com renderitzar una plantilla amb Twig. En primer lloc, hem de fer alguns petits canvis en el controlador que vaja a usar Twig: farem que la classe del controlador herete d'<code>AbstractController</code> (incorporant aquesta classe del seu corresponent espai de noms):</p> <pre><code>namespace App;\n... \nuse Symfony;\nclass NameController extends AbstractController {\n</code></pre> <p>A\u00e7\u00f2 ho farem per a poder utilitzar algunes de les facilitats que ens dona <code>AbstractController</code>, com per exemple el m\u00e8tode <code>render</code> per a renderitzar vistes. Com hem comentat en sessions anteriors, les vistes s'emmagatzemen en la carpeta <code>templates</code> del nostre projecte Symfony, i si emprem Twig com a motor de plantilles, tenen l'extensi\u00f3 <code>.html.twig.</code> Per exemple, crearem una plantilla anomenada <code>blog.html.twig</code> amb aquest codi:</p> <pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;h1&gt;&lt;/h1&gt;\n&lt;h2&gt;Welcome to my blog site&lt;/h2&gt;\n&lt;p&gt;Home&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Ara modificarem la classe <code>src/Controller/DefaultController</code> perqu\u00e8 herete d'<code>AbstractController</code>.</p> <p><pre><code>namespace App\\Controller;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nclass DefaultController extends AbstractController\n{\n</code></pre> ...  i modifiquem tamb\u00e9 el m\u00e8tode <code>home</code> perqu\u00e8, en lloc de mostrar una resposta de text pla, renderitze la vista <code>home.html.twig</code> que acabem de fer. Per a a\u00e7\u00f2, el codi ser\u00e0 el seg\u00fcent:</p> <pre><code>/**\n* @Route(\"/\", name=\"home\")\n*/\npublic function home()\n{\nreturn $this-&gt;render('home.html.twig');\n}\n</code></pre> <p>Observa com emprem l'objecte <code>$this</code> (recorda, ara la nostra classe \u00e9s un subtipus d'<code>AbstractController</code>) per a accedir al m\u00e8tode <code>render</code> i renderitzar la vista que li indiquem, que autom\u00e0ticament se cercar\u00e0 des de la carpeta <code>templates</code>.</p>"},{"location":"08-symfony/03-twig/#plantilles-amb-parts-variables","title":"Plantilles amb parts variables","text":"<p>La plantilla anterior no \u00e9s alguna cosa massa habitual, ja que \u00fanicament cont\u00e9 text est\u00e0tic. El normal \u00e9s que hi haja alguna part que varie, i que li siga proporcionada des del controlador. Anem a veure un altre exemple amb la fitxa de la pel\u00b7l\u00edcula: anem a la nostra classe <code>src/Controller/MovieController</code> i fem que tamb\u00e9 herete d'<code>AbstractController:</code></p> <p><pre><code>namespace App\\Controller;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nclass MovieController extends AbstractController\n</code></pre> Anem a generar una plantilla anomenada <code>post_show.html.twig</code> en la nostra carpeta <code>templates</code>. Rebr\u00e0 com a par\u00e0metre del controlador la  pel\u00b7l\u00edcula amb el codi indicat (despr\u00e9s veurem com), i mostrar\u00e0 en la plantilla les seues dades. El codi de la plantilla pot quedar aix\u00ed:</p> <pre><code>&lt;h1&gt;Post&lt;/h1&gt;\n&lt;h2&gt;{{ post.title }}&lt;/h2&gt;\n&lt;p&gt;{{ post.content}}&lt;/p&gt;\n&lt;p&gt;Release date: {{ post.publishedAt }}&lt;/p&gt;\n</code></pre> <p>Emprem la notaci\u00f3 de la doble clau <code>{{ ... }}</code> per a situar variables, que normalment  s\u00f3n dades que esperem rebre de fora (del controlador, en aquest cas). Ens faltaria,  en el m\u00e8tode <code>show</code> de <code>DefaultController</code>, obtenir el post desitjat (a\u00e7\u00f2 ja ho tenim fet) i passar-li-la a la vista, d'aquesta manera: <pre><code>/**\n  * @Route(\"/movies/{id}\", name=\"movies_show\", requirements={\"id\"=\"\\d+\"})\n  */\npublic function show($id = 2)\n{\n$result = array_filter($this-&gt;movies,\nfunction($movie) use ($id)\n{\nreturn $movie[\"id\"] == $id;\n});\nif (count($result) &gt; 0)\n{\nreturn $this-&gt;render('movies_show.html.twig', array(\n'movie' =&gt; array_shift($result)\n));\n}\nelse\nreturn new Response(\"Movie not found\");\n}\n</code></pre> Com veus, n'hi ha prou amb utilitzar un array de par\u00e0metres en el m\u00e8tode <code>render</code> per a passar-li a la vista tot el que necessite, identificant cada cosa amb el nom que vulguem, i que coincidir\u00e0 amb el qual s'utilitzar\u00e0 en el codi de la vista (el par\u00e0metre <code>movie</code>, en aquest cas).</p>"},{"location":"08-symfony/03-twig/#estructures-de-control-en-plantilles","title":"Estructures de control en plantilles","text":"<p>La plantilla anterior \u00e9s un exemple per a afegir parts din\u00e0miques en el contingut de la mateixa, per\u00f2 est\u00e0 alguna cosa \"coixa\": qu\u00e8 passa si no trobem la pel\u00b7l\u00edcula? En aquest cas, el controlador es limita a retornar una resposta de text pla que diu \"Movie not found\", per\u00f2 podr\u00edem emprar la mateixa vista (o una altra) per a mostrar aquesta informaci\u00f3 m\u00e9s elaborada. Aix\u00ed, el controlador renderizar\u00e1 la mateixa vista, passant-li una pel\u00b7l\u00edcula v\u00e0lida o <code>null</code>, segons el cas:</p> <p><pre><code>    public function show($id=2)\n{\n$result = array_filter($this-&gt;movies,\nfunction($movie) use ($id)\n{\nreturn $movie[\"id\"] == $id;\n});\nif (count($result) &gt; 0)\n{\nreturn $this-&gt;render('movies_show.html.twig', array(\n'movie' =&gt; array_shift($result)\n));\n}\nelse\nreturn $this-&gt;render('movies_show.html.twig', array(\n'movie' =&gt; null\n));\n}\n</code></pre> i la vista distingir\u00e0 si hi ha o no pel\u00b7l\u00edcula, per a mostrar una o una altra informaci\u00f3:</p> <p><pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;h1&gt;Movie data&lt;/h1&gt;\n{% if movie %}\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;{{ movie.title }}&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Tagline&lt;/strong&gt;: {{ movie.tagline }}&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Release date&lt;/strong&gt;: {{ movie.release_date }}&lt;/li&gt;\n&lt;/ul&gt;\n{% else %}\n&lt;p&gt;Movie not found&lt;/p&gt;\n{% endif %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Observa com hem incl\u00f2s un bloc <code>{% ... %}</code>, que s\u00f3n  blocs d'acci\u00f3,  emprats per a definir certes sent\u00e8ncies de control (condicions, bucles)  i incloure dins el codi associat a aquesta sent\u00e8ncia.</p> <p>De la mateixa manera, per al controlador de filtratge de pel\u00b7l\u00edcules per t\u00edtol, podem crear una nova vista (per exemple, \"movies_filter.html.twig\"), que mostre el llistat de pel\u00b7l\u00edcules que reba ja filtrat del controlador:</p> <p><pre><code>&lt;h1&gt;Movies&lt;/h1&gt;\n{% if movies %} \n&lt;ul&gt;\n{% for movie in movies %}  \n&lt;li&gt;&lt;strong&gt;{{ movie.title }}&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Tagline&lt;/strong&gt;: {{ movie.tagline }}&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Release date&lt;/strong&gt;: {{ movie.release_date }}&lt;/li&gt;\n&lt;/ul&gt;\n{% endfor %} \n{% else %}\n&lt;p&gt;No movies found&lt;/p&gt;\n{% endif %}\n</code></pre> Aix\u00ed, el codi del controlador es limitar\u00e0 a filtrar les i a passar-li'ls a la vista:</p> <p><pre><code>   public function filter($text)\n{\n$result = array_filter($this-&gt;movies,\nfunction($movie) use ($text)\n{\nreturn strpos($movie[\"title\"], $text) !== false;                \n});\n$response = \"\";\nif (count($result) &gt; 0)\n{\nforeach ($result as $movie) {\n$response .= \"&lt;ul&gt;&lt;li&gt;\" . $movie[\"title\"] . \"&lt;/li&gt;\" .\n\"&lt;li&gt;\" . $movie[\"tagline\"] . \"&lt;/li&gt;\" .\n\"&lt;li&gt;\" . $movie[\"release_date\"] . \"&lt;/li&gt;&lt;/ul&gt;\";\n}\nreturn $this-&gt;render('movies_filter.html.twig', array(\n'movies' =&gt; $result\n));        \n}        \n}\n</code></pre> Observa com podem emprar bucles en les plantilles per a rec\u00f3rrer col\u00b7leccions de dades passades des del controlador.</p>"},{"location":"08-symfony/03-twig/#herencia-de-plantilles","title":"Her\u00e8ncia de plantilles","text":"<p>L'her\u00e8ncia de plantilles ens permet reaprofitar el codi d'unes en unes altres. En realitat, a\u00e7\u00f2 \u00e9s alguna cosa molt habitual en el disseny web: que totes les p\u00e0gines (o diverses) d'una web compartisquen la mateixa cap\u00e7alera i peu, per exemple. Aix\u00ed, podem definir una estructura o layout base en una plantilla, i fer que altres hereten d'ella per a emplenar certs buits. Vegem un exemple amb la nostra web de pel\u00b7l\u00edcules.</p> <p>En primer lloc, definirem la plantilla base. Teniu un exemple en qu\u00e8 basar-vos ja fet, en l'arxiu <code>templates/base.html.twig</code>, que proporciona un esquelet que podr\u00edem aprofitar per a moltes aplicacions:</p> <p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;{% block title %}Welcome!{% endblock %}&lt;/title&gt;\n{% block stylesheets %}{% endblock %}\n{% block javascripts %}{% endblock %}\n&lt;/head&gt;\n&lt;body&gt;\n{% block body %}{% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Com podem observar, la part \"emplenable\" de la plantilla es defineix mitjan\u00e7ant blocs (blocks), de manera que en les diferents subplantilles podem indicar quins blocs de la plantilla pare volem emplenar. Per exemple, anem a definir una subplantilla per a la p\u00e0gina d'inici. Retoquem la nostra plantilla <code>home.html.twig</code> i la deixem aix\u00ed:</p> <p><pre><code>{% extends 'base.html.twig' %}\n{% block title %}Movies{% endblock %} {% block body %}\n&lt;h1&gt;Movies&lt;/h1&gt;\n&lt;p&gt;Welcome to Movies FX Site!&lt;/p&gt;\n{% endblock %}\n</code></pre></p> <p>\u00c9s important que, si una plantilla hereta d'una altra, el primer codi que hi haja en aqueixa plantilla (sense explicar comentaris previs) siga una instrucci\u00f3 {% raw %}<code>{% extends ... %}</code> {% endraw %} per a indicar que \u00e9s una her\u00e8ncia. Despr\u00e9s, n'hi ha prou amb emplenar els blocs que el seu contingut vulguem modificar o establir: en aquest exemple, els blocs title i body, definits en la plantilla base, encara que el bloc title es podria deixar predefinit com a \"Movies\" en la plantilla base tamb\u00e9.</p> <p>De la mateixa manera, definir\u00edem les plantilles <code>movies_show.html.twig</code>.</p> <pre><code>{% extends 'base.html.twig' %}\n{% block title %}Movies{% endblock %}\n{% block body %}   \n&lt;h1&gt;Movie data&lt;/h1&gt;\n{% if movie %}\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;{{ movie.title }}&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Tagline&lt;/strong&gt;: {{ movie.tagline }}&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Release date&lt;/strong&gt;: {{ movie.release_date }}&lt;/li&gt;\n&lt;/ul&gt;\n{% else %}\n&lt;p&gt;Movie not found&lt;/p&gt;\n{% endif %}\n{% endblock %}\n</code></pre> <p>... i <code>movies_filter.html.twig</code>:</p> <pre><code>{% extends 'base.html.twig' %}\n{% block title %}Movies{% endblock %}\n{% block body %}   \n&lt;h1&gt;Movies&lt;/h1&gt;\n{% if movies %} \n{% for movie in movies %}  \n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;{{ movie.title }}&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Tagline&lt;/strong&gt;: {{ movie.tagline }}&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Release date&lt;/strong&gt;: {{ movie.release_date }}&lt;/li&gt;\n&lt;/ul&gt;\n{% endfor %} \n{% else %}\n&lt;p&gt;No movies found&lt;/p&gt;\n{% endif %}\n{% endblock %}\n</code></pre>"},{"location":"08-symfony/03-twig/#incloure-plantilles-dins-daltres","title":"Incloure plantilles dins d'altres","text":"<p>Altra opci\u00f3 interessant, a part de l'her\u00e8ncia, \u00e9s la de poder incloure una plantilla com a part del contingut d'una altra. N'hi ha prou amb utilitzar la instrucci\u00f3 <code>include</code>, seguida del nom de la plantilla i, si els necessita, els seus par\u00e0metres associats. Per exemple, podr\u00edem traure la llista de pel\u00b7l\u00edcules d'una plantilla anomenada <code>movie_data.html.twig</code>:</p> <pre><code>&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;{{ movie.title }}&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Tagline&lt;/strong&gt;: {{ movie.tagline }}&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Release date&lt;/strong&gt;: {{ movie.release_date }}&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>I incloure-la tant en <code>movies_show</code>...</p> <pre><code>{% extends 'base.html.twig' %}\n{% block title %}Movies{% endblock %}\n{% block body %}   \n&lt;h1&gt;Movie data&lt;/h1&gt;\n{% if movie %}\n{{ include ('movie_data.html.twig', {'movie': movie }) }}\n{% else %}\n&lt;p&gt;Movie not found&lt;/p&gt;\n{% endif %}\n{% endblock %}\n</code></pre> <p>... com en <code>movies_filter</code>:</p> <pre><code>{% extends 'base.html.twig' %}\n{% block title %}Movies{% endblock %}\n{% block body %}   \n&lt;h1&gt;Movies&lt;/h1&gt;\n{% if movies %} \n{% for movie in movies %}  \n{{ include ('movie_data.html.twig', {'movie': movie }) }}\n{% endfor %} \n{% else %}\n&lt;p&gt;No movies found&lt;/p&gt;\n{% endif %}\n{% endblock %}\n</code></pre>"},{"location":"08-symfony/03-twig/#enllacos-a-rutes-i-a-elements-estatics","title":"Enlla\u00e7os a rutes i a elements est\u00e0tics","text":"<p>Per a finalitzar aquest apartat d'edici\u00f3 de plantilles, ens queden dos aspectes importants a tractar:</p> <ul> <li>Com incloure contingut est\u00e0tic (fulles d'estil, imatges... i tot el     que, en general, estiga dins de la carpeta \"public\" del projecte)</li> <li>Com afegir enlla\u00e7os a altres rutes</li> </ul>"},{"location":"08-symfony/03-twig/#afegir-contingut-estatic-en-plantilles","title":"Afegir contingut est\u00e0tic en plantilles","text":"<p>Per a il\u00b7lustrar com afegir contingut est\u00e0tic en plantilles, anem a definir en la nostra carpeta <code>public</code> de la web de pel\u00b7l\u00edcules una subcarpeta <code>css</code>, i dins un arxiu <code>styles.css</code> (que quedar\u00e0, per tant, en <code>public/css/styles.css</code>. Definim dins un estil b\u00e0sic per a provar. Per exemple:</p> <pre><code>    body { background-color: #99ccff; } h1 { border-bottom: 1px solid black; }\n}\n</code></pre> <p>Ara, anem a afegir aquest estil a la nostra web. Com tenim un bloc <code>stylesheets</code> en la nostra plantilla <code>base.html.twig</code>, podem aprofitar-ho i incloure el CSS dins d'aquest bloc, perqu\u00e8 ho utilitzen totes les subplantillas:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;{% block title %}Welcome!{% endblock %}&lt;/title&gt;\n{% block stylesheets %}\n&lt;link href=\"{{ asset('css/styles.css') }}\" rel=\"stylesheet\" /&gt;\n{% endblock %}\n{% block javascripts %}{% endblock %}\n&lt;/head&gt;\n&lt;body&gt;\n{% block body %}{% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>De la mateixa manera, si tingu\u00e9rem una imatge, per exemple, <code>public/images/image.png</code>, podr\u00edem afegir-la en la plantilla  amb un cosa aix\u00ed:</p> <pre><code>&lt;img src=\"{{ asset('images/image.png') }}\" /&gt;\n</code></pre> <p>Podem tamb\u00e9 emprar rutes absolutes, emprant la instrucci\u00f3 <code>absolute_url</code>:</p> <pre><code>&lt;img src=\"{{ absolute_url(asset('images/image.png')) }}\" /&gt;\n</code></pre> <p>En el cas d'arxius javascript, s'afegirien en el bloc <code>javascripts</code> de la plantilla base (o d'alguna subplantilla, si es vol). Per exemple, suposant que tenim un arxiu <code>library.js</code> penjant de la subcarpeta <code>public/js</code>, far\u00edem alguna cosa aix\u00ed:</p> <pre><code>{% block javascripts %}\n&lt;script src=\"{{ asset('js/library.js') }}\"&gt;&lt;/script&gt;\n{% endblock %}\n</code></pre>"},{"location":"08-symfony/03-twig/#enllacar-a-altres-rutes-de-laplicacio","title":"Enlla\u00e7ar a altres rutes de l'aplicaci\u00f3","text":"<p>Si el que volem \u00e9s definir un enlla\u00e7 a una altra ruta o p\u00e0gina de la nostra aplicaci\u00f3, en aqueix cas utilitzem la funci\u00f3 <code>path</code> per a indicar el nom (<code>name</code>) que h\u00e0gem assignat a la ruta a la qual volem anar. Per exemple, si volem anar a la fitxa d'una pel\u00b7l\u00edcula el codi del qual est\u00e0 emmagatzemat en la variable <code>id</code>, far\u00edem alguna cosa aix\u00ed:</p> <pre><code>&lt;a href=\"{{ path('movies_show', {'id': id}) }}\"&gt;...&lt;/a&gt;\n</code></pre>"},{"location":"08-symfony/03-twig/#altres-caracteristiques-interessants-de-twig","title":"Altres caracter\u00edstiques interessants de Twig","text":"<p>A m\u00e9s de tot l'exposat durant aquest apartat, existeixen altres caracter\u00edstiques interessants de Twig. Vegem algunes d'elles r\u00e0pidament en aquesta subsecci\u00f3.</p>"},{"location":"08-symfony/03-twig/#us-de-filtres","title":"\u00das de filtres","text":"<p>Quan volem mostrar informaci\u00f3 en una plantilla amb la sintaxi de la doble clau <code>{{...}}</code>, podem emprar filtres per a processar la informaci\u00f3 a mostrar i donar-li cert format. Els filtres en Twig s'activen mitjan\u00e7ant la barra vertical (<code>|</code>), seguida del filtre a aplicar. Per exemple, si volem mostrar el nom del t\u00edtol  en maj\u00fascules, far\u00edem alguna cosa aix\u00ed:</p> <pre><code>{{ movie.title | upper }}\n</code></pre> <p>Existeixen altres filtres \u00fatils, com lower (per a mostrar la informaci\u00f3 en min\u00fascules), o date , per a formatar dates amb el format que es vulga:</p> <pre><code>{{ dada_de_tipus_data | date(\"d/m/Y\")}}\n</code></pre>"},{"location":"08-symfony/03-twig/#comentaris","title":"Comentaris","text":"<p>\u00c9s possible tamb\u00e9 afegir l\u00ednies de comentaris en les plantilles Twig, mitjan\u00e7ant la sintaxi <code>{# ... #}</code>:</p> <pre><code>{# A\u00e7\u00f2 \u00e9s un comentari #}\n</code></pre>"},{"location":"08-symfony/03-twig/#reutilitzar-contingut-de-plantilles-pare","title":"Reutilitzar contingut de plantilles pare","text":"<p>Hem vist que podem sobreescriure el contingut d'un bloc (block) d'una plantilla pare, simplement definint el mateix bloc en la subplantilla filla. Per\u00f2 tamb\u00e9 \u00e9s possible reutilitzar el contingut del pare i afegir el propi de la filla, cridant al pare amb <code>parent</code>. Per exemple, imaginem que, a m\u00e9s dels estils CSS que tinguem definits en <code>base.html.twig</code>, volem afegir altres particulars per a una plantilla, sense perdre els de el pare. Ho far\u00edem aix\u00ed:</p> <pre><code>{% block stylesheets %}\n{{ parent() }}\n&lt;link href=\"{{ asset('css/some_styles.css') }}\" rel=\"stylesheet\" /&gt;\n{% endblock %}\n{% endraw %}\n</code></pre>"},{"location":"08-symfony/03-twig/#cicles","title":"Cicles","text":"<p>L'opci\u00f3 cycle \u00e9s molt \u00fatil quan volem alternar c\u00edclicament certs valors en un bucle. Per exemple, per a mostrar un llistat amb 10 files i estils de fila alterns, podem fer alguna cosa aix\u00ed:</p> <pre><code>{% for i in 1..10 %}\n&lt;div class=\"{{ cycle(['par', 'impar'], i) }}\"&gt;\n    ...\n    &lt;/div&gt;\n{% endfor %}\n</code></pre>"},{"location":"08-symfony/03-twig/#altres-opcions","title":"Altres opcions","text":"<p>Existeixen altres opcions que no hem vist i podeu consultar en la web oficial de Twig.</p>"},{"location":"08-symfony/04-injeccio-dependencies/","title":"El contenidor de serveis i la injecci\u00f3 de depend\u00e8ncies","text":""},{"location":"08-symfony/04-injeccio-dependencies/#introduccio","title":"Introducci\u00f3","text":"<p>La injecci\u00f3 de depend\u00e8ncies \u00e9s un concepte habitualment lligat a frameworks de desenvolupament web. Fa refer\u00e8ncia a un patr\u00f3 de disseny orientat a relacionar adequadament els objectes que componen l'aplicaci\u00f3 de manera que es comparteixen certs recursos globals o es subministren a cada classe que els necessite en lloc de ser la mateixa classe qui els crea. A\u00e7\u00f2 afavoreix el desacoblament de la nostra aplicaci\u00f3, en permetre que els elements que la componen siguen m\u00e9s independents entre si. Per exemple, imaginem que hem d'accedir des de diverses classes o fitxers font a una base de dades MySQL. Sense la injecci\u00f3 de depend\u00e8ncies, haur\u00edem de crear la connexi\u00f3 a la base de dades en cadascuna d'aqueixes classes o fitxers font.No obstant aix\u00f2, comptant amb aquesta caracter\u00edstica, algun element de l'aplicaci\u00f3 s'encarregar\u00e0 de crear la connexi\u00f3, i facilitar-la als altres elements que la necessiten.</p> <p>Per a gestionar aquesta injecci\u00f3 de depend\u00e8ncies Symfony utilitza un objecte anomenat contenidor de serveis que \u00e9s qui s'encarregar\u00e0  de crear les inst\u00e0ncies de tots aqueixos elements que seran compartits   o accedits des de diferents llocs del codi, i que cridarem serveis. </p> <p>Symfony ja compta amb una s\u00e8rie de serveis predefinits, i cada m\u00f2dul de tercers (bundle) que afegim a l'aplicaci\u00f3 incorpora els seus propis.</p>"},{"location":"08-symfony/04-injeccio-dependencies/#configuracio-general-dels-serveis","title":"Configuraci\u00f3 general dels serveis","text":"<p>De forma general, els serveis es configuren en l'arxiu services.yaml dins de la carpeta config de la nostra aplicaci\u00f3. Si fem una ullada a la configuraci\u00f3 d'inici, podem distingir quatre apartats:</p> <ol> <li>Configuraci\u00f3 de par\u00e0metres globals per a tots els serveis. Ac\u00ed     definirem les propietats que podran ser accedides per tots els     serveis que utilitzem o creem. Per exemple, hi ha un par\u00e0metre     locale per a indicar que la localitzaci\u00f3 de l'aplicaci\u00f3 empra     l'idioma angl\u00e9s per defecte      <pre><code>parameters:\nlocale: 'en'\n</code></pre></li> <li> <p>Despr\u00e9s es t\u00e9 la secci\u00f3 de services. El primer apartat dins     d'aquesta secci\u00f3 indica la configuraci\u00f3 per defecte que tindran els     serveis:      <pre><code>services: _defaults: autowire: true\nautoconfigure: true\npublic: false\n</code></pre> autowire fa refer\u00e8ncia al fet que els serveis     s'auto-injecten, \u00e9s a dir, quan es passa com a par\u00e0metre un servei     a un m\u00e8tode indicant el nom de la classe, autom\u00e0ticament Symfony     crea l'objecte corresponent i el passa com a par\u00e0metre. Per     exemple, si fem: </p> <p><pre><code>use Psr;\nclass ...\n{\n    public function method(LoggerInterface $logger)\n</code></pre> Symfony detectar\u00e0 la classe LoggerInterface com un servei existent, crear\u00e0 una inst\u00e0ncia del mateix i la passar\u00e0 al m\u00e8tode com a par\u00e0metre. * autoconfigure indica que els serveis que es creen es registren autom\u00e0ticament atenent al seu tipus. Per exemple, si vam crear una classe que hereta de Command, es registrar\u00e0 autom\u00e0ticament com un comando. * public indica el nivell de visibilitat dels serveis, que per defecte no \u00e9s p\u00fablic (opci\u00f3 recomanada).</p> </li> <li> <p>A continuaci\u00f3, hi ha una secci\u00f3 que permet que qualsevol cosa que     definim en la carpeta src es puga utilitzar com a servei, i     injectar-se en altres elements, a excepci\u00f3 dels elements indicats en     la propietat exclude <pre><code>App\\: resource: '../src/*'\nexclude:\n- '../src/DependencyInjection/'\n- '../src/Entity/'\n- '../src/Kernel.php'\n- '../src/Tests/'\n</code></pre></p> </li> <li>Finalment, hi ha un \u00faltim apartat dedicat als controladors, per a     permetre que els serveis se'ls puguen injectar com a arguments,     encara que no heretem de cap classe base de controlador.      <pre><code>App\\Controller\\:\nresource: '../src/Controller' tags: ['controller.service_arguments']\n</code></pre></li> </ol>"},{"location":"08-symfony/04-injeccio-dependencies/#mostrar-serveis-actuals","title":"Mostrar serveis actuals","text":"<p>En sessions anteriors, en parlar del comando bin/console que tenim disponible en qualsevol projecte Symfony, vam posar com a exemple un comando que mostra tots els serveis que es tenen actualment disponibles en la nostra aplicaci\u00f3:</p> <pre><code>php bin/console debug:autowiring\n</code></pre>"},{"location":"08-symfony/04-injeccio-dependencies/#utilitzar-serveis","title":"Utilitzar serveis","text":"<p>En Symfony existeixen multitud de serveis ja predefinits i llestos per a utilitzar-se, com per exemple un mailer per a enviar correus electr\u00f2nics, o un logger per a generar missatges de log de diferent \u00edndole (errors, warnings , etc). Per a utilitzar-los, n'hi ha prou amb passar com a par\u00e0metre al controlador que ho requerisca un objecte del tipus corresponent. Per exemple, si volem utilitzar un logger , Symfony posa a la nostra disposici\u00f3 el bundle Monolog, a trav\u00e9s de la classe LoggerInterface. N'hi ha prou que passem un par\u00e0metre d'aquest tipus al nostre controlador per a utilitzar-ho.</p> <p>Anem al nostre projecte de pel\u00b7l\u00edcules, en concret a la classe <code>src/Controller/HomeController</code>, i utilitzem aquest logger per a traure un missatge amb la data i hora de l'acc\u00e9s a la p\u00e0gina d'inici. La classe quedar\u00e0 aix\u00ed:</p> <pre><code>&lt;?php\nnamespace App\\Controller;\nuse Psr\\Log\\LoggerInterface;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nclass HomeController extends AbstractController\n{\nprivate LoggerInterface $logger;\npublic function __construct(LoggerInterface $logger)\n{\n$this-&gt;logger = $logger;\n}\n/**\n     * @Route(\"/\", name=\"home\")\n     */\npublic function home()\n{\n$now = new \\DateTime();\n$this-&gt;logger-&gt;info(\"Access on {$now-&gt;format(\"Y/m/d H:i:s\")}\");\nreturn $this-&gt;render(\"home.html.twig\");\n}\n}\n</code></pre> <p>nota</p> <p>Observa com hem emprat la classe DateTime de PHP, posant-li una barra  invertida davant perqu\u00e8 la reconega com a pr\u00f2pia de PHP.</p> <p>Podr\u00edem haver passat directament l'objecte LoggerInterface al m\u00e8tode home, per\u00f2 \u00e9s m\u00e9s habitual passar els serveis a un constructor de la classe i guardar-los en atributs de la mateixa, per a poder ser utilitzats per m\u00e9s d'un m\u00e8tode.</p> <p>Si accedim a l'arrel de l'aplicaci\u00f3 ( http://movies-symfony ), es generar\u00e0 el corresponent missatge de registre (log). Aquests missatges es guarden per defecte en la subcarpeta <code>var/log</code>, en concret en l'arxiu <code>dev.log</code> si estem en mode desenvolupament, o en <code>prod.log</code> si estem en producci\u00f3. Es poden configurar aquests arxius i altres opcions, per\u00f2 l'\u00fas d'aquesta llibreria no forma part dels continguts d'aquest curs, l'emprarem nom\u00e9s com a exemple d'\u00fas de serveis, i per a alguna depuraci\u00f3 puntual d'algun controlador.</p> <p>A m\u00e9s del m\u00e8tode info vist en l'exemple, existeixen altres m\u00e8todes per a generar missatges de major o menor prioritat, com per exemple warning, error, critical... Es pot obtenir un llistat fent una ullada al codi de <code>LoggerInterface.</code></p>"},{"location":"08-symfony/04-injeccio-dependencies/#crear-serveis","title":"Crear serveis","text":"<p>Ara vorem com crear els nostres propis serveis. Seguint amb la nostra aplicaci\u00f3 d'exemple (movies), extraurem la \"base de dades\" de pel\u00b7l\u00edcules a un servei. Si recordem, per a evitar de moment utilitzar una base de dades real, hav\u00edem creat a m\u00e0 un array de pel\u00b7l\u00edcules en la nostra classe src/Controller/MovieController. El que farem ara ser\u00e0 definir aquest array dins d'un servei, per a poder accedir a ell des de qualsevol element de l'aplicaci\u00f3.</p> <p>Els serveis es poden crear en qualsevol carpeta de src, ja que, com hem vist, qualsevol element d'aquesta carpeta (excepte uns pocs preconfigurats) autom\u00e0ticament es defineix com a servei. Per a agrupar-los tots, podem crear-los, per exemple, en la subcarpeta src/Service. En el nostre cas, cridarem a la classe del servei DBTest. Definim dins l'array, i un m\u00e8tode que ho retorne:</p> <pre><code>namespace App\\Service;\nclass DBTest\n{\nprivate array $movies = [\n[\"id\"=&gt;\"2\", \"title\" =&gt; \"Ava\", \n\"tagline\" =&gt; \"Kill. Or be killed\",\n\"release_date\" =&gt; \"25/09/2020\"],\n[\"id\" =&gt; \"3\", \n\"title\" =&gt; \"Bill &amp;Ted Face the Music\",\n\"tagline\" =&gt; \"The future awaits\", \n\"release_date\" =&gt; \"24/09/2020\"],\n[\"id\" =&gt; \"4\", \"title\" =&gt; \"Hard Kill\",\n\"tagline\" =&gt; \"Take on a madman. Save the world.\", \n\"release_date\" =&gt; \"14/09/2020\"],\n[\"id\" =&gt; \"5\", \"title\" =&gt; \"The Owners\", \"tagline\" =&gt; \"\",\n\"release_date\" =&gt; \"10/05/2020\"],\n[\"id\" =&gt; \"6\", \"title\" =&gt; \"The New Mutants\",\n\"tagline\" =&gt; \"It's time to face your demons.\", \n\"release_date\" =&gt; \"20/04/2020\"],\n];\npublic function get():array {\nreturn $this-&gt;movies;\n}\n}\n</code></pre> <p>La nostra classe src/Controller/MovieController quedar\u00e0 d'aquesta manera:</p> <pre><code>...\nclass MovieController extends AbstractController\n{\nprivate array $movies;\npublic function __construct(DBTest $data)\n{\n$this-&gt;movies = $data-&gt;get();\n}\n...\n</code></pre> <p>Com veiem, el que s'ha fet \u00e9s utilitzar un constructor per a passar-li com a par\u00e0metre el servei (objecte de tipus DBTest ), i guardar les dades en un atribut intern de la classe, per a poder-lo usar tant en el m\u00e8tode show com en el m\u00e8tode filter. Recorda afegir tamb\u00e9 la corresponent l\u00ednia use per a utilitzar la classe DBTest.</p>"},{"location":"08-symfony/04-injeccio-dependencies/#altres-opcions","title":"Altres opcions","text":"<p>Ara que ja sabem com crear serveis propis i utilitzar-los, o b\u00e9 utilitzar serveis de Symfony o de bundles de tercers, anem a veure algunes opcions una mica m\u00e9s avan\u00e7ades que afecten al contenidor de serveis i als serveis que utilitzem i desenvolupem.</p>"},{"location":"08-symfony/04-injeccio-dependencies/#combinar-serveis","title":"Combinar serveis","text":"<p>Qu\u00e8 ocorreria si en una classe o m\u00e8tode determinat necessitem emprar m\u00e9s d'un servei? Tenim dues alternatives:</p> <ol> <li> <p>Passar tants par\u00e0metres com a serveis es requerisquen, normalment al     constructor de la classe. Per exemple, si necessitem un objecte de     tipus DBTest i un altre de tipus LoggerInterface en una     mateixa classe, podem fer a\u00e7\u00f2:      <pre><code>class MyClass\n{\nprivate array $movies;\nprivate LoggerInterface $logger;\npublic function __construct(DBTest $data, LoggerInterface $logger)\n{\n$this-&gt;movies = $data-&gt;get();\n$this-&gt;logger = $logger;\n}\n}\n</code></pre></p> </li> <li> <p>Com a segona alternativa, tamb\u00e9 es pot crear una classe que     encapsule els objectes necessaris (para no passar-los per separat     com a par\u00e0metre), i despr\u00e9s utilitzar un objecte d'aqueixa classe     en el constructor. Aix\u00ed, per al mateix exemple anterior primer     crear\u00edem una classe que encapsulara un objecte <code>DBTest</code> i un altre     <code>LoggerInterface</code>... </p> <p><pre><code>class CombinedService\n{\nprivate array $movies;\nprivate LoggerInterface $logger;\npublic function __construct(DBTest $data, LoggerInterface $logger)\n{\n$this-&gt;movies = $data-&gt;get();\n$this-&gt;logger = $logger;\n}\n// create getters or methods to acces \n</code></pre> ... i despr\u00e9s l'utilitzariem en la classe:</p> <pre><code>class MyClass\n{\nprivate $service;\npublic function __construct(CombinedService $service)\n{\n$this-&gt;$service = $service;\n}\n...\n</code></pre> </li> </ol>"},{"location":"08-symfony/04-injeccio-dependencies/#arguments-sense-autowiring","title":"Arguments sense \"autowiring\"","text":"<p>Hem vist que l'opci\u00f3 de configuraci\u00f3 autowiring existent en l'arxiu config/services.yaml fa refer\u00e8ncia al fet que quan passem un objecte d'un servei determinat a un m\u00e8tode (indicant el tipus d'objecte) Symfony autom\u00e0ticament crea l'objecte per nosaltres i li'l passa al m\u00e8tode.</p> <p>No obstant aix\u00f2, existeixen alguns arguments per als quals Symfony no pot aplicar aquest mecanisme. Per exemple, suposem que en la nostra classe HomeController volem que el format de data per al missatge de registre (log) siga personalizable, i per tant, es puga passar com a argument. La classe quedaria aix\u00ed:</p> <pre><code>...\nclass HomeController extends AbstractController\n{\nprivate LoggerInterface $logger;\nprivate string $dateFormat;\npublic function __construct(LoggerInterface $logger, string $dateFormat)\n{\n$this-&gt;logger = $logger;\n$this-&gt;dateFormat = $dateFormat;\n}\n/**\n     * @Route(\"/\", name=\"home\")\n     */\npublic function home()\n{\n$now = new \\DateTime();\n$this-&gt;logger-&gt;info(\"Access on {$now-&gt;format($this-&gt;dateFormat)}\");\nreturn $this-&gt;render(\"home.html.twig\");\n}\n}\n</code></pre> <p>Per\u00f2 si intentem utilitzar-lo (accedint a movies-symfony ), obtindrem el seg\u00fcent missatge d'error:</p> <p>Cannot autowire service \"App\\Controller\\HomeController\": argument \"$dateFormat\"  of method \"__construct()\" is type-hinted \"string\", you should  configure its value explicitly.</p> <p>En realitat, el que ha ocorregut \u00e9s bastant simple: per al primer argument ( LoggerInterface ), Symfony sap on obtenir-lo i com construir-lo, per\u00f2 per al segon, al no estar tipat (no s'ha indicat el tipus)  ni tenir un valor per defecte, Symfony no sap qu\u00e8 fer amb ell. Per a solucionar el problema, podem definir arguments propis d'un servei, \u00e9s a dir, arguments que va a utilitzar un servei determinat i que no s\u00f3n auto- injectables. Per a a\u00e7\u00f2, editem l'arxiu config/services.yaml indicant el nom de la classe afectada, i els par\u00e0metres no auto-injectables que pot rebre el constructor. En el nostre cas, afegim aquestes l\u00ednies al final de l'arxiu:</p> <pre><code>    App\\Controller\\HomeController:\narguments:\n$dateFormat: 'Y/m/d H:i:s'\n</code></pre> <p>Recorda no usar el tabulador per a indentar les propietats (si no quatre espais). El que hem fet ha sigut indicar que la classe HomeController tindr\u00e0 un argument anomenat formatoFecha en el seu constructor, el valor del qual per defecte \u00e9s l'indicat.</p>"},{"location":"08-symfony/04-injeccio-dependencies/#parametres-globals","title":"Par\u00e0metres globals","text":"<p>\u00c9s possible tamb\u00e9 definir par\u00e0metres de configuraci\u00f3 globals a tots els serveis, en la secci\u00f3 parameters de l'arxiu config/services.yaml. De fet, ja tenim un par\u00e0metre global definit que indica la localitzaci\u00f3 o idioma general de la p\u00e0gina:</p> <pre><code>parameters:\nlocale: 'en'\n</code></pre> <p>Tornant a l'exemple anterior, podr\u00edem afegir un nou par\u00e0metre que indique que el format de data per defecte per a qualsevol servei que ho requerisca ser\u00e0 el vist abans:</p> <p><pre><code>parameters: locale: 'en' default_date_format: 'Y/m/d H:i:s'\n</code></pre> I podr\u00edem utilitzar aquest par\u00e0metre en qualsevol arxiu de configuraci\u00f3 YAML. Per a comen\u00e7ar, ho podem utilitzar m\u00e9s a baix, quan especifiquem l'argument formatoFecha per a la classe HomeController. Ara farem que prenga el seu valor del par\u00e0metre global, en lloc de posar-li-ho a m\u00e0:</p> <pre><code>App\\Controller\\HomeController:\narguments: $dateFormat: '%default_date_format%'\n</code></pre> <p>Podem accedir als par\u00e0metres globals des de qualsevol controlador, sempre que herete de la classe Controller (i no AbstractController ) accedint a la seua propietat container :</p> <pre><code>use Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nclass MiController extends Controller\n{\n...\npublic function myFunction()\n{\n$format = $this-&gt;container-&gt;getParameter('default_date_format');\n</code></pre>"},{"location":"08-symfony/04-injeccio-dependencies/#associar-arguments-per-nom-o-per-tipus","title":"Associar arguments per nom o per tipus","text":"<p>Per a finalitzar amb aquest apartat, veurem que es poden associar o establir els arguments dels serveis tant pel tipus d'argument (en el cas que s'especifique tipus) com pel nom del mateix. Per a a\u00e7\u00f2, dins de l'arxiu <code>config/services.yaml</code> , i en concret dins de l'apartat <code>services &gt; _defaults</code> , afegim una propietat <code>bind</code> , i en ella indiquem tantes associacions com vulguem.</p> <p>Vegem un exemple amb l'objecte <code>logger</code> que hem usat per a mostrar missatges de log. Aquest objecte \u00e9s de tipus <code>LoggerInterface</code> , que en realitat \u00e9s una interf\u00edcie, i qualsevol llibreria que la implemente pot servir com a font per a generar aqueixos arxius de log. Una d'elles \u00e9s <code>Monolog</code>, i \u00e9s la que s'utilitza per defecte, per\u00f2 podrien ser unes altres.</p>"},{"location":"08-symfony/04-injeccio-dependencies/#associacio-per-nom","title":"Associaci\u00f3 per nom","text":"<p>Per exemple, podem fer que, sempre que un servei tinga un argument anomenat logger, s'utilitze la llibreria Monolog :</p> <p><pre><code>services: _defaults: ... bind: $logger: '@monolog.logger.request'\n</code></pre> Si definim un servei amb un constructor aix\u00ed:</p> <pre><code>private $logger;\npublic function __construct($logger) \n{ \n$this-&gt;logger = $logger; \n}\n</code></pre> <p>autom\u00e0ticament a l'argument logger se li assignar\u00e0 un objecte del tipus LoggerInterface de Monolog , encara que no especifiquem el tipus.</p>"},{"location":"08-symfony/04-injeccio-dependencies/#associacio-per-tipus","title":"Associaci\u00f3 per tipus","text":"<p>Alternativament, en lloc d'usar el nom de l'argument, podem fer que, sempre que un servei intente utilitzar la interf\u00edcie LoggerInterface (la que hem utilitzat en els exemples d'aquesta sessi\u00f3), s'empre per defecte la implementaci\u00f3 que fa d'ella la llibreria Monolog :</p> <pre><code>services:\n_defaults:\n...\nbind:\nPsr\\Log\\LoggerInterface: '@monolog.logger.request'\n</code></pre> <p>D'aquesta manera, sempre que utilitzem un objecte de tipus LoggerInterface, se li associar\u00e0 una inst\u00e0ncia del logger de Monolog tamb\u00e9.</p>"},{"location":"08-symfony/05-doctrine/","title":"Gesti\u00f3 del model de dades amb Doctrine","text":""},{"location":"08-symfony/05-doctrine/#introduccio-a-doctrine","title":"Introducci\u00f3 a Doctrine","text":""},{"location":"08-symfony/05-doctrine/#que-es-un-orm","title":"Qu\u00e8 \u00e9s un ORM?","text":"<p>Un ORM (Object Relational Mapping) \u00e9s un framework encarregat de tractar amb una base de dades relacional (connectar amb ella, realitzar operacions de consulta, inserci\u00f3, etc.), de manera que, de cara a l'aplicaci\u00f3, es converteixen a objectes tots els elements que s'extraguen de la base de dades i viceversa (els objectes de l'aplicaci\u00f3 es transformen en registres de la base de dades, arribat el cas). D'aquesta forma, l'ORM s'encarregar\u00e0 de realitzar aquesta conversi\u00f3 o mapatge autom\u00e0ticament per nosaltres. Definint una s\u00e8rie de regles, indicarem quines taules de la base de dades relacional es corresponen amb quines classes del nostre model, i quins camps de cada taula es corresponen amb quins atributs de cada classe. A partir d'ac\u00ed, l'ORM s'encarregar\u00e0 d'extraure la informaci\u00f3 de la base de dades i crear els objectes corresponents, o de convertir els objectes amb els seus atributs en registres de la base de dades, amb les seues corresponents columnes.</p> <p>El principal avantatge d'utilitzar un ORM com Doctrine \u00e9s a\u00efllar l'aplicaci\u00f3 del gestor de base de dades que h\u00e0gem triat (MySQL, Oracle, PostgreSQL...) ja que a nivell d'aplicaci\u00f3 treballarem amb objectes, i ser\u00e0 Doctrine qui s'encarregue de connectar amb la base de dades triada, i transformar els objectes per a adaptar-los a la mateixa.</p>"},{"location":"08-symfony/05-doctrine/#configuracio-basica-de-doctrine","title":"Configuraci\u00f3 b\u00e0sica de Doctrine","text":"<p>Per a poder utilitzar Doctrine, hem d'indicar com connectar al servidor de base de dades que anem a utilitzar. Aquests par\u00e0metres de connexi\u00f3 es poden configurar en l'arxiu <code>.env</code> del nostre projecte. Aquest \u00e9s un arxiu on es defineixen certes variables pr\u00f2pies d'entorn, que despr\u00e9s es processen i es converteixen en variables reals. En el nostre cas, definim una variable anomenada <code>DATABASE_URL</code>, amb una URL on s'especifiquen tant l'adre\u00e7a i port de connexi\u00f3 a la base de dades, com el login i password necessaris per a accedir, aix\u00ed com el nom de la base de dades a la qual connectar. Per exemple, per a una base de dades MySQL, l'estructura general ser\u00e0 aquesta:</p> <pre><code>DATABASE_URL=mysql://db_user:db_password@127.0.0.1:3306/db_name\n</code></pre> <p>Tenint en compte l'usuari i contrasenya per defecte de phpMyAdmin per a XAMPP (usuari root i contrasenya buida), aquest podria ser un valor v\u00e0lid per a connectar a la nostra base de dades de contactes:</p> <pre><code>DATABASE_URL=mysql://root@127.0.0.1:3306/movies-symfony\n</code></pre> <p>Aquest arxiu <code>.env</code> pot utilitzar-se tant en desenvolupament com en producci\u00f3, encara que en aquest \u00faltim cas es recomana definir variables d'entorn reals en el sistema, per a evitar p\u00e8rdua de rendiment en haver de traduir aquest arxiu per a cada petici\u00f3.</p> <p>Gesti\u00f3 dels entorns</p> <p>Symfony suporta la noci\u00f3 d'entorns. Per defecte, t\u00e9 suport integrat per tres entorns,  per\u00f2 pots afegir-ne tants com vulgues: <code>dev</code>, <code>prod</code> i <code>test</code>. Tots els entorns  comparteixen el mateix codi, per\u00f2 treballen amb configuracions diferents.</p> <p>Per exemple, totes les eines de depuraci\u00f3 estan habilitades en l'entorn <code>dev</code>.  En l'entorn <code>prod</code> l'aplicaci\u00f3 est\u00e0 optimitzada per al rendiment.</p> <p>El canvi d'un entorn a un altre pot realitzar-se modificant la variable d'entorn <code>APP_ENV</code>.</p> <p>Un arxiu <code>.env</code> amb uns valors acuradament escollits es genera autom\u00e0ticament quan es crea el projecte:</p> <pre><code>###&gt; symfony/framework-bundle ###\nAPP_ENV=dev\nAPP_SECRET=f307a57c2c035484820f08a0494076dc\n###&lt; symfony/framework-bundle ###\n\n###&gt; symfony/mailer ###\n# MAILER_DSN=smtp://localhost\n###&lt; symfony/mailer ###\n\nDATABASE_URL=\"mysql://root@127.0.0.1:3306/symfony-movies\"\n</code></pre> <p>Qualsevol paquet pot afegir m\u00e9s variables d'entorn a aquesta imatge gr\u00e0cies a la seva recepta utilitzada per Symfony Flex.</p> <p>El fitxer <code>.env</code> s'envia al repositori i descriu els valors per defecte de l'entorn  de producci\u00f3. Podeu substituir aquests valors creant un fitxer <code>.env.local</code>. Aquest fitxer no ha de ser enviat a l'repositori i \u00e9s per aix\u00f2 que el fitxer <code>.gitignore</code> ja l'est\u00e0 ignorant.</p> <p>Mai guardis dades secretes o confidencials en aquests arxius. </p> <p>Per a obtenir m\u00e9s informaci\u00f3 consulta Configuring Symfony</p> <p>En el cas que la base de dades encara no existisca, Doctrine pot crear-la per nosaltres. Per a a\u00e7\u00f2, n'hi ha prou amb escriure el seg\u00fcent comando:</p> <p><pre><code>php bin/console doctrine:database:create\n\nCreated database 'movies-symfony' for connection named default\n</code></pre> Autom\u00e0ticament, es prendr\u00e0 el nom de la base de dades de la variable d'entorn anterior, es connectar\u00e0 al servidor i es crear\u00e0 (sense taules, de moment).</p>"},{"location":"08-symfony/05-doctrine/#creacio-dentitats","title":"Creaci\u00f3 d'entitats","text":"<p>Les entitats, en Doctrine s\u00f3n objectes PHP que es poden identificar mitjan\u00e7ant un  identificador \u00fanic o clau prim\u00e0ria. Aquestes classes no necessiten estendre cap  classe base abstracta o interf\u00edcie. </p> <p>Una entitat cont\u00e9 propietats de persit\u00e8ncia. Una propietat de persist\u00e8ncia \u00e9s una  inst\u00e0ncia de l'entitat que es desa i es recupera de la base de dades  mitjan\u00e7ant les capacitats de mapeig de dades de Doctrine.</p> <p>En resum, podr\u00edem dir que les entitats s\u00f3n les classes que van a compondre el model de dades de la nostra aplicaci\u00f3. Per exemple, per a la nostra aplicaci\u00f3 de pel\u00b7licules, necessitarem una entitat/classe anomenada <code>Movie</code> que emmagatzeme les dades concretes de cada pel\u00b7l\u00edcula:</p> classDiagram      class Movie{           -init id           -title string           -overview text           -poster string           -releaseDate date           -voters int = 0           -rating float = 0.0       }    <p>Per a crear una entitat, emprem el seg\u00fcent comando des del terminal (dins de la carpeta principal del nostre projecte Symfony):</p> <pre><code>php bin/console make:entity\n</code></pre> <p>S'iniciar\u00e0 un assistent que ens anir\u00e0 demanant informaci\u00f3 per a construir l'entitat:</p> <ul> <li>Nom de la classe o entitat.</li> <li>Propietats o atributs de la classe, per a cadascun, demanar\u00e0 el nom     (si directament premem <code>Intro</code> deixar\u00e0 de demanar-nos m\u00e9s dades), el     tipus de dada, la longitud o grand\u00e0ria del camp, si admet nuls...</li> </ul> <p>Per exemple, per al cas de la nostra classe <code>Movie</code>, el proc\u00e9s quedaria aix\u00ed:</p> <pre><code>php bin/console make:entity\n\n Class name of the entity to create or update (e.g. FiercePuppy):\n &gt; Movie\n\n created: src/Entity/Movie.php\n created: src/Repository/MovieRepository.php\n\n Entity generated! Now let's add some fields!\n You can always add more fields later manually or by re-running this command.\n\n New property name (press &lt;return&gt; to stop adding fields):\n &gt; title\n\n Field type (enter ? to see all types) [string]:\n &gt; string\n\n Field length [255]:\n &gt; 100\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/Movie.php\n\n Add another property? Enter the property name (or press &lt;return&gt; \n to stop adding fields):\n &gt; tagline\n\n Field type (enter ? to see all types) [string]:\n &gt; string\n\n Field length [255]:\n &gt; 255\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; yes\n\n updated: src/Entity/Movie.php\n\n Add another property? Enter the property name (or press &lt;return&gt; \n to stop adding fields):\n &gt; poster\n\n Field type (enter ? to see all types) [string]:\n &gt; string\n\n Field length [255]:\n &gt; 100\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/Movie.php\n\n Add another property? Enter the property name (or press &lt;return&gt; \n to stop adding fields):\n &gt; releaseDate \n\n Field type (enter ? to see all types) [string]:\n &gt; date\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/Movie.php\n\n Add another property? Enter the property name (or press &lt;return&gt; \n to stop adding fields):\n &gt; overview\n\n Field type (enter ? to see all types) [string]:\n &gt; text\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/Movie.php\n\n Add another property? Enter the property name (or press &lt;return&gt; \n to stop adding fields):\n &gt; \n\n Success! \n\nNext: When you're ready, create a migration with php bin/console make:migration\n</code></pre> <p>Com a resultat, es generar\u00e0 una classe <code>Movie</code> dins de la carpeta <code>src/Entity</code>. El codi queda com segueix:</p> <p><pre><code>/**\n * @ORM\\Entity(repositoryClass=MovieRepository::class)\n */\nclass Movie\n{\n/**\n     * @ORM\\Id\n     * @ORM\\GeneratedValue\n     * @ORM\\Column(type=\"integer\")\n     */\nprivate $id;\n/**\n     * @ORM\\Column(type=\"string\", length=100)\n     */\nprivate $title;\n/**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     */\nprivate $tagline;\n/**\n     * @ORM\\Column(type=\"string\", length=100)\n     */\nprivate $poster;\n/**\n     * @ORM\\Column(type=\"text\")\n     */\nprivate $overview;\n/**\n     * @ORM\\Column(type=\"date\")\n     */\nprivate $releaseDate;\npublic function getId(): ?int\n{\nreturn $this-&gt;id;\n}\npublic function getTitle(): ?string\n{\nreturn $this-&gt;title;\n}\npublic function setTitle(string $title): self\n{\n$this-&gt;title = $title;\nreturn $this;\n}\npublic function getTagline(): ?string\n{\nreturn $this-&gt;tagline;\n}\npublic function setTagline(?string $tagline): self\n{\n$this-&gt;tagline = $tagline;\nreturn $this;\n}\npublic function getPoster(): ?string\n{\nreturn $this-&gt;poster;\n}\npublic function setPoster(string $poster): self\n{\n$this-&gt;poster = $poster;\nreturn $this;\n}\npublic function getOverview(): ?string\n{\nreturn $this-&gt;overview;\n}\npublic function setOverview(string $overview): self\n{\n$this-&gt;overview = $overview;\nreturn $this;\n}\npublic function getReleaseDate(): ?\\DateTimeInterface\n{\nreturn $this-&gt;releaseDate;\n}\npublic function setReleaseDate(\\DateTimeInterface $releaseDate): self\n{\n$this-&gt;releaseDate = $releaseDate;\nreturn $this;\n}\n}\n</code></pre> Com podem observar, el camp <code>id</code> que us\u00e0vem en la nostra base de dades de prova (el servei creat a tal efecte) l'hem reempla\u00e7at per un camp enter   que es genera autom\u00e0ticament com a clau principal de la classe. Per tant, nom\u00e9s hem hagut d'especificar el t\u00edtol, l'esl\u00f2gan, la sinopsi, la data d'estrena i el p\u00f2ster.</p> <p>Quant als tipus de dades que podem especificar, si premem <code>?</code> i <code>Intro</code> quan especifique el tipus de dada, veurem un llistat complet dels tipus disponibles (tamb\u00e9 ho podeu consultar ac\u00ed). L'habitual ser\u00e0 treballar amb cadenes de text d'una longitud determinada (string), textos il\u00b7limitats (text), enters (integer), booleans (boolean), reals (float), dates (timestamp o datetime, depenent del que vulguem emmagatzemar)...</p> <p>Repositori associat a l'entitat</p> <p>En crear l'entitat mitjan\u00e7at l'ordre <code>make:entity</code> \u00e9s crea tamb\u00e9 un repositori associat, que es vincula mitjan\u00e7ant el par\u00e0metre <code>repositoryClass</code> de la anotaci\u00f3 <code>@ORM\\Entity</code>.</p> <pre><code>/**\n* @ORM\\Entity(repositoryClass=MovieRepository::class)\n* /\n</code></pre>"},{"location":"08-symfony/05-doctrine/#generacio-de-lesquema","title":"Generaci\u00f3 de l'esquema","text":"<p>Una vegada hem definit l'entitat, podem generar la corresponent taula en la base de dades. Per a a\u00e7\u00f2, escrivim aquest comando:</p> <pre><code>php bin/console make:migration\n</code></pre> <p>El que fa aquest comando \u00e9s aplicar els canvis entre el nostre model d'entitats i l'esquema de la base de dades, i generar un arxiu PHP que s'encarregar\u00e0 de bolcar aqueixos canvis a la base de dades. Per consola se'ns informar\u00e0 d'on est\u00e0 aquest arxiu perqu\u00e8 ho comprovem (estar\u00e0 en la carpeta <code>src/Migrations</code>), i si tot \u00e9s correcte, executant aquest altre comando es reflectiran els canvis en la base de dades:</p> <pre><code>php bin/console doctrine:migration:migrate\n</code></pre> <p>Com podem comprovar, cada atribut de la nostra entitat <code>Movie</code> es correspon amb un camp del mateix nom en la taula <code>movie</code>.</p> <p></p> <p>Conv\u00e9 esmentar tamb\u00e9 que aquest \u00faltim comando executar\u00e0 tots els arxius de migraci\u00f3 que encara no s'hagen migrat efectivament a la base  de dades, per la qual cosa si hi ha algun que no vulguem migrar (perqu\u00e8 s'haja generat equivocadament, per exemple), haurem d'eliminar-la abans.</p>"},{"location":"08-symfony/05-doctrine/#editar-entitats","title":"Editar entitats","text":"<p>Qu\u00e8 passa si, despr\u00e9s de crear una entitat, volem modificar la seua estructura? Podem editar la classe de l'entitat manualment per a afegir, modificar o esborrar camps, per\u00f2 tamb\u00e9 podem tornar a executar el comando <code>make:entity</code>, indicar el mateix nom de classe que volem modificar, i especificar els nous camps que vulguem afegir (en el cas que el que vulguem siga afegir camps).</p> <p>Despr\u00e9s de definir els canvis en la(s) entitat(s) desitjada(es), haurem de generar una nova migraci\u00f3 amb els comandos vistos en el subapartat anterior.</p>"},{"location":"08-symfony/05-doctrine/#establir-altres-claus-primaries","title":"Establir altres claus prim\u00e0ries","text":"<p>Per defecte, hem vist que Doctrine agrega un camp <code>id</code> a les entitats, que \u00e9s autonum\u00e9ric i actua com a clau prim\u00e0ria. En el cas que no vulguem que siga aix\u00ed, i preferim triar un altre camp no autonum\u00e8ric com a clau prim\u00e0ria, hem de seguir aquests passos:</p> <ul> <li>Eliminar l'atribut <code>id</code> i el seu <code>getter</code> corresponent de l'entitat.</li> <li>Afegir la seg\u00fcent anotaci\u00f3 a l'atribut que h\u00e0gem triat com a clau prim\u00e0ria: </li> </ul> <p><pre><code> /**\n   * @ORM\\Id()\n   * ...\n */\nprivate $fieldName\n</code></pre> En el cas que siga una clau prim\u00e0ria composta per m\u00e9s d'un camp, haurem d'afegir aquesta anotaci\u00f3 en cada camp que forme part de la clau prim\u00e0ria.</p>"},{"location":"08-symfony/05-doctrine/#operacions-contra-la-base-de-dades","title":"Operacions contra la base de dades","text":"<p>Ara que ja hem vist com definir entitats simples, vegem com fer operacions amb elles, tals com a insercions, esborrats, modificacions i consultes. Per a realitzar aquestes operacions, ens valdrem d'un objecte molt important en Doctrine, el seu entity manager, a trav\u00e9s del que farem les insercions, esborrats, etc. Tamb\u00e9 utilitzarem el repositori de l'entitat corresponent, per a realitzar les cerques.</p>"},{"location":"08-symfony/05-doctrine/#inserir-objectes","title":"Inserir objectes","text":"<p>Si volem afegir objectes nous a la nostra base de dades, n'hi ha prou que creem un objecte de l'entitat corresponent en el m\u00e8tode oport\u00fa, i cridem al m\u00e8tode <code>persist</code> i <code>flush</code> de l'entity manager de Doctrine.</p> <p>Per exemple, per a provar, crearem un controlador en la nostra classe <code>MovieController</code> associat a una ruta <code>/movies/create</code>, que de moment ser\u00e0 de proves fins que fem un formulari d'inserci\u00f3. Dins d'aquest m\u00e8tode, crearem un objecte <code>Movie</code> amb dades prefixades, obtenim l'entity manager de Doctrine i persistim l'objecte:</p> <pre><code>/**\n* @Route(\"/movies/create\", name=\"movies_create\")\n*/\npublic function create()\n{\n$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$movie = new Movie();\n$movie-&gt;setTitle(\"Ava\");\n$movie-&gt;setOverview(\"A black ops assassin is forced to fight for her \n        own survival after a job goes dangerously wrong.\");\n$movie-&gt;setReleaseDate(new DateTime(\"2020-09-25\"));\n$movie-&gt;setPoster(\"noposter.jpg\");\n...\n$entityManager-&gt;persist($movie);\n$entityManager-&gt;flush();\nreturn new Response(\"The movie with id \" . $movie-&gt;getId(). \n\" has been inserted successfully!\" );\n}\n</code></pre> <p>Si accedim des del navegador a <code>movies-symfony/movies/create</code> podrem veure el resultat en la taula <code>movie</code> de la nostra base de dades:</p> <p>\u00c9s important recalcar que la cridada <code>persist</code> per si sola no actualitza la base de dades, sin\u00f3 que indica que es vol persistir l'objecte indicat. \u00c9s la crida a <code>flush</code> la que fa efectiva aqueixa persist\u00e8ncia.</p>"},{"location":"08-symfony/05-doctrine/#detectant-errors-en-la-insercio","title":"Detectant errors en la inserci\u00f3","text":"<p>Si ocorre algun error en la inserci\u00f3 (per exemple, perqu\u00e8 algun camp \u00e9s nul i no puga ser-ho, o perqu\u00e8 es duplica la clau prim\u00e0ria), es provocar\u00e0 una excepci\u00f3 en cridar al m\u00e8tode <code>flush</code>. Podem tractar aquest error simplement capturant l'excepci\u00f3 i generant la resposta apropiada:</p> <pre><code>$entityManager-&gt;persist($object);\ntry\n{\n$entityManager-&gt;flush();\nreturn new Response(\"Object inserted\");\n} catch (Exception $e) {\nreturn new Response(\"Error inserting objects\");\n}\n</code></pre>"},{"location":"08-symfony/05-doctrine/#obtenir-objectes","title":"Obtenir objectes","text":"<p>A l'hora d'obtenir objectes d'una taula, existeixen diferents m\u00e8todes que podem emprar. Per exemple:</p> <ul> <li>El m\u00e8tode <code>find</code> localitza l'objecte per la clau prim\u00e0ria (normalment     l'<code>id</code>) que se li passa com a par\u00e0metre. Aix\u00ed cercar\u00edem la pel\u00b7l\u00edcula     amb id 1: <code>$movie = $repositori-&gt;find(1)</code>;</li> <li>El m\u00e8tode <code>findOneBy</code> localitza un objecte que complisca els criteris     de cerca passats com a par\u00e0metre. Aix\u00ed cercar\u00edem la pel\u00b7l\u00edcula el t\u00edtol     del qual siga \"Ava\":      <pre><code>$movie = $repositori-&gt;findOneBy([\"title\" =&gt; \"Ava\"]); \n</code></pre>     En el cas     de voler definir m\u00e9s criteris de cerca, es passarien un darrere       l'altre en l'array, separats per comes.</li> <li>El m\u00e8tode <code>findBy</code> localitza tots els objectes que complisquen els     criteris de cerca passats com a par\u00e0metre. Aquesta instrucci\u00f3 \u00e9s com     l'anterior, per\u00f2 retorna un array de pel\u00b7l\u00edcules amb tots els     resultats coincidents (en el cas que hi haja un sol resultat,     retorna un array d'un element):     <pre><code> $movies = $repositori-&gt;findBy([\"title\" =&gt; \"Ava\"]);\n</code></pre></li> <li>El m\u00e8tode <code>findAll</code> (sense par\u00e0metres), obt\u00e9 tots els objectes de la     col\u00b7lecci\u00f3.      <pre><code>$movies = $repositori-&gt;findAll();\n</code></pre></li> </ul> <p>Tots aquests m\u00e8todes s'obtenen a partir d'un repositori de la classe, que ve a ser alguna cosa aix\u00ed com un assistent que ens ajuda a obtenir objectes que pertanguen a aqueixa classe.</p> <p>Vegem un exemple amb la nostra classe <code>MovieController</code>, modificarem el nostre m\u00e8tode <code>show</code> perqu\u00e8, en lloc de cercar en la base de dades de prova que hem vingut emprant en sessions anteriors, cerque per <code>id</code> en la base de dades real. Per a a\u00e7\u00f2, obtenim el repositori de la nostra  classe <code>Movie</code> i cerquem (find) la pel\u00b7l\u00edcua amb l'identificador que hem rebut com a par\u00e0metre:</p> <pre><code>    /**\n     * @Route(\"/movies/{id}\", name=\"movies_show\", requirements={\"id\"=\"\\d+\"})\n     */\npublic function show(int $id)\n{\n$movieRepository = $this-&gt;getDoctrine()-&gt;getRepository(Movie::class);\n$movie = $movieRepository-&gt;find($id);\nif ($movie)\n{\nreturn $this-&gt;render('movies_show.html.twig', [\"movie\"=&gt;$movie]\n);\n}\nelse\nreturn $this-&gt;render('movies_show.html.twig', [\n'movie' =&gt; null]\n);\n}\n</code></pre>"},{"location":"08-symfony/05-doctrine/#consultes-mes-avancades","title":"Consultes m\u00e9s avan\u00e7ades","text":"<p>Amb els m\u00e8todes de consulta anteriors podem realitzar consultes que es limiten a comprovar si un o diversos camps d'un objecte s\u00f3n iguals a uns criteris de cerca determinats. Per\u00f2, com podr\u00edem, per exemple, cercar les pel\u00b7l\u00edcules el t\u00edtol dels quals continga un cert text, o les pel\u00b7licules estrenades en un per\u00edode determinat? Per a aquest tipus de consultes, necessitem ampliar el repositori de la nostra entitat.</p> <p>Per exemple, per a la nostra entitat <code>Movie</code>, imaginem que volem cercar les pel\u00b7l\u00edcules el t\u00edtol dels quals coincideix en un cert text. Per a aconseguir a\u00e7\u00f2, necessitem editar el repositori de l'entitat, que est\u00e0 en <code>src/Repository/MovieRepository.php</code>. Aquest arxiu cont\u00e9 comentats un parell de m\u00e8todes de prova que podr\u00edem definir per a ampliar les capacitats de l'entitat.</p> <p>En el nostre cas, afegirem un m\u00e8tode que s'encarregar\u00e0 d'obtenir les pel\u00b7l\u00edcules el t\u00edtol o la sinopsi dels quals continga un text determinat que li passem com a par\u00e0metre: <pre><code>    /**\n      * @return Movie[] Returns an array of Movie objects \n     */\npublic function filterByText(string $text): array\n{\n$qb = $this-&gt;createQueryBuilder('m')\n-&gt;orWhere('m.title LIKE :value')\n-&gt;orWhere('m.overview LIKE :value');\n$qb-&gt;setParameter('value', \"%\".$text.\"%\");\n$qb-&gt;orderBy('m.title', 'ASC');\n$query = $qb-&gt;getQuery();\nreturn $query-&gt;getResult();\n}\n</code></pre> Emprem el query builder de Doctrine per a construir la consulta amb aqueixa sintaxi espec\u00edfica. En primer lloc, definim un element que hem cridat <code>m</code> (de <code>Movie</code>) que usarem per a referenciar les propietats de les pel\u00b7l\u00edcules, per exemple, en la cl\u00e0usula <code>where</code>. El que ve a fer aquest codi \u00e9s cercar aquelles pel\u00b7l\u00edcules <code>m</code> el t\u00edtol de les quals coincideixca amb el par\u00e0metre <code>text</code>, i a continuaci\u00f3 espec\u00edfica que aquest par\u00e0metre <code>text</code> \u00e9s igual al par\u00e0metre que rebem en el m\u00e8tode, tancat entre s\u00edmbols '%', per a indicar que \u00e9s igual el que hi haja davant o darrere del text.</p> <p>Ara, ja podr\u00edem utilitzar aquest m\u00e8tode des d'on ho necessitem. Per exemple, podem modificar el m\u00e8tode <code>filter</code> de <code>MovieController</code> perqu\u00e8 cerque pel\u00b7l\u00edcules per t\u00edtol emprant aquest nou m\u00e8tode:</p> <p><pre><code>    /**\n     * @Route(\"/movies/{text}\", name=\"movies_filter\")\n     */\npublic function filter(string $text)\n{\n$movieRepository = $this-&gt;getDoctrine()-&gt;getRepository(Movie::class);\n$movies = $movieRepository-&gt;findByTitle($text);\nreturn $this-&gt;render('movies_filter.html.twig', array(\n'movies' =&gt; $movies\n));        \n}\n</code></pre> Si, per exemple, volgu\u00e9rem cercar per una propietat num\u00e8rica (per exemple, persones l'edat de les quals siga major que una donada), usar\u00edem una sintaxi com aquesta (tamb\u00e9 molt similar a SQL):</p> <pre><code>$qb = $this-&gt;createQueryBuilder('p') \n-&gt;andWhere('p.edat &gt; :edat')\n-&gt;setParameter('edat', $edat)\n-&gt;getQuery();\n</code></pre> <p>Alternativament, tamb\u00e9 podem emprar un llenguatge anomenat DQL (Doctrine Query Language) per a realitzar la consulta anterior:</p> <pre><code>    $entityManager = $this-&gt;getEntityManager();\n$query = $entityManager-&gt;createQuery('SELECT m FROM App\\Movie m WHERE m.title LIKE\n    :text' )-&gt;setParameter('text', '%'. $text. '%');\nreturn $query-&gt;execute();\n</code></pre> <p>I, com a tercera via, tamb\u00e9 podem emprar SQL est\u00e0ndard, per\u00f2 en aquest cas el que obtindr\u00edem ja no seria un array d'objectes, sin\u00f3 un array de registres, com si empr\u00e0rem la llibreria PDO de PHP per a accedir a la base de dades.</p> <p>Ac\u00ed teniu enlla\u00e7os per a consultar informaci\u00f3 addicional tant de Query Builder  com del llenguatge DQL.</p>"},{"location":"08-symfony/05-doctrine/#actualitzar-i-esborrar-objectes","title":"Actualitzar i esborrar objectes","text":""},{"location":"08-symfony/05-doctrine/#actualitzar-objectes","title":"Actualitzar objectes","text":"<p>Per a actualitzar un objecte en una base de dades, hem de seguir tres passos:</p> <ol> <li>Obtenir l'objecte de la base de dades (t\u00edpicament fent un find per     la seua clau prim\u00e0ria)</li> <li>Modificar les dades necess\u00e0ries amb els respectius setters de     l'objecte</li> <li>Fer un flush per a actualitzar els canvis en la base de dades.</li> </ol> <p>Si, per exemple, volgu\u00e9rem actualitzar les dades de la pel\u00b7l\u00edcula amb <code>id</code> = 1, far\u00edem a\u00e7\u00f2:</p> <pre><code>    $entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$repository = $this-&gt;getDoctrine()-&gt;getRepository(Movie::class); \n$movie = $repository-&gt;find(1);\nif ($movie) {\n$movie-&gt;setTitle(\"Updated movie\");\n$entityManager-&gt;flush(); \n}\n</code></pre>"},{"location":"08-symfony/05-doctrine/#esborrar-objectes","title":"Esborrar objectes","text":"<p>L'esborrat d'objectes \u00e9s similar a l'actualitzaci\u00f3: hem d'obtenir l'objecte tamb\u00e9, per\u00f2 despr\u00e9s cridem al m\u00e8tode <code>remove</code> per a esborrar-lo, i finalment a <code>flush</code>. Aix\u00ed esborrar\u00edem la pel\u00b7l\u00edcula amb id 1</p> <p><pre><code>$entityManager =$this-&gt;getDoctrine()-&gt;getManager();\n$repository = $this-&gt;getDoctrine()-&gt;getRepository(Movie::class); \n$movie = $repository-&gt;find(1);\nif ($movie) { \n$entityManager-&gt;remove($movie);\n$entityManager-&gt;flush(); \n}\n</code></pre> Novament, tant en l'actualitzaci\u00f3 com en l'esborrat, el m\u00e8tode <code>flush</code> pot provocar una excepci\u00f3 si l'operaci\u00f3 no ha pogut dur-se a terme. Hem de tenir-ho en compte per a capturar-la i generar la resposta oportuna.</p>"},{"location":"08-symfony/05-doctrine/#relacions-entre-entitats","title":"Relacions entre entitats","text":"<p>Fins ara les operacions que hem fet s'han centrat en una \u00fanica taula o entitat (l'entitat/taula de pel\u00b7l\u00edcules en l'exemple de les anotacions).  Vegem ara com podem treballar amb m\u00e9s d'una taula/entitat que estiguen relacionades entre s\u00ed.</p> <p>Existeixen dos tipus principals de relacions entre entitats:</p> <ul> <li>Molts a un: en aquest tipus s'englobarien les relacions \"un a     molts\", \"molts a un\" i \"un a un\", ja que en qualsevol dels tres     casos, la relaci\u00f3 es reflecteix afegint una clau ajeno en una de les     dues entitats que referencie a l'altra.</li> <li>Molts a molts: en aquest tipus de relacions, es necessita d'una     taula addicional per a reflectir la relaci\u00f3 entre les entitats.</li> </ul> <p>Anem a definir una relaci\u00f3 molts a un en la nostra base de dades de pel\u00b7l\u00edcules. Per a a\u00e7\u00f2, anem a crear primer una entitat anomenada <code>Genre</code>, que nom\u00e9s continga un id autoincremental i un nom (string):</p> <p><pre><code>php bin/console make:entity\n\nClass name of the entity to create or update (i.g.\u00a0AgreeableGnome):\n&gt;Genre\n\ncreated: src/Entity/Genre.php\ncreated: src/Repository/GenreRepository.php\n\nNew property name (press to stop adding fields):\n&gt;name\n\nField type (enter? to see all types) [string]:\n&gt;string\n\nField length [255]:\n&gt;255\n\nCan this field be null in the database (nullable) (yes/no) [no]:\n&gt;no\n\nupdated: src/Entity/Genre.php\n\nAdd another property? Enter the property name (or press to stop adding\nfields):\n\nSuccess!\n</code></pre> Despr\u00e9s de generar la nova entitat, crearem la corresponent taula en la base de dades a trav\u00e9s de la migraci\u00f3.</p> <pre><code>php bin/console make:migration\n\nphp bin/console doctrine:migration:migrate\n</code></pre> <p>Ara, anem a fer que les pel\u00b7l\u00edcules tinguen un g\u00e8nere associat. Per a a\u00e7\u00f2, editem l'entitat <code>Movie</code> i li afegim un nou camp, anomenat g\u00e8nere, que ser\u00e0 de tipus relaci\u00f3 molts a un (una pel\u00b7l\u00edcula pertanyer\u00e0 a una categoria, i un g\u00e8nere pot tenir moltes pel\u00b7l\u00edcules).</p> <pre><code>php bin/console make:entity\n\nClass name of the entity to create or update (i.g.\u00a0DeliciousPuppy):\n&gt; Movie\nYour entity already exists! So let's add some new fields!\n\nNew property name (press to stop adding fields):\n&gt;genre\n\nField type (enter? to see all types) \\[string\\]:\n&gt;relation\n\nWhat class should this entity be related to?:\n&gt;Genre\n\nWhat type of relationship is this?\n---------------------------------------------------------------------\nType        Description\n---------------------------------------------------------------------\nManyToOne   Each Movie relates to (has) one Genre.\n            Each Genre can relate/has to (have) many Movie objects\n\nOneToMany   Each Movie can relate to (have) many Genre objects.\n            Each Genre relates to (has) one Movie\n\nManyToMany  Each Movie can relate to (have) many Genre objects.\n            Each Prov\u00edncia can also relate to (have) many Contacte objects\n\nOneToOne    Each Movie relates to (has) exactly one Genre.\n            Each Genre also relates to (has) exactly one Movie.\n\nRelation type? [ManyToOne, OneToMany, ManyToMany, OneToOne]:\n&gt; ManyToOne\n\nIs the Movie.genre property allowed to be null (nullable)?\n(yes/no) [yes]:\n&gt; no\n\nDo you want to add a new property to Genre so that you can\naccess/update Movie objects from it - i.g.\u00a0$genre-\\&gt;getMovies()? (yes/no) [yes]:\n&gt;no\n\nupdated: src/Entity/Movie.php\n\nAdd another property? Enter the property name (or press to stop adding\nfields):\n\nSuccess!\n</code></pre> <p>Com pot veure's, a l'hora de triar el tipus de camp, indiquem que \u00e9s una relaci\u00f3 (relation), en aquest cas ens demana indicar a quina entitat est\u00e0 vinculada (Genre, en aquest cas), i quin tipus de relaci\u00f3 \u00e9s (ManyToOne en el nostre cas, per\u00f2 podem triar qualsevol de les altres tres opcions OneToMany, OneToOne o ManyToMany). Tamb\u00e9 podem comprovar que l'assistent ens pregunta si volem afegir un camp en l'altra entitat perqu\u00e8 la relaci\u00f3 siga bidireccional (\u00e9s a dir, perqu\u00e8 des d'un objecte de qualsevol de les dues entitats puguem consultar el/els objecte(s) associat(s) de l'altra. En aquest cas indiquem que no per a simplificar el codi.</p> <p>Important</p> <p>Cal tenir en compte que si la taula <code>movie</code> ja t\u00e9 pel\u00b7l\u00edcules, i a l'hora de crear la clau aliena decidim que no puga tenir valors nuls tindrem  problemes, ja que fallar\u00e0 la integritat referencial. </p> <p>Hi ha diverses solucions com crear un g\u00e8nere amb id 0 o indicar que  la clau aliena <code>genre</code> s\u00ed pot contenir valors nuls. I despr\u00e9s, canviar-ho.</p> <p>Despr\u00e9s d'aquests canvis, realitzem de nou la migraci\u00f3, i ja tindrem el nou camp afegit en la nostra entitat <code>Movie</code> i a la taula <code>movie</code> de la base de dades:</p> <pre><code>/**\n* @ORM\\ManyToOne(targetEntity=\"App\\Entity\\Genre\")\n* @ORM\\JoinColumn(nullable=false)\n*/\n</code></pre>"},{"location":"08-symfony/05-doctrine/#treballar-amb-entitats-relacionades","title":"Treballar amb entitats relacionades","text":"<p>Ara que ja sabem relacionar entitats entre s\u00ed. Com podem inserir una entitat que dep\u00e8n d'una altra, o accedir a les dades d'una entitat des de l'altra?</p>"},{"location":"08-symfony/05-doctrine/#insercio-dentitats-relacionades","title":"Inserci\u00f3 d'entitats relacionades","text":"<p>Per exemple, si volgu\u00e9rem inserir un pel\u00b7l\u00edcula assignant-li un g\u00e8nere:</p> <ul> <li> <p>Si el g\u00e8nere no existeix, crearem un objecte de tipus     Genre, i despr\u00e9s un altre de tipus Movie, establint com a     <code>genre</code> l'objecte <code>Genre</code> recentment creat: </p> <pre><code>$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$genre = new Genre();\n$genre-&gt;setName(\"Western\");\n$movie = new Movie();\n$movie-&gt;setTitle(\"A test title\");\n$movie-&gt;setTagline(\"A test tagline\");\n$movie-&gt;setReleaseDate(new \\DateTime());\n$movie-&gt;setPoster-&gt;setPoster(\"noposter.jpg\");\n$movie-&gt;setOverview-&gt;setOverview(\"A test overview\");\n$movie-&gt;setGenre($genre);\n$entityManager-&gt;persist($genre);\n$entityManager-&gt;persist($movie);\n$entityManager-&gt;flush();\n</code></pre> </li> <li> <p>Si el g\u00e8nere s\u00ed existeix, el recuperem de la base de dades (amb     algun m\u00e8tode <code>find</code> o similar) i despr\u00e9s crearem crear l'objecte      Movie i li assignem aqueix objecte Genre: </p> <pre><code>$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$repositori = $this-&gt;getDoctrine()-&gt;getRepository(Genre::class);\n$genre = $repository-&gt;find(1);\n$movie = new Movie();\n$movie-&gt;setTitle(\"A test title\");\n$movie-&gt;setTagline(\"A test tagline\");\n$movie-&gt;setReleaseDate(new \\DateTime());\n$movie-&gt;setPoster-&gt;setPoster(\"noposter.jpg\");\n$movie-&gt;setOverview-&gt;setOverview(\"A test overview\");\n$movie-&gt;setGenre($genre);\n$entityManager-&gt;persist($genre);\n$entityManager-&gt;persist($movie);\n$entityManager-&gt;flush();\n</code></pre> </li> </ul>"},{"location":"08-symfony/05-doctrine/#obtenir-entitats-relacionades","title":"Obtenir entitats relacionades","text":"<p>En el cas que recuperem una entitat que est\u00e0 relacionada amb una altra, l'acc\u00e9s a aqueixa altra entitat \u00e9s immediat des de la primera. Per exemple, si volgu\u00e9rem saber el nom del g\u00e8nere d'una pel\u00b7l\u00edcula amb id 1, far\u00edem alguna cosa aix\u00ed:</p> <pre><code>$repositori = $this-&gt;getDoctrine()-&gt;getRepository(Movie::class);\n$movie = $repositori-&gt;find(1); \n$genreName = $movie-&gt;getGenre()-&gt;getName();\n</code></pre> <p>En qualsevol cas, \u00e9s important recalcar que Doctrine no recupera les dades de l'entitat relacionada (la prov\u00edncia, en aquest cas), fins que es demanen efectivament (\u00e9s a dir, fins que no preguntem pel nom del genre,  Doctrine no tracta d'obtenir l'objecte Genre complet). Aquesta estrat\u00e8gia de recuperaci\u00f3 d'entitats relacionades s'anomena lazy loading o c\u00e0rrega diferida.</p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/","title":"Generaci\u00f3 de formularis i validaci\u00f3 de dades","text":""},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#generacio-de-formularis","title":"Generaci\u00f3 de formularis","text":"<p>Fins a aquesta sessi\u00f3 hem apr\u00e8s alguns conceptes \u00fatils de Symfony i alguns dels seus bundles m\u00e9s destacats, com per exemple la generaci\u00f3 de vistes amb el motor de plantilles Twig, el desenvolupament de serveis, o la comunicaci\u00f3 amb la base de dades a trav\u00e9s de l'ORM Doctrine. Hem fet alguns controladors d'exemple per a cercar dades, o per a inserir. Per\u00f2, en aquest \u00faltim cas, al no disposar encara d'un mecanisme perqu\u00e8 s'envien dades d'inserci\u00f3 des del client, hem optat ara com ara per inserir unes dades prefixades, \u00e9s a dir, una pel\u00b7l\u00edcula amb unes dades  ja predefinides en el codi.</p> <p>En aquesta sessi\u00f3 veurem de quina forma es poden definir formularis en Symfony associats a una determinada entitat, perqu\u00e8 el que s'envie en el formulari s'associe a un objecte d'aquesta entitat, i perqu\u00e8 puguem pre\u00adcarregar el formulari amb les dades d'una entitat ja existent, amb la finalitat de poder-los modificar.</p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#creacio-del-formulari-en-el-controlador","title":"Creaci\u00f3 del formulari en el controlador","text":"<p>Els formularis poden crear-se f\u00e0cilment des de qualsevol controlador. N'hi ha prou que creem o obtinguem l'objecte associat al formulari (per exemple, una pel\u00b7l\u00edcula), i carreguem un formulari amb ell. En la nostra aplicaci\u00f3 de pel\u00b7l\u00edcules, anem a crear un nou controlador que responga a la URI <code>/movies/create</code>, i que cree una pel\u00b7l\u00edcula buida i la mostre al formulari.</p> <p><pre><code>namespace App\\Controller;\n...\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType;\nclass MovieController extends AbstractController\n{\n...\n/**\n* @Route(\"/movies/create\", name=\"movies_create\")\n*/\npublic function create()\n{\n$movie = new Movie();\n$form = $this-&gt;createFormBuilder($movie)\n-&gt;add('title', TextType::class)\n-&gt;add('overview', TextareaType::class)\n-&gt;add('releaseDate', DateType::class)\n-&gt;add('poster', TextType::class)\n-&gt;add('create', SubmitType::class, array('label' =&gt; 'Create'))\n-&gt;getForm();\nreturn $this-&gt;render('create.html.twig', array(\n'form' =&gt; $form-&gt;createView()));\n}\n...\n</code></pre> Com podem veure, a trav\u00e9s del form builder de Symfony es crea el formulari. Despr\u00e9s, afegim tants camps com a atributs tinga l'entitat (normalment), associant cada atribut amb el seu camp pel nom.</p> <p>En cada camp especifiquem tamb\u00e9 de quin tipus \u00e9s. En el nostre cas, hem definit tres quadres de text (<code>TextType</code>) per al t\u00edtol, l'eslogan i el poster,  un camp de data (<code>DateType</code>) per a la data de l'estrena, un camp (<code>TextareaType</code>) per  a la sinopsi i un bot\u00f3 de submit (<code>SubmitType</code>) per a poder enviar el formulari. Podeu consultar en Form Types Reference  un llistat m\u00e9s detallat dels tipus de camps que tenim disponibles. Alguns que poden resultar-nos interessants s\u00f3n:</p> <ul> <li><code>TextType</code> (quadres de text d'una sola l\u00ednia, com l'exemple     anterior)</li> <li><code>TextareaType</code> (quadres de text de diverses l\u00ednies)</li> <li><code>EmailType</code> (quadres de text de tipus email)</li> <li><code>IntegerType</code> (quadres de text per a nombres enters)</li> <li><code>NumberType</code> (quadres de text per a nombres en general)</li> <li><code>PasswordType</code> (quadres emmascarats per a passwords)</li> <li><code>EntityType</code> (desplegables per a triar valors vinculats a una altra     entitat)</li> <li><code>DateType</code> (per a dates)</li> <li><code>CheckboxType</code> (per a checkboxes)</li> <li><code>RadioType</code> (per a botons de radi o radi buttons)</li> <li><code>HiddenType</code> (per a controls ocults)</li> <li>... etc.</li> </ul>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#etiquetes-personalitzades","title":"Etiquetes personalitzades","text":"<p>Com podem veure per al cas del bot\u00f3 de submit, podem especificar un tercer par\u00e0metre en el m\u00e8tode <code>add</code> que \u00e9s un array de propietats del control en q\u00fcesti\u00f3. Una d'elles \u00e9s la propietat <code>label</code>, que ens permet especificar quin text tindr\u00e0 associat el control. Per defecte, s'associa el nom de l'atribut corresponent en l'entitat, per\u00f2 podem canviar-ho per un text personalitzat. Per a l'i\u00admail, per exemple, podr\u00edem posar:</p> <pre><code>    -&gt;add('email', EmailType::class, array('label' =&gt; 'Correu\n        electr\u00f2nic'))\n</code></pre>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#millorant-el-nostre-formulari","title":"Millorant el nostre formulari","text":"<p>Aprofitant la varietat de tipus de camps que ofereix Symfony, anem a millorar una mica el nostre formulari:</p> <ul> <li>Per al g\u00e8nere que afeg\u00edrem en la sessi\u00f3 de     Doctrine, podem emprar un EntityType que prenga les seues dades de     l'entitat <code>Genre</code>.</li> </ul> <p>Amb a\u00e7\u00f2, el formulari quedaria aix\u00ed:</p> <pre><code>   -&gt;add('genre', EntityType::class, ['class' =&gt;\nGenre::class, 'choice_label' =&gt; 'name']) ...\n</code></pre>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#renderitzant-el-formulari","title":"Renderitzant el formulari","text":"<p>El codi del controlador anterior acaba renderitzant una vista cridada <code>create.html.twig</code> que, ara com ara, no existeix. En aquesta vista haurem de renderizar el formulari. Podria quedar-se aix\u00ed:</p> <pre><code>{% extends 'base.html.twig' %}\n{% block title %}Movies{% endblock %}\n{% block body %}\n&lt;h1&gt;New Movie&lt;/h1&gt;\n{{ form_start(form) }}\n{{ form_widget(form) }}\n{{ form_end(form) }}\n{% endblock %}\n</code></pre> <p>Les tres l\u00ednies sota l'encap\u00e7alat h1 s\u00f3n les responsables de la renderizaci\u00f3n del formulari, a partir del par\u00e0metre <code>form</code> que  li passem des del controlador.</p> <p>Si ara accedim a <code>http://movies-symfony/movies/create</code> podrem veure el formulari:</p> <p></p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#emplenant-els-camps-del-formulari","title":"Emplenant els camps del formulari","text":"<p>Tornem al nostre nou controlador. Si constru\u00efm un objecte farcit amb dades, veurem cada dada en el seu camp associat:</p> <pre><code>public function create()\n{\n$movie = new Movie();\n$movie-&gt;setTitle(\" Groundhog Day\");\n$movie-&gt;setTagline(\"He\u2019s having the worst \n        day of his life \u2026 over, and over \u2026\");      \n$movie-&gt;setReleaseDate(new \\DateTime(\"1993-05-07\"));\n$form = $this-&gt;createFormBuilder($movie)\n...\n</code></pre>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#enviament-de-formularis","title":"Enviament de formularis","text":"<p>Parlem ara sobre com enviar el formulari. Per defecte, si no s'indica gens, el formulari s'envia per POST a la mateixa URI que el genera (en el nostre cas, a <code>movies/create</code>. De fet, si intentem enviar el formulari en aquest moment, amb les dades que siguen, es tornar\u00e0 a carregar la vista del formulari, per\u00f2 no haurem inserit res.</p> <p>Per a gestionar l'enviament d'aquestes dades, cal fer algunes modificacions sobre el nostre controlador:</p> <ul> <li>En primer lloc, el controlador rebr\u00e0 un objecte <code>Request</code>, que     contindr\u00e0 les dades del formulari enviat (en el cas que s'haja     enviat)</li> <li>En segon lloc, dins del codi del controlador, hem de processar     aqueixes dades (si n'hi ha), validar-les (a\u00e7\u00f2 ho veurem a     continuaci\u00f3) i si s\u00f3n v\u00e0lides, realitzar la corresponent inserci\u00f3 o     modificaci\u00f3.</li> <li>Finalment, podem redirigir a una altra ruta en cas d'\u00e8xit, o tornar     a renderizar el formulari en cas d'error, o en cas que no s'haja     enviat (per exemple, quan carreguem el formulari per a emplenar-ho).</li> </ul> <p>Unint aquestes premisses, el nostre controlador quedaria aix\u00ed:</p> <p><pre><code># src/Controller/MovieController.php\n/**\n     * @Route(\"/movies/create\", name=\"movies_create\")\n     */\npublic function create(Request $request)\n{\n...\n$form-&gt;handleRequest($request);\nif ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) {\n$movie = $form-&gt;getData();\n$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$entityManager-&gt;persist($movie);\n$entityManager-&gt;flush();\nreturn $this-&gt;redirectToRoute('home');\n}\nreturn $this-&gt;render('movies_create.html.twig', array(\n'form' =&gt; $form-&gt;createView()));\n...\n}\n</code></pre> Si provem ara a carregar el formulari i realitzar una inserci\u00f3, ens enviar\u00e0 a la p\u00e0gina d'inici, i podrem veure la nova pel\u00b7l\u00edcula en la taula corresponent de la base de dades.</p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#modificacio-de-dades","title":"Modificaci\u00f3 de dades","text":"<p>El que hem fet en l'exemple anterior \u00e9s una inserci\u00f3 d'un nova pel\u00b7l\u00edcula, per\u00f2... com seria fer una modificaci\u00f3 de pel\u00b7l\u00edcula existent?. El funcionament seria molt similar, per\u00f2 amb un petit canvi: la ruta del controlador rebr\u00e0 com a par\u00e0metre l'identificador de la pel\u00b7l\u00edcula a modificar,  i a partir d'ac\u00ed, cercar\u00edem la pel\u00b7l\u00edcula i el carregar\u00edem en el formulari, incloent el seu <code>id</code> en un camp ocult. D'aquesta forma, en fer <code>persist</code> es modificaria la pel\u00b7l\u00edcula existent.</p> <p>Podem provar-ho amb aquest controlador:</p> <pre><code>  /**\n     * @Route(\"/movies/{id}/edit\", name=\"movies_edit\")\n     */\npublic function edit(int $id, Request $request)\n{\n$movieRepository = $this-&gt;getDoctrine()-&gt;getRepository(Movie::class);\n$movie = $movieRepository-&gt;find($id);\n$form = $this-&gt;createFormBuilder($movie)\n-&gt;add('id', HiddenType::class)\n-&gt;add('title', TextType::class)\n-&gt;add('tagline', TextType::class)\n-&gt;add('overview', TextareaType::class)\n-&gt;add('releaseDate', DateType::class,\n['widget' =&gt; \"single_text\"]\n)\n-&gt;add('poster', TextType::class)\n-&gt;add('genre', EntityType::class,\n['class' =&gt; Genre::class,\n'choice_label' =&gt; 'name',\n'placeholder' =&gt; 'Select a genre',\n]\n)\n-&gt;add('create', SubmitType::class, array('label' =&gt; 'Create'))\n-&gt;getForm();\n$form-&gt;handleRequest($request);\n...\n}\n</code></pre> <p>Veiem que el codi \u00e9s molt similar al de la inserci\u00f3, excepte pel par\u00e0metre id que rep el controlador amb el codi de la pel\u00b7l\u00edcula a editar, la cerca inicial d'aquesta pel\u00edcula en la base de dades, i el camp ocult <code>id</code> en el formulari.</p> <p>Recorda que Symfony ens proporciona la possibilitat de fer autowiring de  les entitats, afegint-les com a par\u00e0metres en lloc del seu <code>id</code>.</p> <p>Recorda afegir el corresponent use al principi perqu\u00e8 reconega la classe <code>HiddenType</code>.</p> <p>Ara, si accedim a <code>movies-symfony/movies/1/edit</code>, per exemple (suposant que tinguem una pel\u00b7l\u00edcula amb id = 1 en la base de dades), es carregar\u00e0 el formulari amb les seues dades, i en enviar-lo, es modificaran els camps que h\u00e0gem canviat, i es carregar\u00e0 la p\u00e0gina d'inici.</p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#validacio-de-formularis","title":"Validaci\u00f3 de formularis","text":"<p>Ara que ja sabem crear, enviar i gestionar formularis, vegem un \u00faltim pas, que seria la validaci\u00f3 de dades d'aquests formularis pr\u00e8via al seu enviament. En el cas de Symfony, la validaci\u00f3 no s'aplica al formulari, sin\u00f3 a l'entitat subjacent (\u00e9s a dir, a la classe <code>Movie</code>, en el nostre cas).</p> <p>Per tant, la validaci\u00f3 l'obtindrem afegint una s\u00e8rie de restriccions o comprovacions a aquestes classes. Per exemple, per a indicar que el t\u00edtol,  el poster i la data de l'estrena no poden estar buits, afegim aquestes anotacions en els atributs de la classe <code>Movie</code>:</p> <p><pre><code>#src/Entity/Movie.php\n...\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n/**\n * @ORM\\Entity(repositoryClass=MovieRepository::class)\n */\nclass Movie\n{   ...\n/**\n     * @ORM\\Column(type=\"string\", length=100)\n     * @Assert\\NotNull\n     */\nprivate $title;\n/**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     */\nprivate $tagline;\n/**\n     * @ORM\\Column(type=\"string\", length=100)\n     * @Assert\\NotNull\n     */\nprivate $poster;\n/**\n     * @ORM\\Column(type=\"date\")\n     * @Assert\\NotNull\n     */\nprivate $releaseDate;\n...\n</code></pre> Perqu\u00e8 aquestes assercions s'activen caldr\u00e0 desactivar la validaci\u00f3 en el client indicant que el formulari ha de tindre l'atribut <code>novalidate</code>:</p> <pre><code># templates/movies-create.html.twig\n\n{{ form_start(form, {attr: {'novalidate': 'novalidate'}}) }}\n</code></pre> <p><pre><code>Aquestes funcions de validaci\u00f3 admeten una s\u00e8rie de par\u00e0metres \u00fatils. Un\ndels m\u00e9s \u00fatils \u00e9s `message`, que s'empra per a determinar el missatge\nd'error que mostrar a l'usuari en cas que la dada no siga v\u00e0lida. Per\nexemple, per al t\u00edtol, podem especificar aquest missatge d'error:\n\n```php\n    /**\n     * @ORM\\Column(type=\"string\", length=100)\n     * @Assert\\NotNull(message=\"The title is mandatory\")\n     */\n    private $title;\n</code></pre> I es disparar\u00e0 quan no inserim t\u00edtol i intentem enviar el formulari:</p> <p>Podeu trobar m\u00e9s informaci\u00f3 sobre quines assercions es poden usar per a validar dades en la documentaci\u00f3 oficial de Symfony: Validation.</p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#altres-consideracions-finals","title":"Altres consideracions finals","text":"<p>Per a finalitzar aquesta sessi\u00f3, vegem algunes q\u00fcestions que hem deixat en el tinter i no deixen de ser igualment importants.</p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#creacio-de-classes-per-a-formularis","title":"Creaci\u00f3 de classes per a formularis","text":"<p>Fins ara, hem definit els formularis directament en els controladors afectats. Aix\u00ed, en el cas de l'aplicaci\u00f3 de pel\u00b7l\u00edcules, hem definit un formulari per a la ruta <code>/movies/create</code> i un altre (el mateix, pr\u00e0cticament) per a la ruta <code>/movies/{id}/edit</code>.</p> <p>El recomanat, segons la documentaci\u00f3 de Symfony, \u00e9s no situar els formularis directament en els controladors, sin\u00f3 crear-los en una classe a banda. D'aquesta forma, podr\u00edem reutilitzar els formularis en diversos controladors, i no repetir codi innecess\u00e0riament.</p> <p>Vegem com quedaria aquesta classe per al formulari d'inserci\u00f3 i edici\u00f3 de pel\u00b7l\u00edcules. Com sempre, podem crear el formulari on vulguem, per\u00f2 per unificar criteris, i seguint els exemples de la documentaci\u00f3 de Symfony, crearem una carpeta <code>Form</code> en la nostra carpeta <code>src</code>, i posarem dins els formularis. En el nostre cas, crearem una classe anomenada <code>MovieType</code>, que heretar\u00e0 d'una classe base gen\u00e8rica de Symfony cridada <code>AbstractType</code>. Dins, definim el m\u00e8tode <code>buildForm</code> que s'encarregar\u00e0 de crear el formulari, com f\u00e8iem abans en el m\u00e8tode nou o a editar:</p> <pre><code># src/Form/MovieType.php\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n$builder\n-&gt;add('title', TextType::class)\n-&gt;add('tagline', TextType::class)\n-&gt;add('overview', TextareaType::class)\n-&gt;add('releaseDate', DateType::class,\n['widget' =&gt; \"single_text\"]\n)\n-&gt;add('poster', TextType::class)\n-&gt;add('genre', EntityType::class,\n['class' =&gt; Genre::class,\n'choice_label' =&gt; 'name',\n'placeholder' =&gt; 'Select a genre',\n]\n)\n-&gt;add('create', SubmitType::class, array('label' =&gt; 'Create'));\n}\n</code></pre> <p>A m\u00e9s caldr\u00e0 crear el m\u00e8tode <code>configureOptions</code>:</p> <p><pre><code>   public function configureOptions(OptionsResolver $resolver)\n{\n$resolver-&gt;setDefaults([\n'data_class' =&gt; Movie::class,\n]);\n}\n</code></pre> Ara, nom\u00e9s ens queda reempla\u00e7ar el codi de crear el formulari en nou o editar per l'\u00fas d'aquesta nova classe:</p> <pre><code># src/Controller/MovieController.php\npublic function create(Request $request)\n{\n$movie = new Movie();\n$form = $this-&gt;createForm(MovieType::class, $movie);\n$form-&gt;handleRequest($request);\nif ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) {\n$movie = $form-&gt;getData();\n$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$entityManager-&gt;persist($movie);\n$entityManager-&gt;flush();\nreturn $this-&gt;redirectToRoute('home');\n}\nreturn $this-&gt;render('movies_create.html.twig', array(\n'form' =&gt; $form-&gt;createView()));\n}\n</code></pre>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#afegint-estil-als-formularis","title":"Afegint estil als formularis","text":"<p>Els formularis que hem generat en aquesta sessi\u00f3 s\u00f3n molt funcionals, per\u00f2 poc vistosos, ja que manquen d'estils CSS propis. Si volgu\u00e9rem afegir CSS a aquests formularis, tenim diverses opcions.</p> <p>Una opci\u00f3 rudiment\u00e0ria consisteix a afegir classes (atribut <code>class</code>) als controls del formulari per a donar estils personalitzats. Despr\u00e9s, en el nostre CSS caldria indicar l'estil per a la classe en q\u00fcesti\u00f3.</p> <p>A m\u00e9s, Symfony ofereix diversos temes (themes) que podem aplicar als formularis (i webs en general) per a donar-los una aparen\u00e7a general basada en algun framework conegut, com Bootstrap o Foundation. Si volem optar per l'aparen\u00e7a de Bootstrap, hem de fer el seg\u00fcent:</p> <ol> <li> <p>Incloure la fulla d'estils CSS i l'arxiu Javascript de Bootstrap     en les nostres plantilles. Una pr\u00e0ctica habitual \u00e9s fer-ho en la     plantilla <code>base.html.twig</code> perqu\u00e8 qualsevol que herete d'ella adopte     aquest estil. Per a a\u00e7\u00f2, en la secci\u00f3 <code>stylesheets</code> hem d'afegir el     codi HTML que hi ha en la documentaci\u00f3 oficial de Bootstrap per a incloure      la seua fulla d'estil, i en la secci\u00f3 javascripts els enlla\u00e7os a les diferents      llibreries que s'indiquen en la documentaci\u00f3 de Bootstrap tamb\u00e9.</p> </li> <li> <p>Editar l'arxiu de configuraci\u00f3 <code>config/packages/twig.yaml</code> i indicar     que els formularis usaran el tema de Bootstrap (en aquest cas,     Bootstrap 5):      <pre><code>twig: ... form_themes:\n['bootstrap_5_layout.html.twig']\n</code></pre></p> </li> </ol> <p>Amb aquests dos canvis, l'aparen\u00e7a del nostre formulari de pel\u00b7l\u00edcules queda aix\u00ed:</p> <p></p> <p>Hi ha altres alternatives, com per exemple no indicar aquesta configuraci\u00f3 general en <code>config/packages/twig.yaml</code> i indicar formulari per formulari el tema que es vol usar.</p> <pre><code>{% form_theme form 'bootstrap_5_layout.html.twig' %} \n{{ form_start(form) }} \n...\n</code></pre> <p>Existeixen tamb\u00e9 altres temes disponibles per a utilitzar. I tamb\u00e9 \u00e9s possible crear els teus propis. Podeu consultar m\u00e9s informaci\u00f3 en  Symfony built-in form themes</p>"},{"location":"08-symfony/06-formularis-i-validaci%C3%B3/#afegir-estils-per-a-les-validacions","title":"Afegir estils per a les validacions","text":"<p>En el cas de les validacions de dades del formulari, tamb\u00e9 podem definir estils perqu\u00e8 els missatges que d'error que es mostren (par\u00e0metre message o similars en les anotacions de l'entitat) tinguen un estil determinat. A\u00e7\u00f2 s'aconsegueix f\u00e0cilment triant algun dels temes predefinits de Symfony.</p>"},{"location":"08-symfony/07-seguretat-control-acces/","title":"Seguretat i control d'acc\u00e9s","text":""},{"location":"08-symfony/07-seguretat-control-acces/#configuracio-de-la-seguretat-en-symfony","title":"Configuraci\u00f3 de la seguretat en Symfony","text":"<p>El sistema de seguretat de Symfony \u00e9s molt potent i vers\u00e0til, encara que tamb\u00e9 pot resultar complicat d'entendre i configurar. En aquesta sessi\u00f3 aprendrem a establir els elements principals del mateix:</p> <ul> <li>El mecanisme d'autenticaci\u00f3, \u00e9s a dir, establir on estan     registrats els usuaris amb acc\u00e9s a l'aplicaci\u00f3, per poder accedir     a ells i validar les credencials.</li> <li>El mecanisme d'autoritzaci\u00f3, \u00e9s a dir, una vegada s'ha validat     l'usuari que accedeix, i sempre que aquest siga correcte,     determinar els seus permisos i a quins recursos pot accedir i a     quins no.</li> </ul>"},{"location":"08-symfony/07-seguretat-control-acces/#larxiu-securityyaml-el-firewall-de-symfony","title":"L'arxiu \"security.yaml\". El firewall de Symfony","text":"<p>L'arxiu <code>config/packages/security.yaml</code> emmagatzema la configuraci\u00f3 general del sistema de seguretat de la nostra aplicaci\u00f3 Symfony. El seu contingut per defecte \u00e9s aquest:</p> <pre><code>security:\nenable_authenticator_manager: true\n# https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords\npassword_hashers:\nSymfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface: 'auto'\n# https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider\nproviders:\nusers_in_memory: { memory: null }\nfirewalls:\ndev:\npattern: ^/(_(profiler|wdt)|css|images|js)/\nsecurity: false\nmain:\nlazy: true\nprovider: users_in_memory\n# activate different ways to authenticate\n# https://symfony.com/doc/current/security.html#the-firewall\n# https://symfony.com/doc/current/security/impersonating_user.html\n# switch_user: true\n# Easy way to control access for large sections of your site\n# Note: Only the *first* access control that matches will be used\naccess_control:\n# - { path: ^/admin, roles: ROLE_ADMIN }\n# - { path: ^/profile, roles: ROLE_USER }\n</code></pre> <p>Primerament cal dir que el sistema de seguretat de Symfony va canviar de forma significativa en la versi\u00f3 5.3. La clau <code>enable_authenticator_manager: true</code> indica que estem usant  aquest nou sistema.</p> <p>La secci\u00f3 <code>firewalls</code> \u00e9s el nucli principal del nostre sistema de seguretat. Dins veiem dos subsecciones: <code>dev</code>, que simplement s'assegura que el profiler de Symfony i la barra de depuraci\u00f3 (WDT, Web Debug Toolbar) no es veguen afectats pel nostre sistema de seguretat,  de manera que puguem seguir tenint la informaci\u00f3 d'estat en la barra  inferior que apareix en provar l'aplicaci\u00f3:</p> <p></p> <p>La resta d'elements de l'aplicaci\u00f3 es gestionaran des de la subsecci\u00f3 <code>main</code>, on posarem la l\u00f2gica de seguretat de la nostra aplicaci\u00f3. De fet, el no tenir una subsecci\u00f3 <code>pattern</code> implica que autom\u00e0ticament absorbeix la resta d'URLs que no hagen coincidit amb cap patr\u00f3 anterior del firewall.</p> <p>La subsecci\u00f3 <code>anonymous: true</code> indica que es permet un acc\u00e9s an\u00f2nim a les seccions que no estiguen protegides. De fet, si accedim a <code>movies-symfony</code> i examinem la barra inferior d'estat, veurem que hem iniciat sessi\u00f3 com usuaris a an\u00f2nims (anon.).</p> <p>Veurem a continuaci\u00f3 com afegir elements d'autenticaci\u00f3 en aquest apartat de configuraci\u00f3.</p>"},{"location":"08-symfony/07-seguretat-control-acces/#establir-la-manera-dautenticacio-i-origen-de-dades","title":"Establir la manera d'autenticaci\u00f3 i origen de dades","text":"<p>Podem establir diferents formes d'autenticaci\u00f3, i diferents fonts de dades d'on obtenir els usuaris per a validar. El mecanisme m\u00e9s simple (i menys recomanat) consisteix a utilitzar una autenticaci\u00f3 b\u00e0sica d'HTTP (aquella que mostra un \"prompt\" b\u00e0sic per a introduir login i password), i emmagatzemar els usuaris en el propi arxiu <code>security.yaml</code>. Els passwords poden (han de) estar encriptats en aquest arxiu, per\u00f2 encara aix\u00ed, no \u00e9s un mecanisme molt recomanable d'emmagatzematge.</p> <p>Ens saltarem aquesta opci\u00f3, i anirem a la qual realment ens interessa: tindrem els usuaris registrats en una taula d'una base de dades MySQL (en aquest cas, de la nostra base de dades de pel\u00b7l\u00edcules), i definirem un formulari d'inici de sessi\u00f3 que utilitzar per a validar-nos contra aqueixa taula a l'hora d'accedir a recursos protegits.</p>"},{"location":"08-symfony/07-seguretat-control-acces/#definir-lentitat-i-taula-dusuaris","title":"Definir l'entitat i taula d'usuaris","text":"<p>En la nostra aplicaci\u00f3 de pel\u00b7l\u00edcules anem a afegir una nova entitat per a emmagatzemar els usuaris de l'aplicaci\u00f3, i la seua corresponent taula associada, emprant Doctrine. Els usuaris tindran en aquest cas un identificador (autonum\u00e8ric generat per Doctrine), un nom d'usuari, una contrasenya, un correu electr\u00f2nic i un rol (m\u00e9s endavant veurem per a qu\u00e8 s'utilitza el rol).</p> <p>Per tant, crearem primer l'entitat d'aquesta forma:</p> <pre><code> php bin/console make:entity\n\n Class name of the entity to create or update (e.g. TinyPizza):\n &gt; User\n\n created: src/Entity/User.php\n created: src/Repository/UserRepository.php\n\n Entity generated! Now let's add some fields!\n You can always add more fields later manually or by re-running this command.\n\n New property name (press &lt;return&gt; to stop adding fields):\n &gt; username\n\n Field type (enter ? to see all types) [string]:\n &gt; string\n\n Field length [255]:\n &gt; 100 \n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; \n\n updated: src/Entity/User.php\n\n Add another property? Enter the property name (or press &lt;return&gt; to stop adding fields):\n &gt; password\n\n Field type (enter ? to see all types) [string]:\n &gt; string\n\n Field length [255]:\n &gt; 255\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/User.php\n\n Add another property? Enter the property name (or press &lt;return&gt; to stop adding fields):\n &gt; email\n\n Field type (enter ? to see all types) [string]:\n &gt; string\n\n Field length [255]:\n &gt; 255\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; yes \n\n updated: src/Entity/User.php\n\n Add another property? Enter the property name (or press &lt;return&gt; to stop adding fields):\n &gt; role\n\n Field type (enter ? to see all types) [string]:\n &gt; string\n\n Field length [255]:\n &gt; 20\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/User.php\n\n Add another property? Enter the property name (or press &lt;return&gt; to stop adding fields):\n &gt; \n\n  Success!         \n</code></pre> <p>Una vegada creada l'entitat, el seg\u00fcent pas \u00e9s migrar els canvis a la base de dades, com ja hem fet pr\u00e8viament:</p> <pre><code>php bin/console make:migration\n\nphp bin/console doctrine:migration:migrate\n</code></pre> <p>Alternativament a aquests dos comandos, i en el cas que done algun conflicte amb migracions pr\u00e8vies, tamb\u00e9 podem executar aquests altres dos, que gestionen millor les difer\u00e8ncies o novetats a migrar:</p> <pre><code>php bin/console doctrine:migrations:diff\n\nphp bin/console doctrine:migrations:migrate\n</code></pre> <p>Podem afegir a m\u00e0 un usuari de prova en la base de dades, amb aquests atributs:</p> <ul> <li>username: user</li> <li>password: user</li> <li>email: proves@proves.org</li> <li>role: ROLE_USER</li> </ul> <p>Insistim, tornarem a tractar els rols m\u00e9s endavant. De moment deixarem establit aquest per a aquest usuari de prova.</p>"},{"location":"08-symfony/07-seguretat-control-acces/#implementar-les-interficies-requerides","title":"Implementar les interf\u00edcies requerides","text":"<p>Per a poder utilitzar una entitat com a font d'usuaris que puguen iniciar sessi\u00f3, \u00e9s necessari que aquesta entitat implemente la interf\u00edcie <code>UserInterface</code> i la interf\u00edcie <code>PasswordAuthenticatedUserInterface</code>, la qual cosa obliga a definir els m\u00e8todes:</p> <ul> <li><code>getRoles()</code>, que retornar\u00e0 un array amb els rols de l'usuari (en     aquest cas, cada usuari nom\u00e9s tindr\u00e0 un rol, que retornarem en un     array)</li> <li><code>getPassword()</code>, que retornar\u00e0 el password de l'usuari</li> <li><code>getUserIdentifier()</code>, que retornar\u00e0 el login de l'usuari</li> <li><code>getSalt()</code>, que en ocasions no \u00e9s necessari emprar. S'empra en     mecanismes de codificaci\u00f3 de passwords m\u00e9s avan\u00e7ats que els que     veurem en el curs. Aix\u00ed que en el nostre exemple retornarem <code>null</code>.</li> <li><code>eraseCredentials()</code>, que s'empra per a eliminar informaci\u00f3 sensible     o privada de l'usuari. Pot ser \u00fatil si, per exemple, s'emmagatzema     el password de l'usuari sense encriptar. En primera inst\u00e0ncia ho     farem aix\u00ed, per\u00f2 despr\u00e9s ho encriptarem, aix\u00ed que aquest m\u00e8tode ho     deixarem buit.</li> </ul> <p>A m\u00e9s, conv\u00e9 implementar la interf\u00edcie <code>Serializable</code> per a poder serialitzar objectes de tipus <code>User</code> i enviar-los entre les parts de l'aplicaci\u00f3 (m\u00e9s endavant veurem com obtenir l'objecte <code>User</code> de l'usuari que ha iniciat sessi\u00f3). A\u00e7\u00f2 implica afegir dos m\u00e8todes m\u00e9s: <code>serialize</code> (per a convertir l'usuari en text que enviar entre components) i <code>unserialize</code> (per a convertir un text en un objecte <code>User</code>).</p> <p>Amb tot a\u00e7\u00f2, la nostra entitat <code>User</code> queda aix\u00ed (eliminem els <code>getters</code> i <code>setters</code> generats autom\u00e0ticament i que no anem a emprar en realitat):</p> <pre><code># src/Entity/User.php\n...\n* Alternatively, the roles might be stored on a ``roles`` property,\n* and populated in any number of different ways when the user object\n* is created.\n*\n* @return string[] The user roles\n*/\npublic function getRoles()\n{\nreturn [$this-&gt;role];\n}\n/**\n     * Returns the salt that was originally used to encode the password.\n     *\n     * This can return null if the password was not encoded using a salt.\n     *\n     * @return string|null The salt\n     */\npublic function getSalt()\n{\nreturn null;\n}\n/**\n     * Removes sensitive data from the user.\n     *\n     * This is important if, at any given point, sensitive information like\n     * the plain-text password is stored on this object.\n     */\npublic function eraseCredentials()\n{\n// TODO: Implement eraseCredentials() method.\n}\n/**\n     * String representation of object.\n     * @link https://php.net/manual/en/serializable.serialize.php\n     * @return string|null The string representation of the object or null\n     * @throws Exception Returning other type than string or null\n     */\npublic function serialize(): ?string\n{\nreturn serialize([\n$this-&gt;getId(),\n$this-&gt;getUsername(),\n$this-&gt;getPassword()\n]);\n}\n/**\n     * Constructs the object.\n     * @link https://php.net/manual/en/serializable.unserialize.php\n     * @param string $serialized The string representation of the object.\n     * @return void\n     */\npublic function unserialize($serialized)\n{\nlist( $this-&gt;id, $this-&gt;username, $this-&gt;password) = \nunserialize($serialized, ['allowed_classes' =&gt; false]);\n}\n</code></pre> <p>En el cas de la funci\u00f3 <code>unserialize</code>, se li passa com a segon par\u00e0metre un array d'opcions. L'opci\u00f3 <code>allowed_classes</code> que s'utilitza en aquest exemple, posada a <code>false</code>, fa que no es permeta la serialitzaci\u00f3 d'objectes de cap classe (nom\u00e9s els tipus simples que componen els atributs de l'entitat <code>User</code>, en aquest cas).</p>"},{"location":"08-symfony/07-seguretat-control-acces/#configurar-lorigen-de-dades-i-la-manera-dautenticacio","title":"Configurar l'origen de dades i la manera d'autenticaci\u00f3","text":"<p>Anem ara a indicar on ha de buscar Symfony els usuaris quan alg\u00fa intente accedir al sistema. Per a a\u00e7\u00f2, anem a l'arxiu de configuraci\u00f3 <code>config/packages/security.yaml</code>, i afegim un nou prove\u00efdor de dades, enlla\u00e7at a l'entitat <code>User</code>:</p> <pre><code>security:\nproviders: ... user_provider: entity: class: App\\Entity\\User property: username\n</code></pre> <p>Indiquem el nom de l'entitat, i el nom de l'atribut que s'usuar\u00e0 com a nom d'usuari en l'inici de sessi\u00f3.</p> <p>Despr\u00e9s, una mica m\u00e9s a baix en aqueix mateix fitxer (subsecci\u00f3n <code>security &gt; firewalls &gt; main</code>), establim que inicie sessi\u00f3 mitjan\u00e7ant un formulari, que s'activar\u00e0 amb la ruta anomenada <code>login</code> que definirem despr\u00e9s:</p> <pre><code>security:\nfirewalls: dev: ... main: anonymous: ~\nform_login: provider: user_provider login_path: login check_path: login\n</code></pre> <p>En aquest cas, hem anul\u00b7lat (posat a null) l'acc\u00e9s an\u00f2nim (a\u00e7\u00f2 \u00e9s el que significa el s\u00edmbol <code>\"~\"</code> al costat d'anonymous. D'altra banda, indiquem que tant per a mostrar el formulari com per a verificar l'inici de sessi\u00f3, s'acudir\u00e0 a la mateixa ruta <code>login</code>, emprant com a prove\u00efdor d'usuaris l'element <code>user_provider</code> que hem definit abans, basat en l'entitat <code>User</code>.</p> <p>Podem, a m\u00e9s, definir quins recursos es protegiran amb aquest formulari. Conv\u00e9, almenys, especificar un patr\u00f3 de ruta que excloga al propi formulari d'inici de sessi\u00f3, ja que en cas contrari entrar\u00edem en un bucle infinit en el qual, per a accedir al formulari d'inici de sessi\u00f3, haur\u00edem  d'iniciar sessi\u00f3 amb el formulari d'inici de sessi\u00f3. Per a a\u00e7\u00f2, editem la secci\u00f3 <code>access_control</code> al final de l'arxiu <code>security.yaml</code>, i indiquem, almenys, dues rutes: una sense protegir per a l'inici de sessi\u00f3, i l'altra protegida per al que vulguem (en aquest cas, la resta de l'aplicaci\u00f3):</p> <pre><code>access_control:\n-   { path: ^/login, rols: IS_AUTHENTICATED_ANONYMOUSLY }\n-   { path: ^/, rols: ROLE_USER }\n</code></pre> <p>Finalment, tamb\u00e9 podem especificar el sistema de codificaci\u00f3 del password. Ara com ara no ho usar cap tipus de codificaci\u00f3, per la qual cosa afegim aquest subapartat al final (dins de la secci\u00f3 <code>security</code>): <pre><code>encoders: App\\User\\Entity: plaintext\n</code></pre></p>"},{"location":"08-symfony/07-seguretat-control-acces/#definir-la-ruta-i-el-formulari-dinici-de-sessio","title":"Definir la ruta i el formulari d'inici de sessi\u00f3","text":"<p>Finalment, anem a crear un nou controlador anomenat <code>SecurityController</code> en la nostra carpeta de <code>src/Controller</code>, que definir\u00e0 una nova ruta <code>/login</code> per a mostrar el formulari d'inici de sessi\u00f3 i verificar l'error de validaci\u00f3, si \u00e9s el cas. Pot quedar m\u00e9s o menys aix\u00ed:</p> <p><pre><code>class SecurityController extends AbstractController\n{\n/**\n     * @Route(\"/login\", name=\"login\")\n     */\npublic function login(AuthenticationUtils $authenticationUtils)\n{\n$error = $authenticationUtils-&gt;getLastAuthenticationError();\n$lastUsername = $authenticationUtils-&gt;getLastUsername();\nreturn $this-&gt;render('security/login.html.twig', array(\n'error' =&gt; $error,\n'lastUserName'=&gt; $lastUsername\n));\n}\n}\n</code></pre> Podr\u00edem obtenir altres dades del proc\u00e9s de validaci\u00f3. Per exemple, en cas que l'usuari no es valide correctament, podr\u00edem recuperar el seu nom d'usuari per a tornar-lo a introduir autom\u00e0ticament en la plantilla del formulari, i aix\u00ed evitar que l'haja de tornar a escriure. Per a a\u00e7\u00f2, tenim el m\u00e8tode <code>getLastUsername()</code> de l'objecte <code>AuthenticationUtils</code>. N'hi ha prou amb recuperar la dada i passar-li-la a la plantilla:</p> <p><pre><code>    ...\n$lastUsername = $authenticationUtils-&gt;getLastUsername();\nreturn $this-&gt;render('security/login.html.twig', array(\n'error' =&gt; $error,\n'lastUserName'=&gt; $lastUsername\n));\n</code></pre> El formulari d'inici de sessi\u00f3 estar\u00e0 en <code>login.html.twig</code>, pot ser alguna cosa aix\u00ed:</p> <pre><code>{% extends 'base.html.twig' %}\n{% block title %}Movies - Login{% endblock %}\n{% block body %}\n&lt;div class=\"container\" &gt;\n&lt;div class=\"row\"&gt;\n&lt;div class=\"col-sm-12\"&gt;\n&lt;h3&gt;Login&lt;/h3&gt;\n&lt;form method=\"post\" novalidate&gt;\n{% if error %}\n&lt;div class=\"alert alert-danger\" role=\"alert\"&gt;\n{{ error.messageKey }}\n&lt;/div&gt;\n{% endif %}\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"username\"&gt;Username&lt;/label&gt;\n&lt;input type=\"text\" class=\"form-control\"\nname=\"_username\" id=\"username\"\nvalue=\"{{ lastUserName }}\"\nplaceholder=\"Username:\" required&gt;\n&lt;/div&gt;\n&lt;div class=\"form-group\"&gt;\n&lt;label for=\"password\"&gt;Contrasenya&lt;/label&gt;\n&lt;input type=\"password\" class=\"form-control\"\nname=\"_password\" id=\"password\"\nvalue=\"\"\nplaceholder=\"Password:\" required&gt;\n&lt;/div&gt;\n&lt;input type=\"submit\" value=\"Login\"&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n{% endblock %}\n</code></pre> <p>Com veiem, es t\u00e9 un bloc <code>div</code> condicional per a mostrar un error de validaci\u00f3 si \u00e9s el cas. A m\u00e9s, el formulari ha de complir unes normes: el camp de login ha de cridar-se <code>_username</code> (atribut \"name\"), i el camp de password ha de cridar-se <code>_password</code>. Aquestes opcions poden configurar-se i personalitzar-se.</p> <p>Despr\u00e9s de tots aquests passos, ja tindrem llest el sistema d'autenticaci\u00f3. Pot semblar estrany, per\u00f2 aix\u00ed \u00e9s... En realitat, Symfony es fa c\u00e0rrec autom\u00e0ticament de la validaci\u00f3 de l'usuari quan aquest envia el formulari d'inici de sessi\u00f3. Si hi ha algun error, es registrar\u00e0 dins del controlador <code>login</code> i es renderizar\u00e1 el formulari amb el missatge d'error. Si tot \u00e9s correcte, es redirigir\u00e0 a l'usuari autom\u00e0ticament cap a la p\u00e0gina que havia sol\u00b7licitat.</p>"},{"location":"08-symfony/07-seguretat-control-acces/#algunes-opcions-avancades","title":"Algunes opcions avan\u00e7ades","text":"<p>Ara que ja hem apr\u00e9s a configurar una forma b\u00e0sica d'autenticaci\u00f3 amb formulari d'inici de sessi\u00f3ogin, vegem alguns aspectes una mica m\u00e9s avan\u00e7ats de la configuraci\u00f3 de la seguretat en Symfony.</p>"},{"location":"08-symfony/07-seguretat-control-acces/#encriptar-les-contrasenyes","title":"Encriptar les contrasenyes","text":"<p>\u00c9s convenient que les contrasenyes dels usuaris registrats no estiguen en text pla sense encriptar, com en l'exemple anterior. Podem emprar, per exemple, un algorisme d'encriptaci\u00f3 Argon o bcrype per a xifrar-les. En el nostre cas, i seguint les recomanacions de la documentaci\u00f3 oficial de Symfony deixarem que  siga Symfony qui trie el millor algorisme possible. A\u00e7\u00f2 suposa dos passos extra:</p> <ul> <li>Indicar a Symfony que els passwords estan encriptats      perqu\u00e8 aplique un algorisme per a encriptar qualsevol contrasenya,     incl\u00f2s el que introdu\u00efsca l'usuari en iniciar sessi\u00f3, i aix\u00ed poder     comparar si les dos contrasenyes encriptades coincideixen. Per a fer     a\u00e7\u00f2, hem d'editar l'arxiu de configuraci\u00f3     <code>config/packages/security.yaml</code> i indicar que l'entitat Usuari     utilitzar\u00e0 el m\u00e8tode d'encriptaci\u00f3 que h\u00e0gem escollit:      <pre><code># config/packages/security.yaml\nsecurity:\n# ...\npassword_hashers:\n# auto hasher with default options for the User class (and children)\nApp\\Entity\\User: 'auto'\n# auto hasher with custom options for all PasswordAuthenticatedUserInterface instances\nSymfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface:\nalgorithm: 'auto'\ncost:      15 </code></pre></li> <li>Encriptar de forma autom\u00e0tica els passwords dels usuaris quan es     registren. Si tingu\u00e9rem un formulari de registre en la nostra     aplicaci\u00f3, i tenim les dades de l'usuari guardats en un objecte     usuari, i el password en s\u00ed en un objecte <code>password</code>, l'encriptaci\u00f3     seria com segueix:      <pre><code>    use Symfony;\npublic function register(UserPasswordHasherInterface $encoder)\n{\n...\n$user = new User();\n...\n$plainTextPassword = \"...\";\n// Assignem ac\u00ed la resta d'atributs de l'usuari\n$hashedPassword = $encoder-&gt;hashPassword($user, $plainTextPassword);\n$user-&gt;setPassword($hashedPassord);\n// Guardar en la base de dades, si escau\n...\n}\npublic function delete(UserPasswordHasherInterface $passwordHasher, UserInterface $user)\n{\n// ... e.g. get the password from a \"confirm deletion\" dialog\n$plainTextPassword = ...;\nif (!$passwordHasher-&gt;isPasswordValid($user, $plaintextPassword)) {\nthrow new AccessDeniedHttpException();\n}\n}\n</code></pre></li> </ul> <p>El que fem \u00e9s acudir a la configuraci\u00f3 de l'arxiu <code>security.yaml</code> anterior per a veure qu\u00e8 codificador s'ha establit, i mitjan\u00e7ant l'objecte de tipus <code>UserPasswordHashInterface</code> que rep com a par\u00e0metre del m\u00e8tode, i del seu m\u00e8tode <code>hashPassword</code>, codificar el password amb aqueix mateix algorisme.</p> <p>Aquest m\u00e8tode rep com a primer par\u00e0metre l'usuari sobre el qual s'est\u00e0 treballant, i com a segon par\u00e0metre el password a codificar. Una vegada codificat, se li assigna a l'usuari, i ja es podria guardar en la base de dades.</p> <p>Per a provar el nostre exemple de pel\u00b7l\u00edcules, com no tenim formulari de registre, codificarem manualment el/els password(s) que tinguem en la base de dades. Podem emprar webs com https://bcrypt-generator.com/. </p>"},{"location":"08-symfony/07-seguretat-control-acces/#treballar-amb-rols","title":"Treballar amb rols","text":"<p>En els exemples fets fins ara, ens hem limitat a definir un camp <code>role</code> en la nostra entitat <code>User</code>, i a emmagatzemar un usuari amb rol <code>ROLE_USER</code>, per\u00f2 sense prestar massa atenci\u00f3 al que aqueix rol significa.</p> <p>Per a comen\u00e7ar, hem de saber que tots els rols que definim en la nostra aplicaci\u00f3 han de comen\u00e7ar amb el prefix <code>ROLE_</code> perqu\u00e8 Symfony els tracte com a tals. Existeix la possibilitat de configurar aquesta opci\u00f3 i posar rols m\u00e9s flexibles o arbitraris.</p> <p>Symfony permet definir diferents rols en una aplicaci\u00f3, i establir una jerarquia entre ells, de manera que un rol puga fer tot el que fa un altre m\u00e9s altres coses. A m\u00e9s, podem protegir l'acc\u00e9s a recursos per a determinats rols, de manera que nom\u00e9s certs rols (o rols que estiguen per sobre d'ells en la jerarquia) puguen accedir.</p>"},{"location":"08-symfony/07-seguretat-control-acces/#assignar-diferents-rols-a-diferents-recursos-protegits","title":"Assignar diferents rols a diferents recursos protegits","text":"<p>En el cas que cada zona protegida de la nostra aplicaci\u00f3 puga tenir assignats rols diferents, n'hi ha prou amb indicar el rol (o rols entre claud\u00e0tors) que tenen perm\u00eds per a cada zona. Per exemple, en aquest cas protegim l'acc\u00e9s a qualsevol ruta que comence per <code>/admin</code> perqu\u00e8 nom\u00e9s puguen accedir usuaris amb rol ROLE_ADMIN o ROLE_MANAGER, a m\u00e9s de la configuraci\u00f3 ja establida en exemples previs:</p> <pre><code>security\naccess_control:\n- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }\n- { path: ^/, roles: ROLE_USER }\n- { path: ^/admin, roles: [ROLE_ADMIN, ROLE_MANAGER] }\n</code></pre>"},{"location":"08-symfony/07-seguretat-control-acces/#establir-jerarquies-entre-rols","title":"Establir jerarquies entre rols","text":"<p>Pot ser necessari tamb\u00e9 establir una jerarquia entre rols, de manera que, si es t\u00e9 un rol de nivell superior, es tindr\u00e0 acc\u00e9s a tots els recursos que exigisquen un rol de nivell inferior. Per a fer a\u00e7\u00f2, afegim un subapartat <code>role_hierarchy</code> en la nostra secci\u00f3 <code>security</code> de <code>config/packages/security.yaml</code>, establint aquesta jerarquia. En el seg\u00fcent exemple, el rol <code>ROLE_ADMIN</code> cont\u00e9 a <code>ROLE_USER</code>, i el <code>ROLE_SUPERADMIN</code> cont\u00e9 tant a <code>ROLE_ADMIN</code> (i, per tant, a <code>ROLE_USER</code>), com a <code>ROLE_MANAGER</code>.</p> <pre><code>security: ... role_hierarchy: ROLE_ADMIN: ROLE_USER ROLE_SUPER_ADMIN:\n[ROLE_ADMIN, ROLE_MANAGER]\n</code></pre>"},{"location":"08-symfony/07-seguretat-control-acces/#comprovar-rols-des-dels-controladors-i-vistes","title":"Comprovar rols des dels controladors i vistes","text":"<p>Existeix tamb\u00e9 la possibilitat de for\u00e7ar una comprovaci\u00f3 de seguretat en el codi dels controladors, basant-se en si l'usuari registrat t\u00e9 cert rol o no, o simplement si s'ha autenticat o no. Per exemple, aquest controlador permet l'acc\u00e9s al seu codi si l'usuari t\u00e9 el <code>ROLE_ADMIN</code>: <pre><code>   /**\n     * @Route(\"/movies/create\", name=\"movies_create\")\n     */\npublic function create(Request $request)\n{\n$this-&gt;denyAccessUnlessGranted('ROLE_ADMIN',\nnull, 'Acc\u00e9s restringit a administradors');\n...\n</code></pre> Aquest altre controlador simplement comprova si l'usuari s'ha autenticat correctament abans de seguir:</p> <p><pre><code>public function otherController() {\n$this-&gt;denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY'); \n...\n</code></pre> En qualsevol cas, el m\u00e8tode <code>denyAccessUnlessGranted</code> provoca que:</p> <ul> <li>Si l'usuari encara no s'ha autenticat, se li redirigeix a la     p\u00e0gina d'inici de sessi\u00f3.</li> <li>Si s'ha autenticat per\u00f2 no t\u00e9 el rol requerit, es genera una     p\u00e0gina d'error HTTP 403 (acc\u00e9s prohibit). Aquesta p\u00e0gina es pot     personalitzar.</li> </ul> <p>Tamb\u00e9 \u00e9s possible comprovar un determinat rol o autenticaci\u00f3 des del codi d'una plantilla Twig, mitjan\u00e7ant la funci\u00f3 <code>is_granted</code>. A\u00e7\u00f2 pot servir per a mostrar o no certs apartats de la vista.</p> <pre><code>{% if is_granted('ROLE_ADMIN') %} \n    ... \n\n{% endif %}\n</code></pre>"},{"location":"08-symfony/07-seguretat-control-acces/#obtenir-lobjecte-user","title":"Obtenir l'objecte <code>user</code>","text":"<p>Una vegada autenticats, l'objecte <code>user</code> es pot obtenir a trav\u00e9s del m\u00e8tode <code>getUser</code>, normalment des de dins d'un controlador. Aix\u00ed, podr\u00edem fer:</p> <pre><code>/**\n* @Route(\"/admin\", name=\"admin\")\n*/\npublic function admin()\n{\n$this-&gt;denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY');\n$user = $this-&gt;getUser();\nreturn new Response(\"Bienvenido a /admin, \" . $user-&gt;getUserName());\n}\n</code></pre> <p>Des d'una plantilla Twig tamb\u00e9 \u00e9s possible accedir a l'usuari que ha iniciat sessi\u00f3 i obtenir, per exemple, el seu nom d'usuari, amb  l'objecte <code>app.user</code>:</p> <pre><code>Benvingut/a, {{ app.user.username }}\n</code></pre>"},{"location":"08-symfony/07-seguretat-control-acces/#eixint-de-laplicacio-logout","title":"Eixint de l'aplicaci\u00f3 (logout)","text":"<p>Podem configurar el tancament de sessi\u00f3 o logout a trav\u00e9s d'arxius YAML exclusivament. N'hi ha prou amb seguir aquests dos passos:</p> <ul> <li>En primer lloc, establim que quan s'isca de l'aplicaci\u00f3 es     redirigir\u00e0, per exemple, a l'arrel de la mateixa. A\u00e7\u00f2 es fa en     l'arxiu <code>config/packages/security.yaml:</code>. Per exemple, per a     permetre tancar sessi\u00f3 en el firewall <code>main</code>, amb el qual estem     treballant en el nostre exemple, far\u00edem a\u00e7\u00f2:      <pre><code>firewalls: ... main:\nlogout:\npath: /logout\ntarget: /\n</code></pre></li> <li>En segon lloc, definim una ruta en l'arxiu <code>config/routes.yaml</code> que     associe el nom \"logout\" (o com el vulguem cridar) amb la ruta que     h\u00e0gem definit abans (en aquest cas, la ruta <code>/logout</code>):      <pre><code>logout: path:\n/logout\n</code></pre> Amb a\u00e7\u00f2, i algun enlla\u00e7 en les nostres plantilles per a poder tancar sessi\u00f3 (per exemple, en la plantilla base)...</li> </ul> <pre><code>    &lt;a href=\"{{ path(\"logout\") }}\"&gt;Tancar sessi\u00f3&lt;/a&gt;\n</code></pre> <p>... ja podrem canviar d'usuari o eixir de l'aplicaci\u00f3.</p>"},{"location":"08-symfony/07-seguretat-control-acces/#recursos","title":"Recursos","text":"<p>El recurs d'informaci\u00f3 el trobar\u00e0s en el cap\u00edtol Security  dins de la documentaci\u00f3 oficial de Symfony.</p>"},{"location":"08-symfony/08-pujada-fitxers/","title":"Pujada de fitxers","text":""},{"location":"08-symfony/08-pujada-fitxers/#introduccio","title":"Introducci\u00f3","text":"<p>El que recomana Symfony \u00e9s treballar en el component VichUploader</p>"},{"location":"08-symfony/08-pujada-fitxers/#redimensionar-imatges","title":"Redimensionar imatges","text":"<p>Per a redimensionar les imatges podem usar el component LiipImagineBundle.</p> <p>Seguint el seg\u00fcent tutorial: Basic Usage crearem el grup de filtres <code>my_thumb</code> que realitza una miniatura de la imatge afegint-li una vora de color negre.</p> <p>El funcionament \u00e9s senzill:</p> <ol> <li>Es crea un un grup de filtres, <code>my_thumb</code>, en l'exemple, on s'indiquen els filtres que s'aplicaran, <code>thumbnail</code> i <code>background</code> en l'exemple.</li> <li>Despr\u00e9s s'utilitza el filtre en les plantilles de Twig:</li> </ol> <pre><code>&lt;img src=\"{{ asset('/relative/path/to/image.jpg') | imagine_filter('my_thumb') }}\" /&gt; \n</code></pre> <p>Combinant-ho amb <code>VichUploader</code> la plantilla quedaria aix\u00ed:</p> <pre><code>&lt;img  src=\"{{ vich_uploader_asset(link, 'imageFile') | imagine_filter('my_thumb') }}\" \nalt=\"{{ link.title }}\" /&gt;\n</code></pre> <p>En els formularis on s'usa VichUploader s'aplica de la seg\u00fcent forma:</p> <pre><code>    -&gt;add('imageFile', VichImageType::class, [\n'required' =&gt; false,\n'allow_delete' =&gt; true,\n'asset_helper' =&gt; true,\n'imagine_pattern' =&gt; 'my_thumb']);\n</code></pre> <p>El que fa <code>LiipImagine</code> \u00e9s crear en un directori temporal els resultats d'aplicar els filtres.</p>"},{"location":"08-symfony/08-repositoris-paginacio/","title":"Extrendre els repositoris. Paginaci\u00f3","text":""},{"location":"08-symfony/08-repositoris-paginacio/#introduccio","title":"Introducci\u00f3","text":"<p>Com ja has vist, l'objecte <code>Repository</code> permet executar consultes senzilles sense pr\u00e0cticament cap treball:</p> <p><pre><code>// from inside a controller\n$repository = $em-&gt;getRepository(Link::class);\n$movies = $repository-&gt;findAll();\n</code></pre> Els m\u00e8todes disponibles s\u00f3n els seg\u00fcents:</p> <pre><code>/**\n * @method Movie|null find($id, $lockMode = null, $lockVersion = null)\n * @method Movie|null findOneBy(array $criteria, array $orderBy = null)\n * @method Movie[]    findAll()\n * @method Movie[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)\n */\n</code></pre> <p>Per\u00f2, i si necessitem una consulta m\u00e9s complexa? Quan generem una entitat amb <code>make:entity</code>,  el comandament tamb\u00e9 genera una classe anomenada <code>MovieRepository</code>.</p> <p><pre><code># src/Repository/MovieRepository.php\nnamespace App\\Repository;\nuse App\\Entity\\Movie;\nuse Doctrine\\Bundle\\DoctrineBundle\\Repository\\ServiceEntityRepository;\nuse Doctrine\\Persistence\\ManagerRegistry;\nclass MovieRepository extends ServiceEntityRepository\n{\npublic function __construct(ManagerRegistry $registry)\n{\nparent::__construct($registry, Movie::class);\n}\n//...\n}\n</code></pre> Quan obtens el repositori (p.e. <code>-&gt;getRepository(Movie::class)</code>), est\u00e0s obtenint realment una inst\u00e0ncia d'aquest objecte!</p> <p>Anotacions</p> <p>Cal assegurar-se que l'entitat t\u00e9 correctament vinculat el repositori mitjan\u00e7ant una anotaci\u00f3. En el nostre exemple l'entitat <code>Movie</code> haur\u00e0 d'incloure:</p> <pre><code>@ORM\\Entity(repositoryClass=\"App\\Repository\\MovieRepository\")\n</code></pre>"},{"location":"08-symfony/08-repositoris-paginacio/#querybuilder","title":"QueryBuilder","text":"<p>Suposem que vols fer una consulta que obtinga totes les pel\u00b7l\u00edcules amb data posterior a certa data. Podr\u00edes afegir un nou m\u00e8tode dins del repositori:</p> <pre><code>// src/Repository/MovieRepository.php\n// ...\nclass MovieRepository extends ServiceEntityRepository\n{\npublic function __construct(ManagerRegistry $registry)\n{\nparent::__construct($registry, Product::class);\n}\n/**\n     * @return Movie[]\n     */\npublic function findAllAfterDate(DateTime $date): array{\n$query = $this-&gt;createQueryBuilder('m')\n-&gt;andwhere(\"m.releaseDate &gt;= :date\")\n-&gt;orderBy('l.releaseDate', 'DESC')\n-&gt;setParameter('date', $date)\n-&gt;getQuery();\nreturn $query-&gt;getResult();\n}\n</code></pre> <p>Query Builder</p> <p>Query Builder, \u00e9s una forma orientada a objectes d'escriure consultes. Es recomana utilitzar-la quan les consultes es creen din\u00e0micament.</p> <p>Ara, pots cridar el m\u00e8tode del repositori:</p> <pre><code>// from inside a controller\n$date = new DateTime(\"2020-01-01\");\n$movies = $em\n-&gt;getRepository(Movie::class)\n-&gt;findAllAfterDate($date);\n// ...\n</code></pre>"},{"location":"08-symfony/08-repositoris-paginacio/#query","title":"Query","text":"<p>Tamb\u00e9 \u00e9s possible utilitzar l'objecte <code>Query</code>, aix\u00ed com executar consultes directament amb PDO.</p> <pre><code>   /**\n     * @return Movie[]\n     */\npublic function findAllAfterDate(DateTime $date): array{\n$query = $this-&gt;createQuery('\n            SELECT m\n            FROM App\\Entity\\Movie m\n            WHERE m.releaseDate &gt;= :date\n            ORDER BY m.releaseDate DESC')\n-&gt;setParameter('date', $date);\nreturn $query-&gt;getResult();\n}\n</code></pre>"},{"location":"08-symfony/08-repositoris-paginacio/#consultes-sql","title":"Consultes SQL","text":"<p>Aquest tipus de consultes s'executen directament en PDO, fent \u00fas de les classes <code>PDO</code>, <code>PDOStatement</code>.</p> <p><pre><code>// src/Repository/MovieRepository.php\n// ...\npublic function findAllAfterDate(DateTime $date): array\n{\n// TODO: Revisar com accedir a la connexi\u00f3\n$conn = $this-&gt;getEntityManager()-&gt;getConnection();\n$sql = '\n        SELECT * FROM movie m\n        WHERE m.release_date &gt; :date\n        ORDER BY m.release_date DESC\n        ';\n$stmt = $conn-&gt;prepare($sql);\n$stmt-&gt;execute(['date' =&gt; $date]);\n// returns an array of arrays (i.e. a raw data set)\nreturn $stmt-&gt;fetchAll();\n}\n</code></pre> Aquestes consultes SQL tornen arrays, no objectes (a no ser que uses la funcionalitat NativeQuery).</p> <p>M\u00e9s informaci\u00f3 en Querying for objects the repository</p>"},{"location":"08-symfony/08-repositoris-paginacio/#exemple","title":"Exemple","text":"<p>En el seg\u00fcent exemple pots observar un \u00fas del nou m\u00e8tode del repositori. Hem modificat la ruta <code>homepage</code> perqu\u00e8 comprove si ha rebut pel querystring el par\u00e0metre <code>start-date</code> si \u00e9s aix\u00ed executar\u00e0 el m\u00e8tode <code>findAllAfterDate()</code>si no cridar\u00e0 <code>findAll()</code>.</p> <pre><code>    /**\n     * @Route(\"/\", name=\"homepage\")\n     */\npublic function index(Request $request)\n{\n$repo = $this-&gt;getDoctrine()\n-&gt;getRepository(Link::class);\nif ($request-&gt;query-&gt;has(\"start-date\")) {\n$date = new \\DateTime($request-&gt;query-&gt;get(\"start-date\"));\n$links = $repo-&gt;findAllAfterDate($date);\n// TODO: check if the par\u00e0meter start-date is a valid date\n}\nelse {\n$links = $repo-&gt;findAll();\n}\n// now pass the array of default object to the view\nreturn $this-&gt;render('default/index.html.twig', [\n'links' =&gt; $links,\n]);\n}\n</code></pre>"},{"location":"08-symfony/08-repositoris-paginacio/#paginacio","title":"Paginaci\u00f3","text":"<p>Symfony no inclou un paginador de forma nativa per\u00f2 al incloure Doctrine permet implementar-ho f\u00e0cilment sense necessitat d'instal\u00b7lar nous components. A continuaci\u00f3 presentarem tres possibles opcions d'implementaci\u00f3.</p>"},{"location":"08-symfony/08-repositoris-paginacio/#la-classe-paginator-de-doctrine","title":"La classe Paginator de Doctrine","text":"<p>En aquest cas crear\u00edem nous m\u00e8todes en el repositori. <code>findAllPaginated</code> crea la consulta i la passa al m\u00e8tode  <code>paginate</code> que ser\u00e0 el que far\u00e0 la paginaci\u00f3.</p> <p>El m\u00e8tode <code>paginate</code> ens tornar\u00e0 un objecte Paginator que cont\u00e9 en la propietat Paginator::results els resultats.</p> <p>Ens faltaria obtenir el total de registres la qual cosa \u00e9s ben senzilla ja que la classe <code>Paginator</code> implementa la  interf\u00edcie <code>Countable</code> i simplement usant el m\u00e8tode <code>count()</code> obtindrem el total de registres.</p> <pre><code>use Doctrine\\ORM\\Tools\\Pagination\\Paginator;\n...\npublic function findAllPaginated($currentPage = 1):?Paginator\n{\n$query = $this-&gt;createQueryBuilder('l')\n-&gt;orderBy('l.createdAt', 'DESC')\n-&gt;getQuery();\n// No need to manually get get the result ($query-&gt;getResult())\n$paginator = $this-&gt;paginate($query, $currentPage);\nreturn $paginator;\n}\n// Paginate results. \npublic function paginate($dql, $page = 1, $limit = 5):?Paginator\n{\n$paginator = new Paginator($dql);\n$paginator-&gt;getQuery()\n-&gt;setFirstResult($limit * ($page - 1)) // Offset\n-&gt;setMaxResults($limit); // Limit\nreturn $paginator;\n}\n</code></pre> <p>M\u00e9s informaci\u00f3  en Pagination i  Symfony and Doctrine pagination with Twig</p>"},{"location":"08-symfony/08-repositoris-paginacio/#classe-paginator-de-symfonydemo","title":"Classe <code>Paginator</code> de symfony/demo","text":"<p>Un altra opci\u00f3 \u00e9s fer \u00fas de la classe <code>Paginator</code> que s'utilitza en el projecte d'exemple de Symfony. Empra la classe <code>Paginator</code> de Doctrine i ens proporciona tots els m\u00e8todes necessaris per a fer la paginaci\u00f3.</p> <ul> <li>Classe Paginator.</li> <li>Repositori PostRepositori:findLatest.</li> <li>M\u00e8tode BlogController::index().</li> <li>Plantilla de Twig blog/index.html.twig.</li> </ul>"},{"location":"08-symfony/08-repositoris-paginacio/#knplabsknp-paginator-bundle","title":"knplabs/knp-paginator-bundle","text":"<p>Paginator per a Symfony automatitza la paginaci\u00f3 i simplifica l'ordenaci\u00f3 i altres caracter\u00edstiques.</p> <p>En la descripci\u00f3 del paquet knplabs/knp-paginator-bundle  obtindreu m\u00e9s informaci\u00f3.</p>"},{"location":"08-symfony/08-repositoris-paginacio/#recursos","title":"Recursos","text":"<ul> <li>https://anil.io/blog/symfony/doctrine/symfony-and-doctrine-pagination-with-twig/</li> <li>https://www.drauta.com/como-paginar-los-resultados-con-doctrine</li> <li>https://symfony.com/doc/current/components/http_foundation.html#request</li> <li>http://zetcode.com/symfony/request/</li> </ul>"},{"location":"08-symfony/09-altres-funcionalitats/","title":"Altres funcionalitats. Bundles","text":""},{"location":"08-symfony/09-altres-funcionalitats/#pujar-arxius","title":"Pujar arxius","text":"<p>El que recomana Symfony \u00e9s treballar amb el component VichUploader</p>"},{"location":"08-symfony/09-altres-funcionalitats/#redimensionar-imatges","title":"Redimensionar imatges","text":"<p>Per a redimensionar les imatges podem usar el component LiipImagineBundle.</p> <p>Seguint el seg\u00fcent tutorial: Basic Usage crearem el grup de filtres <code>my_thumb</code> que realitza una miniatura de la imatge afegint-li una vora de color negre.</p> <p>El funcionament \u00e9s senzill:</p> <ol> <li>Es crea un un grup de filtres, <code>my_thumb</code>, en l'exemple, on s'indiquen els filtres que s'aplicaran, <code>thumbnail</code> i <code>background</code> en l'exemple.</li> <li>Despr\u00e9s s'utilitza el filtre en les plantilles de Twig:</li> </ol> <pre><code>&lt;img src=\"{{ asset('/relative/path/to/image.jpg') | imagine_filter('my_thumb') }}\" /&gt; \n</code></pre> <p>Combinant-ho amb VichUploader la plantilla quedaria aix\u00ed:</p> <pre><code>&lt;img  src=\"{{ vich_uploader_asset(link, 'imageFile') | imagine_filter('my_thumb') }}\" \nalt=\"{{ link.title }}\" /&gt;\n</code></pre> <p>En els formularis on s'usa VichUploader s'aplica de la seg\u00fcent forma:</p> <pre><code>    -&gt;add('imageFile', VichImageType::class, [\n'required' =&gt; false,\n'allow_delete' =&gt; true,\n'asset_helper' =&gt; true,\n'imagine_pattern' =&gt; 'my_thumb']);\n</code></pre> <p>El que fa <code>LiipImagine</code> \u00e9s crear en un directori temporal els resultats d'aplicar els filtres.</p>"},{"location":"08-symfony/09-altres-funcionalitats/#enviament-de-correu","title":"Enviament de correu","text":"<p>Symfony proporciona una funci\u00f3 d'enviament de correu electr\u00f2nic basat en el popular Swift Mailer.</p> <p>M\u00e9s informaci\u00f3: Sending Emails with Mailer</p> <p>Implementaci\u00f3 d'un formulari de contacte</p> <p>Implementa un formuari de contacte amb els camps nom, correu electr\u00f2nic, assumpte i text que envie la informaci\u00f3 per correu electr\u00f2nic a l'adre\u00e7a del administrador de la web.</p>"},{"location":"08-symfony/09-altres-funcionalitats/#frontend-javascript-i-css","title":"Frontend: Javascript i CSS","text":"<p>Symfony incorpora una llibreria Javascript - anomenada Webpack Encore - que fa que treballar amb CSS i JavaScript siga pura joia. Pots usar-la o no. Tamb\u00e9 pots crear CSS static i arxius JS en el directori <code>/public</code> i despr\u00e9s incloure'l en les plantilles.</p> <p>Webpack Encore \u00e9s una forma senzilla d'integrar Webpack en la teua aplicaci\u00f3. Envolta Webpack, que us proporciona una API neta i potent per agrupar m\u00f2duls JavaScript, pre-processar CSS i JS i recopilar i minificar actius (assets). Encore us ofereix un sistema d\u2019actius professionals que \u00e9s una del\u00edcia d\u2019utilitzar.</p> <p>Encore s\u2019inspira en Webpacker i Mix, per\u00f2 es mant\u00e9 en l\u2019esperit de Webpack: utilitzant les seves caracter\u00edstiques, conceptes i convencions de denominaci\u00f3 per a una sensaci\u00f3 familiar. T\u00e9 com a objectiu resoldre els casos d\u2019\u00fas de Webpack m\u00e9s comuns.</p> <p>webpack</p> <p>webpack \u00e9s un empaquetador de m\u00f2duls. El seu objectiu principal \u00e9s agrupar fitxers JavaScript per al seu \u00fas en un navegador, per\u00f2 tamb\u00e9 \u00e9s capa\u00e7 de transformar, agrupar o empaquetar gaireb\u00e9 qualsevol recurs o actiu.</p> <p>Node.js i yarn</p> <p>Cal instal\u00b7lar <code>nodejs</code> i yarn per poder usar Webpack Encore.</p> <p>Node.js \u00e9s un entorn de programaci\u00f3 dissenyat per escriure aplicacions web escalables basat en javascript i yarn \u00e9s un gestor de paquets semblant a composer per\u00f2 orientat al frontend.</p> <p>M\u00e9s informaci\u00f3: Managing CSS and JavaScript</p>"},{"location":"08-symfony/09-altres-funcionalitats/#internatizonalitzacio","title":"Internatizonalitzaci\u00f3","text":"<p>La guia per internacionalitzar aplicacions de Symfony la trobareu en Translations.</p>"},{"location":"08-symfony/10-bundles/","title":"Els bundles de Symfony","text":""},{"location":"08-symfony/10-bundles/#introduccio","title":"Introducci\u00f3","text":"<p>Els bundles en Symfony s\u00f3n elements coneguts com a m\u00f2duls o plugins en altres frameworks. Es defineixen en l'arxiu config/bundles.php per a cada entorn (desenvolupament, producci\u00f3, etc), de manera que poden activar-se nom\u00e9s per a certs entorns.</p> <p>L'exemple m\u00e9s habitual de bundle espec\u00edfic per a un entorn \u00e9s el bundle profiler, que s'encarrega de mostrar la finestra d'error i depuraci\u00f3 cada vegada que es produeix un error en l'aplicaci\u00f3, mostrant el missatge i tra\u00e7a de l'error, usuari autenticat i altres dades que no s\u00f3n recomanables en un entorn de producci\u00f3. Aquest bundle nom\u00e9s est\u00e0 habilitat per a l'entorn de desenvolupament i proves, per\u00f2 no per a producci\u00f3.</p>"},{"location":"08-symfony/10-bundles/#bundles-preinstallats","title":"Bundles preinstal\u00b7lats","text":"<p>Si tirem la vista arrere, a la primera sessi\u00f3 del curs, vam veure que existien dues formes de crear un projecte Symfony:</p> <pre><code>composer create-project symfony/website-skeleton project-name\ncomposer create-project symfony/skeleton project-name\n</code></pre> <p>La primera d'elles \u00e9s la que hem usat fins ara, i deixa preinstalado un conjunt de bundles \u00fatils per a desenvolupar una aplicaci\u00f3 web amb Symfony. Entre ells est\u00e0 el motor de plantilles Twig, l'ORM Doctrine i uns altres.</p> <p>Si optem per crear un projecte mitjan\u00e7ant la segona opci\u00f3, obtindrem un projecte sense (quasi) cap funcionalitat afegida. Aquesta forma de definir projectes s'ha habilitat des de Symfony 4 per a donar cabuda a projectes m\u00e9s lleugers, on nom\u00e9s s'instal\u00b7le el necessari. No obstant a\u00e7\u00f2, com ja comentem abans, s'ha deixat disponible l'altra alternativa per a desenvolupar projectes de forma c\u00f2moda, amb moltes funcionalitats preinstaladas, encara que realment algunes no les anem a utilitzar.</p> <p>En qualsevol cas, conv\u00e9 tenir present que totes aqueixes funcionalitats preinstaladas en el nostre projecte, i moltes altres que podem requerir, s\u00f3n bundles o plugins externs al nucli de Symfony.</p> <p>En aquesta sessi\u00f3 veurem com afegir aquests bundles als projectes, i parlarem d'alguns bundles interessants a m\u00e9s dels quals ja hem vist.</p>"},{"location":"08-symfony/10-bundles/#installacio-de-bundles","title":"Instal\u00b7laci\u00f3 de bundles","text":"<p>Anem a provar a crear un projecte b\u00e0sic sense esquelet web. Per exemple, veu a la teua carpeta de treball (/home/alumne/symfony) i crea aquest projecte:</p> <p>composer create-project symfony/skeleton prova_bundles</p> <p>Si fas una ullada a l'estructura del projecte, veur\u00e0s que en la carpeta vendor amb prou faenes t\u00e9 un parell d'elements, mentre que aqueixa mateixa carpeta en l'aplicaci\u00f3 de contactes o llibres que hem vingut fent t\u00e9 molts m\u00e9s.</p> <p>Anem a fer ara el mateix que vam fer quan vam crear els projectes de contactes i llibres: configurar Apatxe per a poder accedir al projecte mitjan\u00e7ant un virtual host. Recordem els passos:</p> <ol> <li>Edita l'arxiu /etc/hosts (amb permisos de root) per a afegir un nou     domini local per a la nostra aplicaci\u00f3. Cridarem a aquest domini     symfony.bundles: 127.0.0.1 symfony.bundles</li> <li>Ja tindrem un parell de passos fets de projectes previs: configurar     la carpeta /home/alumne/symfony amb els permisos d'acc\u00e9s necessaris     per als projectes que tindrem dins, i habilitar la creaci\u00f3 d'hosts     virtuals en Apatxe. Aix\u00ed que aquests passos podem saltar-los ara</li> <li>Edita l'arxiu /opt/lampp/etc/extra/httpd\u00advhosts.conf i afig un nou     host virtual per a la nostra aplicaci\u00f3. Haur\u00e0 de quedar-te aix\u00ed:     \\&lt;VirtualHost *:80&gt; DocumentRoot     \"/home/alumne/symfony/prova_bundles/public\" ServerName     symfony.bundles</li> <li>Reinicia el servidor Apatxe, i intenta accedir a     http://symfony.bundles, per a veure la p\u00e0gina d'inici.</li> </ol>"},{"location":"08-symfony/10-bundles/#exemple-doctrine","title":". Exemple: Doctrine","text":"<p>Anem a fer una prova per a treballar amb Doctrine en el nostre nou projecte. Per a comen\u00e7ar, anem a crear una base de dades anomenada peliculas per a emmagatzemar certa informaci\u00f3 b\u00e0sica de pel\u00b7l\u00edcules. Per a crear la base de dades, editem l'arxiu .env del projecte i definim la URL de connexi\u00f3 a la base de dades, com hem fet per als projectes anteriors:</p> <p><pre><code>DATABASE_URL=mysql://root\\@127.0.0.1:3306/peliculas\n</code></pre> i despr\u00e9s, vam crear la base de dades amb el comando:</p> <pre><code>php bin/console doctrine:database:create\n</code></pre> <p>El que obtindrem en executar aquest comando \u00e9s un missatge d'error en la consola que indica que no troba el comando. Necessitem instal\u00b7lar el bundle Doctrine per a solucionar el problema. En realitat, instal\u00b7larem un bundle anomenat orm\u00adpack, que cont\u00e9 a Doctrine, juntament amb el bundle maker que \u00e9s el que permet generar cert codi autom\u00e0ticament, com per exemple les entitats. Per a a\u00e7\u00f2, escrivim aquests comandos des de la carpeta principal del projecte:</p> <pre><code>composer require symfony/orm-pack\n\ncomposer require symfony/maker-bundle --dev\n</code></pre> <p>Despr\u00e9s d'aquests passos, editem l'arxiu <code>.env</code> novament, i definim la URL de connexi\u00f3 a la base de dades (\u00e9s possible que s'haja duplicat amb aquesta instal\u00b7laci\u00f3). Despr\u00e9s, tornem a intentar crear la base de dades, i tot funcionar\u00e0 correctament.</p> <p>Intentem ara crear una entitat. En aquest cas, anem a crear una entitat anomenada Pelicula, amb un aneu autogenerado, un t\u00edtol (string) i un any.</p> <p><pre><code>php bin/console make:entity\n\nClass name of the entity to create or update (i.g.\u00a0OrangePizza):\n\nPelicula\n\nNew property name (press to stop adding fields):\n&gt;titule\n\nField type (enter? to see all types) [string]:\n\nstring\n\nField length [255]:\n&gt;255\n\nCan this field be null in the database (nullable) (yes/no) \\[no\\]:\n&gt;no\n\nAdd another property? Enter the property name (or press to stop adding\nfields):\n&gt;anyo\n\nField type (enter? to see all types) [string]:\n&gt;integer\n\nCan this field be null in the database (nullable) (yes/no) \\[no\\]:\n&gt;no\n\nAdd another property? Enter the property name (or press to stop adding\nfields):\n\nSuccess!\n\nA continuaci\u00f3, migramos els canvis a la base de dades:\n\n```shell\nphp bin/console make:migration\n\nphp bin/console doctrine:migration:migrate\n</code></pre> Ja tenim la base de dades creada, amb la seua taula pelicula. Podem inserir ara un parell de pel\u00b7l\u00edcules de prova, a m\u00e0 des de phpMyAdmin:</p> <p>Definim ara un controlador que cerque totes les pel\u00b7l\u00edcules i les mostre en la p\u00e0gina. Creem una classe PeliculaController en la carpeta src/Controller, amb un codi com a est:</p> <pre><code>getDoctrine()-\\&gt;getRepository(Pelicula::class); \\$peliculas =\n\\$repositori-\\&gt;findAll();\nif (count(\\$peliculas) \\&gt; 0 ) { \\$resultat = \\\"\\\"; foreach(\\$peliculas\nas \\$pelicula) \\$resultat .= \\$pelicula-\\&gt;getTitulo(). \\\" (\".\n\\$pelicula-\\&gt;getAnyo(). \\\")\\&lt;br /\\&gt;\\\"; return new Response(\\$resultat);\n} else { return new Response(\"No s'han trobat pel\u00b7l\u00edcules\\\"); } } }\n?\\&gt;\n</code></pre> <p>Abans de comprovar el funcionament, recorda configurar la reescriptura de rutes en l'aplicaci\u00f3, escrivint aquests comandos des de la carpeta principal del projecte:</p> <pre><code>composer config extra.symfony.allow-contrib true\ncomposer req symfony/apache-pack\n</code></pre> <p>Despr\u00e9s ja podrem accedir a movies-symfony/peliculas i veure el llistat en pantalla:</p> <p>En aquest punt, pots realitzar l'Exercici 1 dels proposats al final de la sessi\u00f3.</p>"},{"location":"08-symfony/10-bundles/#installacio-daltres-bundles-coneguts","title":"Instal\u00b7laci\u00f3 d'altres bundles coneguts","text":"<p>Al llarg d'aquestes sessions de curs hem estat utilitzant certs bundles de Symfony que tamb\u00e9 necessiten ser instal\u00b7lats (es van instal\u00b7lar autom\u00e0ticament a trav\u00e9s del website\u00adskeleton, i per a\u00e7\u00f2 no ens hem percatado). Fem un rep\u00e0s:</p> <ul> <li>Per a poder utilitzar anotacions (com l'anotaci\u00f3 \\@Route que     emprem per a definir les rutes de l'aplicaci\u00f3), necessitem     instal\u00b7lar el bundle annotations. Aquest bundle \u00e9s dels pocs que     s'instal\u00b7len en el skeleton b \u00e1sico de Symfony. Encara aix\u00ed, per a     instal\u00b7lar-ho manualment si f\u00f3ra el cas, haur\u00edem d'executar el     comando: composer require annotations</li> <li>Per a poder emprar el gestor de formularis de Symfony, i     crear-los i validar-los mitjan\u00e7ant codi, hem d'instal\u00b7lar els     bundles forms i validator, respectivament, d'aquesta manera:     composer require symfony/form composer require symfony/validator</li> <li>Per a aplicar la infraestructura de seguretat de Symfony en la     nostra aplicaci\u00f3, i poder definir rols, rutes protegides, etc,     necessitarem instal\u00b7lar el bundle security, as \u00ed: composer require     symfony/security-bundle</li> <li>Per a poder disposar del motor de plantilles Twig , necessitarem     instal\u00b7lar-ho tamb\u00e9: composer require twig-bundle</li> </ul> <p>Com diem, tots aquests bundles es preinstalan en crear el projecte a partir del website\u00adskeleton, per\u00f2 no estan disponibles (excepte les anotacions), si ho vam crear a partir del skeleton b \u00e1sico. En una secci\u00f3 posterior veurem altres bundles addicionals que puguen resultar-nos \u00fatils, a m\u00e9s d'aquests que ja hem vingut usant.</p>"},{"location":"08-symfony/10-bundles/#mes-bundles-interessants","title":"M\u00e9s bundles interessants","text":"<p>Ara que ja sabem com crear un projecte quasi buit en Symfony i instal\u00b7lar manualment els bundles que necessitem, vegem alguns bundles addicionals que poden resultar \u00fatils, a m\u00e9s dels quals hem comentat ja, i vingut usant en sessions pr\u00e8vies (Twig, Doctrine, seguretat...).</p> <p>Existeixen diferents webs on poder obtenir informaci\u00f3 d'aquests bundles:</p> <ul> <li>packagist.org, un repositori de paquets PHP en general, entre els     quals podem trobar nombrosos bundles de Symfony, molts d'ells     desenvolupats pel propi equip de Symfony, entre els quals     s'inclouen els ja vistos (orm\u00adpack, validator, twig\u00adbundle, etc).</li> <li>knpbundles.com, una web mantinguda per la companyia KNP, que \u00e9s una     de les quals m\u00e9s suport donen a Symfony quant a bundles es refereix.     En ella trobarem tant bundles desenvolupats per aquesta companyia,     com per unes altres, com per exemple FOS (FriendsOfSymfony), un grup     de desenvolupament que va comen\u00e7ar formant part de l'equip de KNP,     per\u00f2 que despr\u00e9s va decidir desenvolupar bundles sota un espai de     noms propi.</li> </ul>"},{"location":"08-symfony/10-bundles/#exemple-easyadmin","title":"Exemple: EasyAdmin","text":"<p>Vegem com instal\u00b7lar i treballar amb el bundle EasyAdmin. Aquest bundle permet definir de forma autom\u00e0tica un administrador per a gestionar les entitats de la nostra aplicaci\u00f3. La seua instal\u00b7laci\u00f3 \u00e9s molt senzilla, a trav\u00e9s d'aquest comando:</p> <pre><code>composer require admin\n</code></pre> <p>Despr\u00e9s, hem d'editar l'arxiu config/packages/easy_admin.yaml que s'haur\u00e0 creat, i afegir les entitats que vulguem gestionar:</p> <p><pre><code>easy_admin:\nentities: \\# List the entity class name you want to manage\n-   App\n</code></pre> I a\u00e7\u00f2 \u00e9s tot. Accedint a la URI /admin en la nostra aplicaci\u00f3, podrem gestionar les entitats indicades. Si seguim aquests passos en la nostra aplicaci\u00f3 symfony.bundles, i afegim l'entitat Pelicula com en l'exemple anterior, podem accedir a symfony.bundles/admin i gestionar aquesta taula i els seus elements:</p> <p>Existeixen altres opcions de configuraci\u00f3 del bundle, com per exemple protegir l'acc\u00e9s amb contrasenya i altres opcions. Per a m\u00e9s informaci\u00f3, podeu consultar la documentaci\u00f3 oficial.</p> <p>En aquest punt, pots realitzar l'Exercici 2 dels proposats al final de la sessi\u00f3.</p>"},{"location":"08-symfony/10-bundles/#exemple-jens-segers-date","title":"Exemple: Jens Segers Date","text":"<p>Aquest altre bundle permet treballar amb dates de forma senzilla, convertint cadenes a dates amb un format determinat, establint locals per a diferents localitzacions, fent c\u00e0lculs entre dates, etc.</p> <p>S'instal\u00b7la amb el seg\u00fcent comando:</p> <pre><code>composer require jenssegers/date\n</code></pre> <p>Despr\u00e9s, n'hi ha prou amb utilitzar la classe Date per a accedir a les seues propietats i m\u00e8todes. Per a provar el seu \u00fas, crearem un nou m\u00e8tode en la nostra classe PeliculaController, associat a la ruta /dates. Dins, crearem la data actual, que mostrarem amb un format determinat per pantalla. Tamb\u00e9 crearem una data a partir d'una cadena de text, i calcularem la difer\u00e8ncia entre aqueixa data i avui.</p> <p><pre><code>use Jenssegers; ... /\\*\\* \\* \\@Route(\"/dates\", name=\"dates\") \\*/ public\nfunction dates() { D\u00f3na't::setLocale('\u00e9s'); \\$avui = D\u00f3na't::now();\n\\$naixement = D\u00f3na't::createFromFormat('d/m/I', '7/4/1978');\n\\$diferencia = \\$naixement-\\&gt;timespan();\nreturn new Response('Avui \u00e9s'. \\$avui-\\&gt;format('d/m/I'). ''. 'Naixement\nel'. \\$naixement-\\&gt;format('d/m/i'). ''. 'Han passat:'. \\$difer\u00e8ncia);\n}\n</code></pre> L'eixida ser\u00e0 alguna cosa semblat a a\u00e7\u00f2 (variar\u00e0 depenent de la data actual):</p> <p>Intenta realitzar l'Exercici 3 proposat al final de la sessi\u00f3, de car\u00e0cter opcional.</p>"},{"location":"08-symfony/10-bundles/#symfony-flex","title":"Symfony Flex","text":"<p>Symfony Flex \u00e9s una nova forma d'instal\u00b7lar i gestionar components en projectes Symfony, disponible des de la seua versi\u00f3 3.3. Ve a reempla\u00e7ar a l'anterior instal\u00b7lador de Symfony, i al Symfony Standard Edition, que, com comentem en la primera sessi\u00f3 del curs, suposava una instal\u00b7laci\u00f3 molt m\u00e9s extensa i monol\u00edtica del framework.</p> <p>Amb Symfony Flex s'automatitzen algunes tasques habituals, com instal\u00b7lar o desinstal\u00b7lar bundles. De fet, des de Symfony 4 \u00e9s el m\u00e8tode que s'empra per defecte per a aquestes instal\u00b7lacions (encara que el seu \u00fas segueix sent opcional), i ens evita haver d'editar a m\u00e0 l'arxiu config/bundles.php per a donar d'alta els nous bundles instal\u00b7lats, o llevar els que ja no estiguem emprant. Per aquest motiu hem pogut emprar Doctrine en un exemple anterior sense haver hagut de tocar la configuraci\u00f3 del projecte.</p> <p>No entrarem en els detalls sobre els arxius de configuraci\u00f3 i les dades que empra Flex per a gestionar aquestes tasques, ja que no forma part del nucli del curs, per\u00f2 s\u00ed considerem necessari que es conega la seua exist\u00e8ncia per a saber per qu\u00e8 s'autoconfiguran certes coses en els projectes sense que h\u00e0gem d'intervenir.</p> <p>2.5. Creaci\u00f3 de bundles propis</p> <p>A m\u00e9s d'instal\u00b7lar i utilitzar bundles de tercers, tamb\u00e9 podem elaborar els nostres propis. De fet, fins a l'aparici\u00f3 de Symfony 4 es recomanava que tota l'aplicaci\u00f3 estiguera estructurada en bundles (\u00e9s a dir, que els propis components que desenvolup\u00e0rem per a l'aplicaci\u00f3 tamb\u00e9 anaren bundles), per\u00f2 a partir d'aquesta versi\u00f3 4 ja no es recomana aquesta estructura, i s'indica que els bundles s'empren per a compartir codi entre m\u00faltiples aplicacions. En qualsevol cas, per a crear el nostre bundle hem de seguir una estructura recomanada des de la documentaci\u00f3 oficial de Symfony.</p> <p>La creaci\u00f3 de bundles propis queda fora dels objectius principals del curs, per la qual cosa no la veurem amb detall. A m\u00e9s, existeixen multitud de bundles ja predefinits que permetran cobrir la immensa majoria de les nostres necessitats. En qualsevol cas, ac\u00ed teniu un punt de partida que seguir per a saber m\u00e9s sobre aquest tema.</p> <ol> <li>Exercicis</li> </ol> <p>3.1. Exercici 1</p> <p>Anem a crear un projecte similar al de proves que hem fet en el primer exemple d'aquesta sessi\u00f3. En aquest cas, anem a crear un projecte per a gestionar tasques pendents. El comando de creaci\u00f3 del projecte (des de la nostra carpeta /home/alumne/ symfony) ser\u00e0 aquest:</p> <p>composer create symfony/skeleton tasques</p> <p>Despr\u00e9s, segueix aquests passos:</p> <ol> <li>Fes que aquest nou projecte siga accessible des del domini     symfony.tasques.</li> <li>Instal\u00b7la Doctrine (bundles orm\u00adpack i maker, com s'ha fet en     l'exemple anterior), i crea i connecta amb una base de dades     anomenada tasques, editant l'arxiu .env per a a\u00e7\u00f2.</li> <li>Crea una entitat anomenada Tasca amb aquests camps: \u25e6 Un aneu     autogenerado \u25e6 La descripci\u00f3 de la tasca (string de 255 car\u00e0cters de     longitud, sense nuls) \u25e6 La data de la tasca (tipus d\u00f3na't, sense     nuls) \u25e6 La prioritat de la tasca (sencer, sense nuls) Actualitza la     base de dades amb aquesta entitat, i crea a m\u00e0 un parell de tasques     en ella a trav\u00e9s de phpMyAdmin. Procura que les prioritats tinguen     valors entre 1 (ALTA) i 3 (BAIXA), ja que definirem aquest rang en     la pr\u00f2xima sessi\u00f3.</li> <li>Crea un controlador en src/Controller anomenat TareaController.     Defineix un m\u00e8tode que, en carregar-se la URI /tasques mostre un     llistat de les tasques en pantalla, sense un format espec\u00edfic.     Recorda configurar la reescriptura de rutes perqu\u00e8 aquesta URI     funcione.</li> </ol> <p>NOTA : per a mostrar la data com a part d'una cadena, pots</p> <p>utilitzar el m\u00e8tode format del propi objecte DateTime:</p> <p>\\$tasca-&gt;getFecha()-&gt;format(\"d/m/I\").</p> <p>3.2. Exercici 2</p> <p>Instal\u00b7la el bundle EasyAdmin, configura-ho per a treballar amb l'entitat Tasca i crea amb ell unes quantes tasques m\u00e9s en la base de dades.</p> <p>3.3. Exercici 3 (opcional)</p> <p>Utilitza el bundle jenssegers/d\u00f3na't en l'aplicaci\u00f3 de tasques, i defineix un nou m\u00e8tode en TareaController amb URI /temps, que indique per a cada tasca de la base de dades quant temps falta perqu\u00e8 finalitze el termini. Per exemple:</p>"},{"location":"08-symfony/11-relacions-molts-a-molts/","title":"Relacions molts a molts","text":""},{"location":"08-symfony/11-relacions-molts-a-molts/#introduccio","title":"Introducci\u00f3","text":"<p>Fins ara hem treballat amb relacions senzilles ManyToOne, molts a una. En la seg\u00fcent  sessi\u00f3 anem a implementar una relaci\u00f3 molts a molts (ManyToMany) en Doctrine.</p> <p>En el nostre cas volem que els usuaris de l'aplicaci\u00f3 de  pel\u00b7l\u00edcules puguen valorar-les de 1 a 5. Aix\u00ed, per reflectir la nova estructura de dades necessitarem crear una relaci\u00f3 N:N entre usuaris i pel\u00b7l\u00edcules.</p> <p>Alert</p> <p>Si a banda de les claus alienes, en la nova taula volem afegir nous camps caldr\u00e0, des del punt de vista de Doctrine, convertir la relaci\u00f3 N:N en dues  relacions N:1 amb la taula central de la relaci\u00f3.</p> <p>Aix\u00ed doncs, crearem una nova entitat <code>Rating</code> que a banda de les claus alienes contindr\u00e0 el camp <code>value</code> de tipus enter que emmagatzemar\u00e0 la valoraci\u00f3 de l'usuari per a una pel\u00b7l\u00edcula determinada.</p>"},{"location":"08-symfony/11-relacions-molts-a-molts/#entitat-rating","title":"Entitat Rating","text":"<p>Creem la entitat <code>Rating</code>:</p> <pre><code>php bin/console make:entity\n\n Class name of the entity to create or update (e.g. VictoriousPizza):\n &gt; Rating\n\n created: src/Entity/Rating.php\n created: src/Repository/RatingRepository.php\n\n Entity generated! Now let's add some fields!\n You can always add more fields later manually or by re-running this command.\n\n New property name (press &lt;return&gt; to stop adding fields):\n &gt; user\n\n Field type (enter ? to see all types) [string]:\n &gt; relation\n\n What class should this entity be related to?:\n &gt; User\n\nWhat type of relationship is this?\n ------------ ------------------------------------------------------------------ \n  Type         Description                                                       \n ------------ ------------------------------------------------------------------ \n  ManyToOne    Each Rating relates to (has) one User.                            \n               Each User can relate to (can have) many Rating objects            \n\n  OneToMany    Each Rating can relate to (can have) many User objects.           \n               Each User relates to (has) one Rating                             \n\n  ManyToMany   Each Rating can relate to (can have) many User objects.           \n               Each User can also relate to (can also have) many Rating objects  \n\n  OneToOne     Each Rating relates to (has) exactly one User.                    \n               Each User also relates to (has) exactly one Rating.               \n ------------ ------------------------------------------------------------------ \n\n Relation type? [ManyToOne, OneToMany, ManyToMany, OneToOne]:\n &gt; ManyToOne\n\n Is the Rating.user property allowed to be null (nullable)? (yes/no) [yes]:\n &gt; no\n\n Do you want to add a new property to User so that you can access/update \n Rating objects from it - e.g. $user-&gt;getRatings()? (yes/no) [yes]:\n &gt; yes\n\n A new property will also be added to the User class so that you can access the \n  related Rating objects from it.\n\n New field name inside User [ratings]:\n &gt; ratings\n\n Do you want to activate orphanRemoval on your relationship?\n A Rating is \"orphaned\" when it is removed from its related User.\n e.g. $user-&gt;removeRating($rating)\n\n NOTE: If a Rating may *change* from one User to another, answer \"no\".\n\n Do you want to automatically delete orphaned App\\Entity\\Rating objects \n (orphanRemoval)? (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/Rating.php\n updated: src/Entity/User.php\n\n Add another property? Enter the property name (or press &lt;return&gt; to stop \n  adding fields):\n &gt; movie\n\n Field type (enter ? to see all types) [string]:\n &gt; ManyToOne\n\n What class should this entity be related to?:\n &gt; Movie\n\n Is the Rating.movie property allowed to be null (nullable)? (yes/no) [yes]:\n &gt; no\n\n Do you want to add a new property to Movie so that you can access/update \n Rating objects from it - e.g. $movie-&gt;getRatings()? (yes/no) [yes]:\n &gt; yes\n\n A new property will also be added to the Movie class so that you can access \n the related Rating objects from it.\n\n New field name inside Movie [ratings]:\n &gt; ratings\n\n Do you want to activate orphanRemoval on your relationship?\n A Rating is \"orphaned\" when it is removed from its related Movie.\n e.g. $movie-&gt;removeRating($rating)\n\n NOTE: If a Rating may *change* from one Movie to another, answer \"no\".\n\n Do you want to automatically delete orphaned App\\Entity\\Rating objects \n  (orphanRemoval)? (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/Rating.php\n updated: src/Entity/Movie.php\n\n Add another property? Enter the property name (or press &lt;return&gt; to stop \n  adding fields):\n &gt; value\n\n Field type (enter ? to see all types) [string]:\n &gt; integer\n\n Can this field be null in the database (nullable) (yes/no) [no]:\n &gt; no\n\n updated: src/Entity/Rating.php\n\n Add another property? Enter the property name (or press &lt;return&gt; to stop \n  adding fields):\n &gt; \n\n  Success! \n</code></pre> <p>La nova entitat Rating ser\u00e0 aix\u00ed:</p> <pre><code>namespace App\\Entity;\nuse App\\Repository\\RatingRepository;\nuse Doctrine\\ORM\\Mapping as ORM;\n/**\n * @ORM\\Entity(repositoryClass=RatingRepository::class)\n */\nclass Rating\n{\n/**\n     * @ORM\\Id\n     * @ORM\\GeneratedValue\n     * @ORM\\Column(type=\"integer\")\n     */\nprivate $id;\n/**\n     * @ORM\\ManyToOne(targetEntity=User::class, inversedBy=\"ratings\")\n     * @ORM\\JoinColumn(nullable=false)\n     */\nprivate $user;\n/**\n     * @ORM\\ManyToOne(targetEntity=Movie::class, inversedBy=\"ratings\")\n     * @ORM\\JoinColumn(nullable=false)\n     */\nprivate $movie;\n/**\n     * @ORM\\Column(type=\"integer\")\n     */\nprivate $value;\npublic function getId(): ?int\n{\nreturn $this-&gt;id;\n}\npublic function getUser(): ?User\n{\nreturn $this-&gt;user;\n}\npublic function setUser(?User $user): self\n{\n$this-&gt;user = $user;\nreturn $this;\n}\npublic function getMovie(): ?Movie\n{\nreturn $this-&gt;movie;\n}\npublic function setMovie(?Movie $movie): self\n{\n$this-&gt;movie = $movie;\nreturn $this;\n}\npublic function getValue(): ?int\n{\nreturn $this-&gt;value;\n}\npublic function setValue(int $value): self\n{\n$this-&gt;value = $value;\nreturn $this;\n}\n}\n</code></pre> <p>Destacar l'argument <code>inversedBy=\"ratings\"</code> que indica quin atribut de la classe relacionada, Movie en l'exemple, podrem usar per tindre  totes les valoracions dels usuaris.</p> <p>Ara caldr\u00e0 fer les migracions:</p> <p><pre><code>public function up(Schema $schema) : void\n{\n// this up() migration is auto-generated, please modify it to your needs\n$this-&gt;addSql('CREATE TABLE rating (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, \n        movie_id INT NOT NULL, value INT NOT NULL, INDEX IDX_D8892622A76ED395 (user_id), \n        INDEX IDX_D88926228F93B6FC (movie_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 \n        COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');\n$this-&gt;addSql('ALTER TABLE rating \n        ADD CONSTRAINT FK_D8892622A76ED395 \n        FOREIGN KEY (user_id) REFERENCES user (id)');\n$this-&gt;addSql('ALTER TABLE rating \n        ADD CONSTRAINT FK_D88926228F93B6FC \n        FOREIGN KEY (movie_id) REFERENCES movie (id)');\n}\n</code></pre> A banda d'aix\u00f2 caldr\u00e0 afegir una clau \u00fanica sobre els atributs movie i user perqu\u00e8 restringir que un usuari no puga valorar dues vegades la mateixa pel\u00b7l\u00edcula.</p> <pre><code>/*\n * @Table(name=\"rating\",\n *      uniqueConstraints={\n *          @UniqueConstraint(name=\"IDX_USER_MOVIE_UNIQUE\",\n *                  columns={\"user_id\", \"movie_id\"}\n *          )\n *      }\n * )\n */\n</code></pre> <p>Si observem les refer\u00e8ncies es realitzen als camps de la taula ja que es defineixen sobre la taula relacionada amb l'entitat.</p> <p>Ara crearem el formulari b\u00e0sic per permetre als usuaris valorar pel\u00b7l\u00edcules.  Aquest formulari estar\u00e0 en la p\u00e0gina de detall de la pel\u00b7l\u00edcula.</p> <pre><code>// src/Form/RatingType.php\nclass RatingType extends AbstractType\n{\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n$builder\n-&gt;add('value', ChoiceType::class,\n[   'label'=&gt;false, \n'choices' =&gt; [1 =&gt; 1, 2=&gt;2 , 3=&gt;3, 4=&gt;4, 5=&gt;5],\n'placeholder'=&gt;'Select a value'\n])\n;\n}\n...\n}\n</code></pre> <p>En el formulari sols apareix l'atribut <code>value</code> perqu\u00e8 l'usuari i la pel\u00b7l\u00edcula els obtindrem internament.</p> <p><pre><code> /**\n     * @Route(\"/movies/{id}\", name=\"movies_show\", requirements={\"id\"=\"\\d+\"})\n     */\npublic function show(Movie $movie, Request $request)\n{\n$user = $this-&gt;getUser();\n$ratingRepository = $this-&gt;getDoctrine()-&gt;getRepository(Rating::class);\n// we find a related rating\n$ratings = $ratingRepository-&gt;findBy([\"movie\"=&gt;$movie, \"user\"=&gt;$user]);\n// if not we created a new one\nif (empty($ratings)) {\n$rating = new Rating();\n$rating-&gt;setMovie($movie);\n$rating-&gt;setUser($user);\n}\n// if yes we extract the first element from the returned array\nelse\n$rating = $ratings[0];\n$form = $this-&gt;createForm(RatingType::class, $rating);\n$form-&gt;handleRequest($request);\nif ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) {\n$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$entityManager-&gt;persist($rating);\n$entityManager-&gt;flush();\n$this-&gt;addFlash('success', 'Your rating has been saved!');\n}\nif ($movie) {\nreturn $this-&gt;render('movies_show.html.twig',\n[\n'movie' =&gt; $movie,\n'form' =&gt; $form-&gt;createView()\n]\n);\n}\n}\n...\n}\n</code></pre> El que fem primer es veure si ja existeix una valoraci\u00f3 de l'usuari d'eixa pel\u00b7l\u00edcula, en cas d'existir la recuperem i si no hi ha en creem una. Amb eixa informaci\u00f3 generem el formulari: {% raw %} <pre><code>{% if app.user %}\n{{ form_start(form, {attr: {class: 'form-inline'}}) }}\n{{ form_widget(form) }}\n        &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Rate!&lt;/button&gt;\n{{ form_end(form) }}\n{% endif %}\n</code></pre> {% endraw %} El formulari t\u00e9 la classe <code>form-inline</code> perqu\u00e8 aparega tot en una l\u00ednia.</p>"},{"location":"08-symfony/11-relacions-molts-a-molts/#calcular-la-valoracio-per-pellicula","title":"Calcular la valoraci\u00f3 per pel\u00b7l\u00edcula","text":"<p>El c\u00e0lcul de la mitjana de les valoracions el realitzarem mitjan\u00e7ant un camp calculat, \u00e9s a dir, no el tindrem en la base da dades sin\u00f3 que el calcularem quan siga cridat.</p> <p>Ho farem en l'entitat <code>Movie</code>, afegint el m\u00e8tode <code>getRating()</code>.</p> <pre><code> public function getRating(): ?float {\n$sum = 0;\nforeach ($this-&gt;getRatings() as $rating) {\n$sum += $rating-&gt;getValue();\n}\n$count = count($this-&gt;getRatings());\nif (empty($count))\nreturn null;\nreturn ($sum/$count);\n}\n</code></pre> <p>Aix\u00ed podrem mostrar la valoraci\u00f3 de cada pel\u00b7l\u00edcula en Twig indicat la propietat <code>rating</code>.</p> <p>{% raw %} <pre><code>&lt;p class=\"text-muted\"&gt;Rating: {{ movie.rating }}&lt;/p&gt;\n</code></pre></p>"},{"location":"08-symfony/12-missatges-flaix/","title":"Missatges flaix","text":"<p>Els missatges flaix ja el coneixes, en Symfony, funcionen de la mateixa forma, s'escriuen  en una variable de sessi\u00f3 i una vegada s\u00f3n llegits en la p\u00e0gina de dest\u00ed desapareixen.</p> <p>Per exemple:</p> <p><pre><code>   $this-&gt;addFlash(\n'success',\n'Your changes were saved!'\n);\n</code></pre> El primer par\u00e0metre pots qualsevol nom. En el nostre cas, com que usem bootstrap \u00e9s convenient que la etiqueta coincidisca amb les classes preestarblertes: <code>success</code>, <code>danger</code>,<code>warning</code>, <code>info</code>, etc.</p>"},{"location":"08-symfony/12-missatges-flaix/#canvis-en-la-plantilla-ase","title":"Canvis en la plantilla ase","text":"<p>Per a integrar-los en la plantilla base pots usar aquest codi:</p> <p>{% raw %} <pre><code> {# read and display all flash messages #}\n{% for label, messages in app.flashes %}\n{% for message in messages %}\n            &lt;div class=\"alert alert-{{ label }} alert-dismissible fade show\" role=\"alert\"&gt;\n{{ message }}\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"&gt;\n                    &lt;span aria-hidden=\"true\"&gt;&amp;times;&lt;/span&gt;\n                &lt;/button&gt;\n            &lt;/div&gt;\n{% endfor %}\n{% endfor %}\n</code></pre></p> <p>Com es pot observar la variable <code>label</code>, ser\u00e0 la determinar\u00e0 la classe que s'aplicar\u00e0.</p> <p>M\u00e9s informaci\u00f3 en Flash Messages</p>"},{"location":"08-symfony/12-missatges-flaix/#parameters-globals","title":"Par\u00e0meters globals","text":"<p>Com ja hem vist en les sessions introduct\u00f2ries podem crear par\u00e0metres globlals per poder-los usar des de qualsevol lloc de l'aplicaci\u00f3.</p> <p>Anem a aplicar-ho al directori on es guarden els posters. Definirem un par\u00e0metre <code>posters_directory</code> que indicar\u00e0 quin \u00e9s el directori.</p> <pre><code>parameters:\nposters_directory: '%kernel.project_dir%/public/images/posters'\n</code></pre> <p>La variable d'entorn <code>%kernel.project_dir%</code> representa el directori on tenim el nostre projecte Symfony. </p> <p>Ara modificarem el controlador perqu\u00e8 agafe la ruta del par\u00e0metre:</p> <p><pre><code>   ...\ntry {\n$postersDir = $this-&gt;getParameter('posters_directory');\n$posterFile-&gt;move($postersDir, $filename);\n$movie-&gt;setPoster($filename);\n} catch (FileException $e) {\n...\n</code></pre> Tamb\u00e9 podem crear par\u00e0metres globals per a usar-los en les plantilles de Twig. Per exemple, per a indicar la ruta p\u00fablica dels p\u00f2sters:</p> <pre><code># config/packages/twig.yaml\ntwig:\n...\nglobals:\nposters_public_directory: 'images/posters/'\n</code></pre> <p>I l'usariem aix\u00ed:</p> <pre><code>&lt;img class=\"card-img-top\" src=\"{{ asset(posters_public_directory ~  movie.poster) }}\" \ntitle=\"{{ movie.title }}\"&gt;&lt;/a&gt;\n</code></pre>"},{"location":"08-symfony/13-creacio-api-basica/","title":"Integraci\u00f3 de Javascript i Symfony","text":"<p>Junt al bundle Encore s'instal\u00b7la suport per a Stimulus, un framework  lleuger JavaScript que fa f\u00e0cil adjuntar comportament a HTML. A m\u00e9s Symfony  inclou paquets per afegir m\u00e9s caracter\u00edstiques a Stimulus. </p> <p>El prop\u00f2sit del fitxer <code>assets/bootstrap.js</code> \u00e9s inicialitzar Stimulus i carregar  autom\u00e0ticament qualsevol \"controlador\" del directori <code>assets/controllers/</code>.</p>"},{"location":"08-symfony/13-creacio-api-basica/#cas-dus-fer-magrada","title":"Cas d'\u00fas: fer m'agrada","text":"<p>L'objectiu \u00e9s implementar la funcionalitat de M'agrada amb Javascript, usant el m\u00e8tode <code>fetch</code>.</p> <p>Primerament crearem una interacci\u00f3 simple en qu\u00e8 en fer M'agrada s'incrementar\u00e0 el comptador de likes.</p>"},{"location":"08-symfony/13-creacio-api-basica/#pas-1-controlador-stimulus","title":"Pas 1: Controlador stimulus","text":"<p>El seg\u00fcent codi afig un esdeveniment que en fer clic sobre l'element associat incrementa el comptador  de likes i l'escriu en el  target <code>count</code>.</p> <pre><code>import { Controller } from '@hotwired/stimulus';\n/*\n* The following line makes this controller \"lazy\": it won't be downloaded until needed\n* See https://github.com/symfony/stimulus-bridge#lazy-controllers\n*/\n/* stimulusFetch: 'lazy' */\nexport default class extends Controller {\nstatic targets = ['count']\nconnect() {\nthis.count = 0;\nthis.element.addEventListener('click', (event) =&gt; {\nthis.count++;\nthis.countTarget.innerText = this.count;\nevent.preventDefault();\n});\n}\n// ...\n}\n</code></pre> <p>L'array <code>targets</code> inclou els elements v\u00e0lids sobre els quals volem actuar i  el m\u00e8tode <code>connect()</code> s'executa autom\u00e0ticament quan s'assigna el controlador a qualsevol element.</p>"},{"location":"08-symfony/13-creacio-api-basica/#pas-2-adaptacio-de-la-vista","title":"Pas 2: Adaptaci\u00f3 de la vista","text":"<p>Afegirem els atributs <code>data-controler</code> amb el nom del controlador i <code>data-like-target</code> amb el nom amb qu\u00e8 volem identificar l'element que modificarem des del controlador, <code>count</code> en l'exemple.</p> <pre><code>&lt;div data-controller=\"like\" class=\"pe-5\"&gt;\n{%  if app.user not in truit.linkingUsers  %}\n&lt;a title=\"M'agrada\" href=\"{{ path('tweet_like', { id: truit.id }) }}\"&gt;&lt;i class=\"bi bi-heart\"&gt;&lt;/i&gt;&lt;/a&gt;\n{% else %}\n&lt;i class=\"text-danger bi bi-heart-fill\"&gt;&lt;/i&gt;\n{% endif %}\n&lt;span data-like-target=\"count\" class=\"ms-1\"&gt;{{ truit.likeCount }}&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"08-symfony/13-creacio-api-basica/#pas-3-creacio-de-lendpoint","title":"Pas 3. Creaci\u00f3 de l'endpoint","text":"<p>Farem una versi\u00f3 del m\u00e8tode <code>like</code> que en lloc de fer una redirecci\u00f3 retornar\u00e0 una resposta en format JSON.</p> <pre><code>#[Route('/api/tweets/{id}/like', name: 'api_tweet_like')]\npublic function apiLike(Tweet $tweet, TweetRepository $tweetRepository): Response {\n$user = $this-&gt;getUser();\nif (!$user)\nreturn new JsonResponse([\"result\"=&gt;\"ko\"], Response::HTTP_UNAUTHORIZED);\nif ($tweet-&gt;getLinkingUsers()-&gt;contains($user))\nreturn new JsonResponse([\"result\"=&gt;\"ko\"], Response::HTTP_OK);\n$tweet-&gt;addLinkingUser($user);\n$tweet-&gt;setLikeCount($tweet-&gt;getLikeCount() + 1);\n$tweetRepository-&gt;save($tweet, true);\nreturn new JsonResponse([\"result\"=&gt;\"ok\"], Response::HTTP_OK);\n}\n</code></pre>"},{"location":"08-symfony/13-creacio-api-basica/#pas-4-adaptacio-de-la-vista","title":"Pas 4: Adaptaci\u00f3 de la vista","text":"<p>Afegirem l'atribut <code>data-like-url-value</code> amb la URL de l'endpoint i un nou target anomenat <code>icon</code>, aquest ens permetr\u00e0 modificar la icona.</p> <pre><code>&lt;div data-controller=\"like\" \ndata-like-url-value=\"{{ path('api_tweet_like', { id: truit.id }) }}\" class=\"pe-5\"&gt;\n{%  if app.user not in truit.linkingUsers  %}\n&lt;a title=\"M'agrada\" data-like-target=\"icon\" href=\"{{ path('tweet_like', { id: truit.id }) }}\"&gt;&lt;i class=\"bi bi-heart\"&gt;&lt;/i&gt;&lt;/a&gt;\n{% else %}\n&lt;i class=\"text-danger bi bi-heart-fill\"&gt;&lt;/i&gt;\n{% endif %}\n&lt;span data-like-target=\"count\" class=\"ms-1\"&gt;{{ truit.likeCount }}&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"08-symfony/13-creacio-api-basica/#pas-5-versio-final-del-controlador","title":"Pas 5: Versi\u00f3 final del controlador","text":"<pre><code>import { Controller } from '@hotwired/stimulus';\n/*\n* The following line makes this controller \"lazy\": it won't be downloaded until needed\n* See https://github.com/symfony/stimulus-bridge#lazy-controllers\n*/\n/* stimulusFetch: 'lazy' */\nexport default class extends Controller {\nstatic targets = ['count', 'icon']\nstatic values = {\nurl: String,\n}\nconnect() {\nthis.count = 0;\nthis.element.addEventListener('click', (event) =&gt; {\nthis.load();\nevent.preventDefault();\nconsole.log(this.urlValue);\n});\n}\nload() {\nfetch(this.urlValue)\n.then(response =&gt; response.json())\n.then(data =&gt; this.update(data))\n}\nupdate(data) {\nif (data.result === \"ok\") {\nthis.count++;\nthis.countTarget.innerText = this.count;\nthis.iconTarget.innerHTML = \"&lt;i class=\\\"text-danger bi bi-heart-fill\\\"&gt;&lt;/i&gt;\";\n}\n}\n// ...\n}\n</code></pre>"},{"location":"08-symfony/13-creacio-api-basica/#recursos","title":"Recursos","text":"<p>https://symfony.com/doc/current/frontend/encore/simple-example.html#stimulus-symfony-ux https://symfonycasts.com/screencast/stimulus/properties-events https://stimulus.hotwired.dev/</p>"},{"location":"08-symfony/13-creaci%C3%B3-api-b%C3%A0sica/","title":"Creaci\u00f3 d'una API b\u00e0sica amb Symfony","text":"<p>Abans d'entrar en mat\u00e8ria alguns conceptes: * Serialitzar. La serialitzaci\u00f3 \u00e9s el proc\u00e9s de convertir un objecte en una altre format per a emmagatzemar-lo o transmetre'l i posteriorment ser decodificat. * Normalitzar. Ajuden en el proc\u00e9s de serialitzaci\u00f3, convertint els objectes en un element intermig, com pot ser una array.</p> <p></p> <p>El seg\u00fcent codi genera una API en la aplicaci\u00f3 de pel\u00b7l\u00edcules:</p> <pre><code>**\n* @Route(\"/api/v1/movies\")\n*/\nclass ApiController extends AbstractController\n{\n/**\n     * @Route(\"/\", name=\"api_movies_links\", methods={\"GET\"})\n     * @param Request $request\n     * @param MovieRepository $movieRepository\n     * @return JsonResponse\n     */\npublic function index(Request $request, MovieRepository $movieRepository): JsonResponse\n{\n$movies = $movieRepository-&gt;findAll();\nreturn new JsonResponse($movies, Response::HTTP_OK);\n}\n/**\n     * @Route(\"/{id}\", name=\"api_moives_show\", methods={\"GET\"})\n     * @param Request $request\n     * @return JsonResponse\n     */\npublic function show(Request $request,  ?Movie $movie): JsonResponse\n{\nif (!empty($movie))\nreturn new JsonResponse($movie, Response::HTTP_OK);\nelse\nreturn new JsonResponse(\"error\", Response::HTTP_NOT_FOUND);\n}\n/**\n     *\n     * @Route(\"/\", name=\"api_movies_create\", methods={\"POST\"})\n     */\npublic function create(Request $request): JsonResponse\n{\n$movie = new Movie();\n$data = [];\nif ($content = $request-&gt;getContent()) {\n$data = json_decode($content, true);\n}\ntry {\n$movie-&gt;setTitle($data[\"title\"]);\n$movie-&gt;setOverview($data[\"overview\"]);\n$movie-&gt;setTagline($data[\"tagline\"]);\n$movie-&gt;setPoster($data[\"poster\"]);\n$movie-&gt;setReleaseDate(new \\DateTime($data[\"release_date\"]));\n} catch (\\Exception $e) {\n$error[\"code\"] = $e-&gt;getCode();\n$error[\"message\"] = $e-&gt;getMessage();\nreturn new JsonResponse($error, Response::HTTP_BAD_REQUEST);\n}\n$em = $this-&gt;getDoctrine()-&gt;getManager();\n$em-&gt;persist($movie);\n$em-&gt;flush();\nreturn new JsonResponse($movie, Response::HTTP_CREATED);\n}\n}\n</code></pre>"},{"location":"08-symfony/13-creaci%C3%B3-api-b%C3%A0sica/#nelmio","title":"Nelmio","text":""},{"location":"08-symfony/13-creaci%C3%B3-api-b%C3%A0sica/#fosrestbundle","title":"FOSRESTBundle","text":""},{"location":"08-symfony/13-creaci%C3%B3-api-b%C3%A0sica/#apiplatform","title":"ApiPlatform","text":""},{"location":"08-symfony/13-creaci%C3%B3-api-b%C3%A0sica/#recursos","title":"Recursos","text":"<p>En Primeros pasos con Symfony 5 como API REST  es genera una API basada en els mateixos components que hem utilitzat.</p> <p>En Getting started REST API with Symfony 4  s'utilitzen diversos components addicionals com el Fos-Rest-Bundle i JMS Serializer.</p> <p>En Curso de Symfony 5. Creando una API desde cero teniu un curs molt complet sobre com crear una API en Symfony 5 des de cero.</p> <p>API Platform \u00e9s un framework que permet crear API de forma quasi autom\u00e0tica en Symfony.</p>"},{"location":"08-symfony/14-fixtures-bundle/","title":"Doctrine Fixtures Bundle","text":"<p>Els fixtures s'utilitzen per carregar un conjunt de dades \"fals\" en una base de dades que despr\u00e9s es pot utilitzar per provar o per ajudar-vos a donar-vos dades interessants mentre desenvolupeu la vostra aplicaci\u00f3.</p> <p>Aquest paquet \u00e9s compatible amb qualsevol base de dades suportada per Doctrine ORM (MySQL, PostgreSQL, SQLite, etc.). </p>"},{"location":"08-symfony/14-fixtures-bundle/#installacio","title":"Instal\u00b7laci\u00f3","text":"<pre><code>composer require --dev orm-fixtures\n</code></pre>"},{"location":"08-symfony/14-fixtures-bundle/#escriure-fixtures","title":"Escriure Fixtures","text":"<pre><code>// src/DataFixtures/AppFixtures.php\nnamespace App\\DataFixtures;\nuse App\\Entity\\Movie;\nuse Doctrine\\Bundle\\FixturesBundle\\Fixture;\nuse Doctrine\\Persistence\\ObjectManager;\nclass AppFixtures extends Fixture\n{\npublic function load(ObjectManager $manager)\n{\n// create 20 movies! Bam!\nfor ($i = 0; $i &lt; 20; $i++) {\n$movie = new Movie();\n$movie-&gt;setTitle('Movie '.$i);\n$movie-&gt;setReleaseDate(new \\DateTime());\n....\n$manager-&gt;persist($movie);\n}\n$manager-&gt;flush();\n}\n}\n</code></pre>"},{"location":"08-symfony/14-fixtures-bundle/#fixtures-que-accedeixen-a-serveis","title":"Fixtures que accedeixen a serveis","text":"<p>En alguns casos \u00e9s possible que h\u00e0geu d'accedir als serveis de la vostra aplicaci\u00f3 dins d'un fixture. Cap problema! La teua classe \u00e9s un servei, aix\u00ed que pots utilitzar la injecci\u00f3 normal de depend\u00e8ncia:</p> <pre><code>// src/DataFixtures/AppFixtures.php\nuse Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\nclass AppFixtures extends Fixture\n{\nprivate UserPasswordHasherInterface $hasher;\npublic function __construct(UserPasswordHasherInterface $hasher)\n{\n$this-&gt;hasher = $hasher;\n}\n// ...\npublic function load(ObjectManager $manager)\n{\n// Usuari amb rol d'administrador\n$user = new User();\n$user-&gt;setUsername('admin');\n$password = $this-&gt;hasher-&gt;hashPassword($user, 'admin');\n$user-&gt;setPassword($password);\n$user-&gt;setRole(\"ROLE_ADMIN\");\n$manager-&gt;persist($user);\n// Usuari amb rol d'usuari\n$user = new User();\n$user-&gt;setUsername('user');\n$password = $this-&gt;hasher-&gt;hashPassword($user, 'user');\n$user-&gt;setPassword($password);\n$user-&gt;setRole(\"ROLE_USER\");\n$manager-&gt;persist($user);\n// apliquem els canvis a la base de dades\n$manager-&gt;flush();\n}\n}\n</code></pre> <p>En aquest cas hem injectat la classe <code>UserPasswordHasherInterface</code> per poder aplicar una funci\u00f3-resum (hash) a les contrasenyes abans d'emmagatzemar-les.</p>"},{"location":"08-symfony/14-fixtures-bundle/#carregant-les-fixtures","title":"Carregant les Fixtures","text":"<pre><code>php bin/console doctrine:fixtures:load\n</code></pre> <p>Danger</p> <p>Per defecte l'ordre <code>load</code> esborra les dades de totes les taules. Per afegir les dades afig l'opci\u00f3 <code>--append</code>.</p> <p>M\u00e9s informaci\u00f3 en DoctrineFixturesBundle en la documentaci\u00f3 oficial de Symfony.</p>"},{"location":"08-symfony/14-fixtures-bundle/#fakerphpfaker","title":"FakerPHP/Faker","text":"<p>Faker \u00e9s una biblioteca PHP que genera dades falses per a tu. Tant si necessiteu arrancar la vostra base de dades, crear documents XML atractius, omplir la vostra capa de persist\u00e8ncia per provar-la d'estr\u00e8s o anonimitzar les dades extretes d'un servei de producci\u00f3, Faker \u00e9s per a vosaltres.</p>"},{"location":"08-symfony/14-fixtures-bundle/#installacio_1","title":"Instal\u00b7laci\u00f3","text":"<pre><code>composer require fakerphp/faker --dev\n</code></pre> <p>Info</p> <p>Recorda que usem el par\u00e0metre <code>--dev</code> per a aquells components que necessitem \u00fanicament en l'entorn de desenvolupament.</p>"},{"location":"08-symfony/14-fixtures-bundle/#us","title":"\u00das","text":"<pre><code># src/DataFixtures/AppFixtures.php\nnamespace App\\DataFixtures;\n...\nuse Doctrine\\Persistence\\ObjectManager;\nuse Faker\\Factory;\nuse Faker\\Generator;\nuse Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\nclass AppFixtures extends Fixture\n{\nprivate UserPasswordHasherInterface $hasher;\nprivate Generator $faker;\npublic function __construct(UserPasswordHasherInterface $hasher)\n{\n$this-&gt;hasher = $hasher;\n$this-&gt;faker = Factory::create();\n}\n...\npublic function load(ObjectManager $manager): void\n{\n//guarde en un array  els g\u00e8neres per despr\u00e9s poder-los assignar a les pel\u00b7l\u00edcules.\n$genres = [];\n// G\u00e9neres\nfor ($i=0; $i&lt;4; $i++ ) {\n$genre = new Genre();\n$genre-&gt;setName($this-&gt;faker-&gt;word());\n$manager-&gt;persist($genre);\n$genres[] = $genre;\n}\n$manager-&gt;flush();\nfor ($i=0; $i&lt;14; $i++ ) {\n$movie = new Movie();\n$movie-&gt;setTitle(ucwords($this-&gt;faker-&gt;words(3, true)));\n$movie-&gt;setOverview($this-&gt;faker-&gt;text(500));\n$movie-&gt;setReleaseDate($this-&gt;faker-&gt;dateTime);\n$movie-&gt;setPoster($this-&gt;faker-&gt;file('assets', 'public/images', false));\n$movie-&gt;setGenre($genres[\\array_rand($genres)]);\n$manager-&gt;persist($movie);\n}\n$manager-&gt;flush();\n...\n}\n}\n</code></pre> <p>En el codi anterior hi ha diversos exemples d'\u00fas, del context es pot extreure la seua funcionalitat. En la documentaci\u00f3 ofical de Faker trobareu m\u00e9s informaci\u00f3.</p>"},{"location":"08-symfony/15-unit-testing/","title":"Testing en Symfony","text":""},{"location":"08-symfony/15-unit-testing/#introduccio","title":"Introducci\u00f3","text":"<p>Symfony inclou una recepta que integra en el framework diferents ferramentes per a realitzar proves tant per a proves unit\u00e0ries (PHPUnit) com per a proves d'integraci\u00f3 i proves funcionals, com Panther i DOM crawler.</p> <p>La secci\u00f3 Test de la documentaci\u00f3 de Symfony \u00e9s un bon lloc per on comen\u00e7ar.</p> <p>En aquesta secci\u00f3 parlarem dels tests funcionals. L'objectiu \u00e9s crear dos tests: un  per comprovar que el control d'acc\u00e9s funciona com s'espera i l'altre per provar un  formulari.</p>"},{"location":"08-symfony/15-unit-testing/#testing-del-control-dacces","title":"Testing del control d'acc\u00e9s","text":""},{"location":"08-symfony/15-unit-testing/#pas-1-creacio-del-test","title":"Pas 1: Creaci\u00f3 del test","text":"<pre><code>php bin/console make:test\n\nWhich test type would you like?:\n  [TestCase       ] basic PHPUnit tests\n  [KernelTestCase ] basic tests that have access to Symfony services\n  [WebTestCase    ] to run browser-like scenarios, but that don't execute JavaScript code\n  [ApiTestCase    ] to run API-oriented scenarios\n  [PantherTestCase] to run e2e scenarios, using a real-browser or HTTP client and a real web server\n\nChoose a class name for your test, like:\n * UtilTest (to create tests/UtilTest.php)\n* Service\\UtilTest (to create tests/Service/UtilTest.php)\n* \\App\\Tests\\Service\\UtilTest (to create tests/Service/UtilTest.php)\nThe name of the test class (e.g. BlogPostTest):\n &gt; AccessControlTest\n\ncreated: tests/AccessControlTest.php\n\nSuccess! Next: Open your new test class and start customizing it.\n Find the documentation at https://symfony.com/doc/current/testing.html#functional-tests\n</code></pre> <p>Codi que ens genera \u00e9s el seg\u00fcent:</p> <pre><code>class AccessControlTest extends WebTestCase\n{\npublic function testSomething(): void\n{\n$client = static::createClient();\n$crawler = $client-&gt;request('GET', '/');\n$this-&gt;assertResponseIsSuccessful();\n$this-&gt;assertSelectorTextContains('h1', 'Hello World');\n}\n}\n</code></pre> <p>En resum el que fa \u00e9s crear un client HTTP i sol\u00b7licitar la p\u00e0gina principal. Despr\u00e9s espera que la resposta siga correcta (200) i el text resultant continga un <code>h1</code> amb el text <code>Hello World</code>.</p> <p>En el seg\u00fcent m\u00e8tode comprovem en accedir a l'URL que ens permet crear un nou Tweet amb un usuari an\u00f2nim la resposta ha de ser una redirecci\u00f3 (a la  p\u00e0gina d'inici de sessi\u00f3).</p> <pre><code>    public function testAnonymousCannotComposeTweets(): void\n{\n$client = static::createClient();\n$crawler = $client-&gt;request('GET', '/compose/tweet');\n// En aquest cas comprovem que si un usuari an\u00f2nim intenta accedir ha de redirigir-lo\n// a la p\u00e0gina d'inici de sessi\u00f3\n$this-&gt;assertResponseStatusCodeSame(Response::HTTP_FOUND);\n}\n</code></pre>"},{"location":"08-symfony/15-unit-testing/#pas-2-proves-amb-usuaris-autenticats","title":"Pas 2: Proves amb usuaris autenticats","text":"<p>Gr\u00e0cies al m\u00e8tode <code>BrowserKit::loginUser</code> \u00e9s molt senzill simular l'inici de  sessi\u00f3 d'un usuari. Aix\u00f2 s\u00ed, caldr\u00e0 carregar-lo pr\u00e8viament del repositori.</p> <p>En el seg\u00fcent m\u00e8tode emprarem un usuari autenticat per fer la mateixa sol\u00b7licitud esperant un codi d'estat OK. Per poder carregar l'usuari cal configurar una  base de dades de proves.</p> <pre><code>public function testAuthenticatedUsersCanComposeTweets(): void\n{\n$client = static::createClient();\n$userRepository = static::getContainer()-&gt;get(UserRepository::class);\n// retrieve the test user\n$testUser = $userRepository-&gt;findOneByUsername('user');\n$client-&gt;loginUser($testUser);\n$crawler = $client-&gt;request('GET', '/compose/tweet');\n// En aquest cas comprovem que si un usuari autenticat intenta accedir retornar\u00e0 un estat 200.\n$this-&gt;assertResponseStatusCodeSame(Response::HTTP_OK);        \n}\n</code></pre> <p>Entorn de proves</p> <p>Per poder generar una base de dades de prova caldr\u00e0 configurar la connexi\u00f3 a l'entorn <code>.env.test</code>. I despr\u00e9s es poden usar els comandaments de la consola amb el par\u00e0metre <code>--env=test</code>. Per seguretat, a la base de dades de prova  se li afegir\u00e0 el prefix <code>_test</code>.</p>"},{"location":"08-symfony/15-unit-testing/#pas-3-us-dun-proveidor-de-dades","title":"Pas 3: \u00das d'un proveidor de dades.","text":"<p>Un prove\u00efdor de dades en PHPUnit \u00e9s un m\u00e8tode que proporciona dades de prova per a un test. Es pot utilitzar per a provar la mateixa funci\u00f3 o m\u00e8tode amb diferents entrades de dades. El m\u00e8tode del prove\u00efdor de dades es marca amb l'anotaci\u00f3 \"@dataProvider\".</p> <p>En els nostres tests podr\u00edem implementar-ho aix\u00ed:</p> <pre><code>    /**\n     * @return void\n     * @dataProvider getUrlsForAnonymousUsers\n     */\npublic function testAnonymousAccessControl(string $url, int $status, string $method = 'GET'): void\n{\n$client = static::createClient();\n$crawler = $client-&gt;request($method, $url);\n$this-&gt;assertResponseStatusCodeSame($status);\n}\npublic function getUrlsForAnonymousUsers(): iterable\n{\nyield [\"/\", Response::HTTP_FOUND];\nyield [\"/login\", Response::HTTP_OK];\nyield [\"/invalid-route\", Response::HTTP_NOT_FOUND];\nyield [\"/register\", Response::HTTP_OK];\nyield [\"/logout\", Response::HTTP_FOUND];\nyield [\"/compose/tweet\", Response::HTTP_FOUND];\nyield [\"/home\", Response::HTTP_OK];\nyield [\"/user\", Response::HTTP_OK];\nyield [\"/tweets/12/like\", Response::HTTP_FOUND];\n}\n</code></pre> <p>yield</p> <p><code>yield</code> s'utilitza dins d'una funci\u00f3 generadora per retornar un valor i posar en pausa l'execuci\u00f3 fins que es demani el seg\u00fcent valor. Aix\u00f2 permet generar i retornar una seq\u00fc\u00e8ncia de valors un a la vegada, en lloc de tots alhora com en les funcions regulars. Aix\u00f2 proporciona una manera d'escriure codi m\u00e9s eficient i amable amb la mem\u00f2ria, ja que nom\u00e9s es generen valors segons es necessiten, en lloc de generar tots els valors alhora.</p>"},{"location":"08-symfony/20-gestio-actius/","title":"Gesti\u00f3 de fitxers CSS i Javascript amb Webpack Encore","text":"<p>Webpack \u00e9s una eina d'empaquetador de m\u00f2duls per a aplicacions web. Ajuda a agrupar i optimitzar els fitxers JavaScript, CSS,  imatges i altres recursos per a la seva distribuci\u00f3 als navegadors web. A m\u00e9s, proporciona caracter\u00edstiques com la  gesti\u00f3 de depend\u00e8ncies i el muntatge de m\u00f2duls, aix\u00ed com la capacitat de crear diversos paquets per a diferents entorns.</p> <p>Encore \u00e9s una eina de configuraci\u00f3 de Webpack i un empaquetador d'aplicacions JavaScript per a Symfony. Proporciona  una forma f\u00e0cil i convenient d'utilitzar Webpack i gestionar recursos com fulls d'estil, JavaScript i imatges  en els projectes Symfony. Encore tamb\u00e9 permet la integraci\u00f3 d'eines com Babel, Sass i TypeScript, i inclou funcions  com la divisi\u00f3 de codi i importacions din\u00e0miques.</p> <p>En aquest cap\u00edtol integrarem i optimitzarem un full d'estils personalitzat, Bootstrap 5 i Bootstrap Icons.</p>"},{"location":"08-symfony/20-gestio-actius/#pas-1-installacio-de-nodejs","title":"Pas 1: Instal\u00b7laci\u00f3 de Node.js","text":"<p>Per comen\u00e7ar, haur\u00e0s d'instal\u00b7lar Node.js i un gestor de depend\u00e8ncies com <code>yarn</code> o <code>npm</code>. Nosaltres usarem el darrer.</p> <p>En Download | Node.js trobar\u00e0s les diferents opcions d'instal\u00b7laci\u00f3 de Node.js. En cas d'usar una versi\u00f3 basada en  Linux els repositoris els pots trobar en Nodesource</p> <p>En el projecte treballarem en la versi\u00f3 de Node.js 18 ja que \u00e9s la darrera versi\u00f3 de suport a llarg termini (LTS).</p>"},{"location":"08-symfony/20-gestio-actius/#pas-2-installacio-webpack-encore-bundle","title":"Pas 2: Instal\u00b7laci\u00f3 Webpack Encore Bundle","text":"<p>Per a instal\u00b7lar Encore cal executar:</p> <pre><code>composer require symfony/webpack-encore-bundle\n</code></pre> <p>Despr\u00e9s executarem el seg\u00fcent comandament perqu\u00e8 s'instal\u00b7len els m\u00f2duls necessaris: </p> <p><pre><code>npm install\n</code></pre> I finalment <code>npm run dev</code> per poder realitzar la compilaci\u00f3.</p>"},{"location":"08-symfony/20-gestio-actius/#pas-3-revisio-dels-fitxers-de-configuracio-de-webpack","title":"Pas 3: Revisi\u00f3 dels fitxers de configuraci\u00f3 de Webpack","text":"<p>Despr\u00e9s d'instal\u00b7lar Webpack Encore s'hauran creat la carpeta <code>assets</code> i el fitxer de configuraci\u00f3 de Webpack <code>webpack.config.js</code> a l'arrel del teu projecte Symfony. Aquest fitxer contindr\u00e0 totes les opcions de configuraci\u00f3 de Webpack Encore.</p> <pre><code>const Encore = require('@symfony/webpack-encore');\nEncore\n// el directori del projecte on s'emmagatzemaran tots els actius compilats\n.setOutputPath('public/build/')\n// la ruta p\u00fablica utilitzada pel servidor web per accedir al directori anterior\n.setPublicPath('/build')\n/* Entrades\n     * Cada entrada generar\u00e0 un fitxer Javascript i un fitxer CSS si\n     * el Javascript importa CSS.\n     */\n.addEntry('app', './assets/js/app.js')\n// enables the Symfony UX Stimulus bridge (used in assets/bootstrap.js)\n.enableStimulusBridge('./assets/controllers.json')\n// When enabled, Webpack \"splits\" your files into smaller pieces for greater optimization.\n.splitEntryChunks()\n// will require an extra script tag for runtime.js\n// but, you probably want this, unless you're building a single-page app\n.enableSingleRuntimeChunk()\n/*\n     * FEATURE CONFIG\n     *\n     * Enable &amp; configure other features below. For a full\n     * list of features, see:\n     * https://symfony.com/doc/current/frontend.html#adding-more-features\n     */\n.cleanupOutputBeforeBuild()\n.enableBuildNotifications()\n.enableSourceMaps(!Encore.isProduction())\n// enables hashed filenames (e.g. app.abc123.css)\n.enableVersioning(Encore.isProduction())\n// configure Babel\n// .configureBabel((config) =&gt; {\n//     config.plugins.push('@babel/a-babel-plugin');\n// })\n// enables and configure @babel/preset-env polyfills\n.configureBabelPresetEnv((config) =&gt; {\nconfig.useBuiltIns = 'usage';\nconfig.corejs = '3.23';\n})\n// enables Sass/SCSS support\n//.enableSassLoader()\n// uncomment if you use TypeScript\n//.enableTypeScriptLoader()\n// uncomment if you use React\n//.enableReactPreset()\n// uncomment to get integrity=\"...\" attributes on your script &amp; link tags\n// requires WebpackEncoreBundle 1.4 or higher\n//.enableIntegrityHashes(Encore.isProduction())\n// permet a les aplicacions antigues utilitzar $/jQuery com a variable global\n//.autoProvidejQuery()\n;\nmodule.exports = Encore.getWebpackConfig();\n</code></pre> <p>El fitxer <code>/assets/app.js</code> \u00e9s un recurs que inicialment integra un full d'estils i Stimulus un framework Javascript lleuger dels creadors de Symfony.</p> <p><pre><code>import './styles/app.css';\n// start the Stimulus application\nimport './bootstrap';\n</code></pre> Cal destacar que per integrar el fitxer de recursos cal que disposar d'una entrada associada a <code>webpack.config.js</code>. En aquest cas:</p> <pre><code>.addEntry('app', './assets/js/app.js')\n</code></pre> <p>El primer par\u00e0metre, <code>app</code> en l'exemple, identifica el fitxer de recursos.</p>"},{"location":"08-symfony/20-gestio-actius/#pas-4-compilacio-dels-recursos","title":"Pas 4: Compilaci\u00f3 dels recursos","text":"<p>Ara pots compilar els teus recursos utilitzant el seg\u00fcent comandament:</p> <pre><code>npm run dev-server\n</code></pre> <p>Aquest comandament compilar\u00e0 els teus actius i els guardar\u00e0 al directori especificat en el fitxer de configuraci\u00f3. A m\u00e9s a m\u00e9s, executar\u00e0 un servidor de desenvolupament que vigilar\u00e0 els teus arxius i actualitzar\u00e0 autom\u00e0ticament els actius compilats cada vegada que facis canvis.</p> <p>Hi ha d'altres que pots consultar en Configuring Encore/Webpack.</p>"},{"location":"08-symfony/20-gestio-actius/#pas-5-inclusio-dels-recursos-compilats-en-les-teues-plantilles","title":"Pas 5: Inclusi\u00f3 dels recursos compilats en les teues plantilles","text":"<p>Per utilitzar els recursos compilats en les teves plantilles, haur\u00e0s de fer refer\u00e8ncia a ells utilitzant les seg\u00fcents funcions de Twig que s'inclouen en la plantilla per defecte:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;!-- ... --&gt;\n        {% block stylesheets %}\n            {# 'app' must match the first argument to addEntry() in webpack.config.js #}\n            {{ encore_entry_link_tags('app') }}\n\n&lt;!-- Renders a link tag (if your module requires any CSS)\n                 &lt;link rel=\"stylesheet\" href=\"/build/app.css\"&gt; --&gt;\n        {% endblock %}\n\n        {% block javascripts %}\n            {{ encore_entry_script_tags('app') }}\n\n&lt;!-- Renders app.js &amp; a webpack runtime.js file\n                &lt;script src=\"/build/runtime.js\" defer&gt;&lt;/script&gt;\n                &lt;script src=\"/build/app.js\" defer&gt;&lt;/script&gt;\n                See note below about the \"defer\" attribute --&gt;\n        {% endblock %}\n    &lt;/head&gt;\n&lt;!-- ... --&gt;\n&lt;/html&gt;\n</code></pre> <p>Important</p> <p>Fixa't que el par\u00e0metre que passem a les funcions <code>encore_entry...</code> \u00e9s <code>app</code>, l'identificador que hem assignat pr\u00e8viament al fitxer de recursos.</p>"},{"location":"08-symfony/20-gestio-actius/#pas-6-integracio-de-bootstrap-i-bootstrap-icons","title":"Pas 6: Integraci\u00f3 de Bootstrap i Bootstrap Icons","text":"<p>Primerament instal\u00b7larem els dos m\u00f2duls: </p> <pre><code>npm install bootstrap --save-dev\nnpm install bootstrap-icons --save-dev\n</code></pre> <p>Despr\u00e9s caldr\u00e0 afegir-los en el fitxer de recursos <code>app.js</code>. Tin en compte  que el directori de refer\u00e8ncia ser\u00e0 <code>node_modules</code>.</p> <p><pre><code>// /assets/app.js\nimport './styles/app.css';\n// CSS de Bootstrap\nimport 'bootstrap/dist/css/bootstrap.css';\n// CSS de Bootstrap Icons\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n// Javascript de Bootstrap\nimport 'bootstrap/dist/js/bootstrap';\n// start the Stimulus application\nimport './bootstrap';\n</code></pre> En compilar tindrem autom\u00e0ticament els dos m\u00f2duls disponibles en l'aplicaci\u00f3 web.</p>"},{"location":"08-symfony/20-gestio-actius/#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>https://webpack.js.org/</li> <li>https://symfony.com/doc/5.4/frontend/encore/installation.html</li> <li>https://symfony.com/doc/current/frontend/encore/simple-example.html</li> <li>https://www.npmjs.com/</li> </ul>"},{"location":"08-symfony/99-activitats/","title":"Activitats","text":""},{"location":"08-symfony/99-activitats/#introduccio","title":"Introducci\u00f3","text":"<ol> <li> <p>Entorn de desenvolupament</p> <p>Despr\u00e9s dels tres primers apartats de la primera sessi\u00f3, ja hauries de tenir operativa la m\u00e0quina virtual amb XAMPP i Composer instal\u00b7lats.</p> <p>En qualsevol dels dos casos, i per a verificar que la teua instal\u00b7laci\u00f3 \u00e9s correcta abans de continuar, es demana que realitzes dues captures de     pantalla:</p> <ol> <li>Engega Apache i MySQL des del manager de XAMPP, accedeix amb Firefox a la URL http://localhost i captura la pantalla que mostra el navegador. Guarda-la en un arxiu anomenat \"xampp.png\".</li> <li>Des d'un terminal, executa el comando: <code>composer --version</code> i fes captura on es veja la versi\u00f3 de Composer que tens instal\u00b7lada. Guarda-ho en \"composer.png\".</li> </ol> </li> </ol>"},{"location":"08-symfony/99-activitats/#el-patro-mvc","title":"El patr\u00f3 MVC","text":"<ol> <li> <p>Posada a punt dels projectes</p> <p>En aquest exercici crearem un projecte Symfony anomenat <code>movies-symfony</code>, que anirem completant en sessions posteriors, en la carpeta de treball amb l'estructura b\u00e0sica de <code>website-\u00adskeleton</code>.</p> <p>Despr\u00e9s de crear-lo, afig un virtual host per a poder accedir al projecte amb la URL <code>http://movies-symfony</code></p> <p>Repeteix els mateixos passos per a un altre projecte anomenat <code>00-nom-symfony</code>, tamb\u00e9 allotjat en la teua carpeta de treball. Afig el corresponent virtual host per a accedir a ell amb la URL <code>http://00-nom-symfony</code></p> <p>Aquest projecte contindr\u00e0 el teu projecte personal, que anari\u00e0s completant a mesura que vages aprenents a utilitzar Symfony.</p> <p>Crea un repositori privat de Github per al projecte personal amb el mateix nom que el projecte. Comparteix-lo amb el professor.</p> <p>Com a resultat d'aquest exercici, haur\u00e0s d'adjuntar una captura de pantalla per a cada projecte, on es veja en el navegador la URL corresponent (<code>http://movies-symfony</code> o <code>http://00-nom-symfony</code>, respectivament),  i la p\u00e0gina de benvinguda per defecte de Symfony.</p> <p>Guarda les captures com a \"movies.png\" i \"projecte.png\".</p> </li> <li> <p>Controladors</p> <p>Seguint els passos de l'apartat El patr\u00f3 MVC en Symfony, implementa el controlador <code>HomeController</code>.</p> </li> </ol>"},{"location":"08-symfony/99-activitats/#twig","title":"Twig","text":"<ol> <li> <p>Plantilles en Twig    </p> <p>Adapta la plantilla base (<code>templates/base.html.twig</code>) perqu\u00e8 importe Bootstrap 5.0.</p> <p>Afig a l'array de pel\u00b7l\u00edcules la clau <code>poster</code> amb el nom del fitxer i canvia el format de la data a <code>DateTime</code> o <code>timestamp</code>. </p> <p>Modifica les plantilles <code>home.html.twig</code>, <code>movies_show.html.twig</code> i <code>movies_filter.html.twig</code> perqu\u00e8 hereten de la plantilla base.</p> <p>Crea un plantilla <code>_movie_data.html.twig</code> que tinga les dades de la pel\u00b7l\u00edcula. Modificaci\u00f3 la resta de plantilles perqu\u00e8 mostren les dades de cada pel\u00b7l\u00edcula fent \u00fas d'aquesta.</p> </li> </ol>"},{"location":"08-symfony/99-activitats/#contenidor-de-serveis","title":"Contenidor de serveis","text":"<ol> <li> <p>DBTest</p> <p>Crea el servei <code>DBTest</code> vist en la sessi\u00f3 i fes-ne \u00fas en <code>MovieController</code>. D'aquesta  forma l'array de pel\u00b7l\u00edcules l'obtindrem des del servei.</p> <p>A m\u00e9s, modifica <code>HomeController</code> perqu\u00e8 en fa\u00e7a \u00fas.</p> <p>Finalment, modifica <code>home.html.twig</code>  perqu\u00e8 s'assemble a les de projecte <code>Movies</code>.</p> </li> <li> <p>Logger</p> <p>Implementa el sistema de registre en <code>HomeController</code>, de forma que cada vegada que s'accedisca a la p\u00e0gina principal quede registrada la data i l'hora d'acc\u00e9s.</p> <p>El format de la data es podr\u00e0 configurar globalment.</p> </li> </ol>"},{"location":"08-symfony/99-activitats/#doctrine","title":"Doctrine","text":"<ol> <li> <p>En l'aplicaci\u00f3 de pel\u00b7l\u00edcules, crea una nova entitat anomenada <code>Movie</code> amb els seg\u00fcents atributs:</p> <ul> <li>title (string de grand\u00e0ria 255)</li> <li>poster (string de grand\u00e0ria 255)</li> <li>overview (text)</li> <li>releaseDate(DateTime)</li> </ul> <p>Recorda definir pr\u00e8viament la variable <code>DATABASE_URL</code> en les variables d'entorn, crear la base de dades, i despr\u00e9s migrar aquests canvis a la base de dades, emprant els comandos vistos en aquesta sessi\u00f3.</p> <p>El camp <code>id</code> (enter, autonum\u00e8ric) es crea autom\u00e0ticament.</p> </li> <li> <p>Realitza l'exercici anterior en el teu projecte Symfony, creant la base de dades, l'entitat principal i la taula relacionada en la base de dades.</p> </li> <li> <p>Implementa el m\u00e8tode <code>create</code> vist anteriorment en el projecte <code>Movies</code>.</p> </li> <li> <p>Sobre la base de dades del teu projecte i l'entitat/taula principal que hem creat en l'exercici anterior, implementa mitjan\u00e7ant un controlador per a l'entitat:</p> <ol> <li>Implementa un nou m\u00e8tode del controlador anomenat <code>create</code>, que cree un element en la base de dades</li> <li>Implementa el m\u00e8tode <code>show</code> que obtindr\u00e0 un element de la base de dades pel seu id.</li> <li>Implementa el m\u00e8todo <code>home()</code> en la classe <code>HomeController</code> perqu\u00e8 mostre el llistat de la taula principal de MySQL en lloc de la base de dades de proves.</li> </ol> </li> <li> <p>Modifica el m\u00e8tode <code>filter</code> anterior de la classe <code>MovieController</code>  i perqu\u00e8 cerque els elements que continguen una text determinat  per\u00f2 enviat pel query string. Anir\u00e0 associat a la URI <code>/movies/filter</code> i  renderizar\u00e1 una vista (pot ser la p\u00e0gina principal),  passant-li com a par\u00e0metre el llistat filtrat.</p> <p>Per a obtenir els par\u00e0metres del query string has d'usar la classe Request creant  l'objecte posant-lo com a par\u00e0metre tipat.</p> <p>Per exemple:</p> <pre><code>    public function filter(Request $request) {\n$text = $request-&gt;query-&gt;getAlnum(\"text\");\n...\n}\n</code></pre> <p>Empra per a fer la consulta o b\u00e9 el Query Builder de Doctrine o b\u00e9 el seu llenguatge DQL, afegint el m\u00e8tode corresponent en el repositori de l'entitat.</p> </li> <li> <p>Implementa la relaci\u00f3 de Genre i Movie en el projecte <code>movies-symfony</code>.</p> </li> <li> <p>En el projecte personal crea una nova entitat relacionada i     implementa la inserci\u00f3 amb d'un element amb l'entitat relacionada.</p> </li> <li> <p>En el projecte <code>Movies</code> afig la configuraci\u00f3 de seguretat seguint els seg\u00fcent requeriments:</p> <ul> <li>Crea una entitat <code>User</code> de forma similar a com hem fet per en els exemples, i la corresponent taula.  L'entitat tindr\u00e0 els mateixos camps que en l'exemple.</li> <li>Defineix un formulari de login com el de l'exemple, i configura l'arxiu <code>config/packages/security.yaml</code> perqu\u00e8 utilitze aquest formulari, sota la ruta <code>/login</code> (defineix tamb\u00e9 el controlador associat a aqueixa ruta, com en l'exemple)</li> <li>Protegeix l'acc\u00e9s a la creaci\u00f3 de pel\u00b7licules (ruta <code>/movies/create</code>), perqu\u00e8 nom\u00e9s usuaris de tipus <code>ROLE_ADMIN</code> puguen accedir. Crea un usuari d'aquest tipus en la base de dades manualment, per a poder-ho provar.</li> <li>Crea la jerarquia de rols de l'exemple i fes que a la ruta <code>/admin</code> sols hi puguen accedir els usuaris amb <code>ROLE_ADMIN</code></li> <li>Canvia les routes dels CRUD de pel\u00b7l\u00edcules i g\u00e8neres de forma que comencen per    <code>/admin</code> aix\u00ed s'aplicar\u00e0 la restricci\u00f3 anterior.   </li> </ul> </li> <li> <p>Sobre l'autenticaci\u00f3 anterior, afegirem aquests canvis:</p> <ul> <li>Codifica els passwords de l'aplicaci\u00f3 amb l'algorisme triat per Symfony, i Codifica manualment els passwords dels usuaris que hages afegit a la base de dades, usant la web que s'ha proporcionat en els apunts.</li> <li>Afig un enlla\u00e7 per a \"Iniciar sessi\u00f3\" en la plantilla.</li> <li>Afig un enlla\u00e7 \"Tancar sessi\u00f3\" en la plantilla <code>base.html.twig</code> perqu\u00e8 es puga tancar sessi\u00f3 des de qualsevol vista de la web.</li> <li>Els dos enlla\u00e7os anteriors s\u00f3n incompatible, fes que si l'usuari ha iniciat sessi\u00f3 aparega el de tancar i viceversa.    </li> <li>Opcionalment, fes que aparega el nom d'usuari al costat de l'enlla\u00e7 de tancar sessi\u00f3.     </li> </ul> </li> <li> <p>Aplica els mateixos canvis en el projecte personal, respectant la funcionalitat de rols que havies previst.</p> </li> </ol>"},{"location":"08-symfony/99-recursos-i-bibliografia/","title":"Recursos i bibliografia","text":""},{"location":"08-symfony/99-recursos-i-bibliografia/#webgrafia","title":"Webgrafia","text":""},{"location":"08-symfony/99-recursos-i-bibliografia/#credits","title":"Cr\u00e8dits","text":"<ul> <li>IBORRA BAEZA, Ignacio i MARTINEZ LUCAS, Julio  Symfony. Desarrollo de aplicaciones MVC en el servidor con un framework PHP. Centre de Formaci\u00f3, Innovaci\u00f3 i Recursos per al professorat, 2018</li> </ul>"},{"location":"09-rest-api/01-introduccio-als-webservices/","title":"Serveis Web I API REST (JSON)","text":""},{"location":"09-rest-api/01-introduccio-als-webservices/#taula-de-continguts","title":"Taula de continguts","text":"Continguts <p>UD10. Serveis Web I Api Rest (JSON)</p> <ol> <li>Serveis Web i JSON.    </li> <li>REST   a) Verbs   b) URL\u2019s   c) Representaci\u00f3 de recursos.   d) Codis de resposa.</li> <li>Seguretat amb JWT</li> <li>API Restful amb PHP</li> </ol> <p>De vegades, les aplicacions que desenvolupes necessitaran compartir informaci\u00f3 amb altres aplicacions.</p> <p>Sense anar m\u00e9s lluny, en una aplicaci\u00f3 de botiga en l\u00ednia segurament els prove\u00efdors als que es compren els articles  manegen la mateixa o semblant informaci\u00f3. I potser pugues aprofitar aquesta informaci\u00f3 per a la teva pr\u00f2pia aplicaci\u00f3.</p> <p>O pot ser que, una vegada que estiga finalitzada i funcionant, vullgues programar una nova aplicaci\u00f3  (no necess\u00e0riament una aplicaci\u00f3 web) que la complemente per, per exemple, processar la informaci\u00f3 sobre les comandes  realitzades.</p> <p>Per compartir la informaci\u00f3 que gestiona la teva aplicaci\u00f3, normalment n'hi ha prou amb donar acc\u00e9s a la base de dades  en qu\u00e8 s'emmagatzema. Per\u00f2 aquesta generalment no \u00e9s una bona idea. Com m\u00e9s aplicacions utilitzen les mateixes dades,  m\u00e9s possibilitats hi ha que es generen errors en els mateixos. A m\u00e9s, hi ha altres inconvenients:</p> <ul> <li>Si ja tens una aplicaci\u00f3 funcionant, ja has programat la l\u00f2gica de negoci corresponent, i aquesta no es podr\u00e0   aprofitar en altres aplicacions si utilitzen directament la informaci\u00f3 emmagatzemada a la base de dades.</li> <li>Si vols posar la base de dades a disposici\u00f3 de tercers, aquests necessitaran con\u00e8ixer la seva estructura.   I al donar acc\u00e9s directe a les dades, ser\u00e0 complicat mantenir el control sobre les modificacions que es produeixin en els mateixos.</li> </ul> <p>D'altra banda, gran part de la informaci\u00f3 que gestionen les aplicacions web ja est\u00e0 disponible perqu\u00e8 altres la  utilitzen (deixant de banda les consideracions relacionades amb el control d'acc\u00e9s). Per exemple, si alg\u00fa vol con\u00e8ixer  el preu d'un producte a la botiga web, nom\u00e9s cal buscar aquest producte a la p\u00e0gina en qu\u00e8 es llisten tots els productes.  Per\u00f2, perqu\u00e8 aquesta mateixa informaci\u00f3 (el preu d'un producte) la puga obtenir un programa, aquest hauria de   contemplar un procediment per buscar el producte concret dins de les etiquetes HTML de la p\u00e0gina i extreure el seu preu.</p> <p>Per facilitar aquesta tasca existeixen els serveis web. Un servei web \u00e9s un m\u00e8tode que permet que dos equips  intercanvien informaci\u00f3 a trav\u00e9s d'una xarxa inform\u00e0tica mitjan\u00e7ant el protocol HTTP. En utilitzar serveis web,  el servidor pot oferir un punt d'acc\u00e9s (endpoint) amb la informaci\u00f3 que vol compartir. D'aquesta manera controla  i facilita l'acc\u00e9s a la mateixa per part d'altres aplicacions.</p> <p>Els clients del servei, per la seva banda, no necessiten con\u00e8ixer l'estructura interna d'emmagatzematge.</p> <p>En lloc d'haver de programar un mecanisme per localitzar la informaci\u00f3, tenen un punt de acc\u00e9s directe a la que els  interessa.</p> <p>Tornant a l'exemple de la nostra botiga, si volgu\u00e9ssim aprofitar la informaci\u00f3 de qu\u00e8 disposen els nostres prove\u00efdors,  aquests haurien d'oferir un servei web que ens permet\u00e9s recuperar-la.</p> <p>Per exemple, enviant-los el codi d'un producte, podr\u00edem obtenir el seu nom, vista general, preu, etc. Inversament,  si volgu\u00e9ssim facilitar l'obtenci\u00f3 de dades de la nostra botiga per part d'altres aplicacions, podr\u00edem programar i  oferir un servei web de manera que, per exemple, retorn\u00e9s el llistat de comandes de client que es requerisca.</p>"},{"location":"09-rest-api/01-introduccio-als-webservices/#caracteristiques","title":"Caracter\u00edstiques","text":"<p>Els serveis web es van crear per permetre l'intercanvi d'informaci\u00f3 sobre la base del protocol HTTP (per aix\u00f2 el terme web).  En lloc de definir el seu propi protocol per transportar les peticions d'informaci\u00f3 utilitzen HTTP per a aquest fi.  La resposta obtinguda no ser\u00e0 una p\u00e0gina web, sin\u00f3 la informaci\u00f3 que s'haja sol\u00b7licitat. D'aquesta manera poden  funcionar sobre qualsevol servidor web; i, el que \u00e9s encara m\u00e9s important, utilitzant el port 80 (o 443) reservat per a  aquest protocol. Per tant, qualsevol ordinador que puga consultar una p\u00e0gina web, podr\u00e0 tamb\u00e9 sol\u00b7licitar informaci\u00f3  d'un servei web.</p> <p>Si hi ha algun tallafocs a la xarxa, tractar\u00e0 la petici\u00f3 d'informaci\u00f3 igual que ho faria amb la sol\u00b7licitud d'una p\u00e0gina  web. Existeixen almenys dues q\u00fcestions que hauria de resoldre un servei web per poder funcionar correctament:</p> <ul> <li>Com es transmet la informaci\u00f3. Si utilitzem HTTP per a les peticions i les respostes, el client i el   servidor hauran de posar-se d'acord en la forma d'enviar unes i altres. \u00c9s a dir, Com fa el client per indicar que vol   con\u00e8ixer el PVP de l'article amb codi X?, i tamb\u00e9, com envia al servidor la resposta obtinguda?</li> <li>Com es publiquen les funcions a qu\u00e8 es pot accedir a un servidor determinat. Aquest punt \u00e9s opcional, per\u00f2 molt   \u00fatil. \u00c9s a dir, el client pot saber que la funci\u00f3 de servidor que ha d'utilitzar es diu <code>getPVPArticulo</code>, i que ha de   rebre com a par\u00e0metre el codi de l'article. Per\u00f2 si no ho sap, seria \u00fatil que hi hagu\u00e9s un mecanisme on pogu\u00e9s consultar les funcions que hi ha al servidor i com s'utilitza cadascuna.</li> </ul> <p>Cadascun dels m\u00e8todes que podem utilitzar avui en dia per crear un servei web respon a aquestes preguntes de formes diferents. </p> <p>Respecte a la primera q\u00fcesti\u00f3, el protocol SOAP utilitza el llenguatge XML per intercanviar informaci\u00f3.  Quant a la segona q\u00fcesti\u00f3, es resol amb un llenguatge anomenat WSDL, que tamb\u00e9 est\u00e0 basat en XML i va ser creat per  descriure serveis web, \u00e9s a dir, indicar com s'ha d'accedir a un servei i utilitzar-lo.</p> <p>Els serveis RESTful utilitzen normalment JSON i per descriure'ls podem usar l'especificaci\u00f3 OpenAPI.</p>"},{"location":"09-rest-api/01-introduccio-als-webservices/#soap-vs-rest-api","title":"SOAP vs REST API","text":"<p>En aquesta completa infografia podeu veure una interessant comparaci\u00f3:</p> <p></p> <p>Font: https://www.soapui.org/resources/infographic/api-testing/soap-vs-rest-infographic.html</p> <p>En el nostre cas utilitzarem REST API.</p>"},{"location":"09-rest-api/01-introduccio-als-webservices/#bibliografia","title":"Bibliografia","text":"<ul> <li>Jos\u00e9 Luis Comesa\u00f1a.  Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW,  elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012  [data de consulta: 13 de setembre de 2019]. Disponible en https://github.com/statickidz/TemarioDAW/tree/master/DWES</li> </ul>"},{"location":"09-rest-api/03-rest-api/","title":"REST API","text":""},{"location":"09-rest-api/03-rest-api/#introduccio","title":"Introducci\u00f3","text":"<p>La transfer\u00e8ncia d'estat representacional (en angl\u00e8s ReST) \u00e9s un estil d'arquitectura de programari per a sistemes  hiperm\u00e8dia distribu\u00efts com la World Wide Web. El terme es va originar l'any 2000, en una tesi doctoral sobre la web  escrita per Roy Fielding, un dels principals autors de l'especificaci\u00f3 del protocol HTTP i ha passat a ser \u00e0mpliament  utilitzat per la comunitat de desenvolupament.</p>"},{"location":"09-rest-api/03-rest-api/#caracteristiques","title":"Caracter\u00edstiques","text":"<p>Si b\u00e9 el terme REST es referia originalment a un conjunt de principis d'arquitectura -descrits m\u00e9s baix-, en  l'actualitat s'usa en el sentit m\u00e9s ampli per descriure qualsevol interf\u00edcie entre sistemes que utilitze directament  HTTP per obtenir dades o indicar l'execuci\u00f3 d'operacions sobre les dades, en qualsevol format (XML, JSON, etc) sense  les abstraccions addicionals dels protocols basats en patrons d'intercanvi de missatges, com ara SOAP. \u00c9s possible  dissenyar sistemes de serveis web d'acord amb l'estil arquitectural REST de Fielding i tamb\u00e9 \u00e9s possible dissenyar  interf\u00edcies XMLHTTP d'acord amb l'estil de crida a procediment remot (RPC), per\u00f2 sense usar SOAP. Aquests dos usos  diferents del terme REST causen certa confusi\u00f3 en les discussions t\u00e8cniques, encara que RPC no \u00e9s un exemple de REST.</p> <p>REST afirma que la web ha gaudit d'escalabilitat com a resultat d'una s\u00e8rie de dissenys fonamentals clau:</p> <ul> <li>Un protocol client/servidor sense estat: cada missatge HTTP cont\u00e9 tota la informaci\u00f3 necess\u00e0ria per comprendre   la petici\u00f3. Com a resultat, ni el client ni el servidor necessiten recordar cap estat de les comunicacions entre   missatges. No obstant aix\u00f2, en la pr\u00e0ctica, moltes aplicacions basades en HTTP utilitzen cookies i altres mecanismes   per mantenir l'estat de la sessi\u00f3.</li> <li>Un conjunt d'operacions ben definides que s'apliquen a tots els recursos d'informaci\u00f3: HTTP defineix un conjunt   petit d'operacions, les m\u00e9s importants s\u00f3n POST, GET, PUT i DELETE. Sovint aquestes operacions s'equiparen a les   operacions CRUD en bases de dades (CLAE en valenci\u00e0: crear, llegir, actualitzar, esborrar) que es requereixen per a la   persist\u00e8ncia de dades, encara que POST no encaixa exactament en aquest esquema.</li> <li>Una sintaxi universal per identificar els recursos. En un sistema REST, cada recurs \u00e9s adre\u00e7able \u00fanicament a   trav\u00e9s del seu URI.</li> <li>L'\u00fas d'hipermitjans, tant per a la informaci\u00f3 de l'aplicaci\u00f3 com per a les transicions d'estat de l'aplicaci\u00f3:   la representaci\u00f3 d'aquest estat en un sistema REST s\u00f3n t\u00edpicament HTML o XML. Com a resultat d'aix\u00f2, \u00e9s possible   navegar d'un recurs REST a molts altres, simplement seguint enlla\u00e7os sense requerir l'\u00fas de registres o una altra   infraestructura addicional.</li> </ul>"},{"location":"09-rest-api/03-rest-api/#verbs","title":"Verbs","text":"<p>Les API de REST ens permeten desenvolupar qualsevol tipus d\u2019aplicaci\u00f3 web amb totes les operacions possibles CRUD (crear, recuperar, actualitzar, suprimir). Les directrius REST suggereixen utilitzar un m\u00e8tode HTTP espec\u00edfic en un tipus espec\u00edfic de cridades realitzades al servidor (tot i que t\u00e8cnicament \u00e9s possible incomplir aquesta directriu, per\u00f2 est\u00e0 molt desaconsellat).</p> <p>Utilitzeu la informaci\u00f3 indicada a continuaci\u00f3 per trobar un m\u00e8tode HTTP adequat per a l'acci\u00f3 de l'API.</p>"},{"location":"09-rest-api/03-rest-api/#http-get","title":"HTTP GET","text":"<p>Utilitzeu les sol\u00b7licituds GET per recuperar informaci\u00f3 o recursos i no modificar-los de cap manera. Com que les sol\u00b7licituds GET no canvien l\u2019estat del recurs es diu que s\u00f3n m\u00e8todes segurs. Addicionalment, les API GET haurien de ser idempotents, el que significa que fer m\u00faltiples sol\u00b7licituds id\u00e8ntiques ha de produir el mateix resultat cada vegada fins que una altra API (POST o PUT) haja canviat l'estat del recurs al servidor.</p> <p>Per a qualsevol API GET determinada, si el recurs es troba al servidor, ha de retornar el codi de resposta HTTP 200 (OK), juntament amb el cos de resposta, que normalment \u00e9s contingut XML o JSON (per la seva naturalesa independent de la plataforma).</p> <p>En cas que el recurs NO es trobe al servidor, ha de retornar el codi de resposta HTTP 404 (NO TROBAT). De la mateixa manera, si es determina que la sol\u00b7licitud GET no est\u00e0 formada correctament, el servidor retornar\u00e0 el codi de resposta HTTP 400 (BAD REQUEST).</p>"},{"location":"09-rest-api/03-rest-api/#uri-de-sollicitud-dexemple","title":"URI de sol\u00b7licitud d\u2019exemple","text":"<ul> <li>HTTP GET http://www.appdomain.com/users</li> <li>HTTP GET http://www.appdomain.com/users?size=20&amp;page=5</li> <li>HTTP GET http://www.appdomain.com/users/123</li> <li>HTTP GET http://www.appdomain.com/users/123/address</li> </ul>"},{"location":"09-rest-api/03-rest-api/#http-post","title":"HTTP POST","text":"<p>Utilitzeu les API POST per crear nous recursos subordinats, per exemple, un fitxer est\u00e0 subordinat al directori que el cont\u00e9 o una fila est\u00e0 subordinada a una taula de bases de dades. Parlant estrictament en termes de REST, els m\u00e8todes POST s\u2019utilitzen per crear un nou recurs en la colecci\u00f3 de recursos.</p> <p>L\u2019ideal \u00e9s que, si s\u2019ha creat un recurs al servidor d\u2019origen, la resposta hauria de ser el codi de resposta HTTP 201 (Creat) i contindr\u00e0 una entitat que descriu l\u2019estat de la sol\u00b7licitud i fa refer\u00e8ncia al nou recurs i una cap\u00e7alera d\u2019ubicaci\u00f3.</p> <p>Moltes vegades, l\u2019acci\u00f3 realitzada pel m\u00e8tode POST pot no derivar en un recurs que puga ser identificat per un URI. En aquest cas, el codi de resposta HTTP 200 (OK) o el 204 (No Content) \u00e9s l'estat de resposta adequat.</p> <p>Les respostes a aquest m\u00e8tode no s\u00f3n emmagatzemades en mem\u00f2ria cau, tret que la resposta incloga els camps de cap\u00e7alera adequats de control de cach\u00e9 o caduca.</p> <p>Tingueu en compte que POST no \u00e9s segur ni idempotent i, si s'invoquen dues sol\u00b7licituds POST id\u00e8ntiques es produiran dos recursos diferents que continguin la mateixa informaci\u00f3 (excepte els identificadors de recursos).</p>"},{"location":"09-rest-api/03-rest-api/#uri-de-sollicitud-dexemple_1","title":"URI de sol\u00b7licitud d\u2019exemple","text":"<ul> <li>HTTP POST http://www.appdomain.com/users</li> <li>HTTP POST http://www.appdomain.com/users/123/accounts</li> </ul>"},{"location":"09-rest-api/03-rest-api/#http-put","title":"HTTP PUT","text":"<p>Utilitzeu les API PUT principalment per actualitzar un recurs existent (si el recurs no existeix, llavors l'API pot decidir crear un recurs nou o no). Si s'ha creat un recurs nou per l'API PUT, el servidor d'origen ha d'informar a l'agent d'usuari mitjan\u00e7ant la resposta del codi HTTP 201 (Creada) i si es modifica un recurs existent, els 200 (OK) o els 204 (Sense contingut). S'han d'enviar codis de resposta per indicar la finalitzaci\u00f3 correcta de la sol\u00b7licitud.</p> <p>Si la sol\u00b7licitud passa per una mem\u00f2ria cau i l'URI de sol\u00b7licitud identifica una o m\u00e9s entitats actualment en cach\u00e9, aquestes entitats haurien de ser considerades no vistes. Les respostes a aquest m\u00e8tode no s\u00f3n cach\u00e9.</p> <p>La difer\u00e8ncia entre les API de POST i PUT es pot observar en els URI de sol\u00b7licitud. Les sol\u00b7licituds POST es realitzen a les col\u00b7leccions de recursos, mentre que les peticions PUT es realitzen en un recurs individual.</p>"},{"location":"09-rest-api/03-rest-api/#uri-de-sollicitud-dexemple_2","title":"URI de sol\u00b7licitud d\u2019exemple","text":"<ul> <li>HTTP PUT http://www.appdomain.com/users/123</li> <li>HTTP PUT http://www.appdomain.com/users/123/accounts/456</li> </ul>"},{"location":"09-rest-api/03-rest-api/#http-delete","title":"HTTP DELETE","text":"<p>Com el nom indica les API DELETE s\u2019utilitzen per eliminar recursos (identificats per l\u2019URI de la sol\u00b7licitud).</p> <p>Una resposta exitosa de les sol\u00b7licituds DELETE haria ser el codi de resposta HTTP 200 (D'acord) si la resposta inclou una entitat que descriu l'estat, 202 (Acceptat) si l'acci\u00f3 s'ha posat en qua, o 204 (Sense contingut) si l'acci\u00f3 s'ha realitzat, per\u00f2 la resposta no inclou una entitat.</p> <p>Les operacions DELETE s\u00f3n idempotents. Si suprimiu un recurs, se suprimir\u00e0 de la col\u00b7lecci\u00f3 de recursos. Cridar repetidament a la API en aquest recurs no canviar\u00e0 el resultat, per\u00f2, cridar a un recurs per segona vegada retornar\u00e0 un 404 (NO TROBAT) ja que ja es va eliminar. Alguns poden argumentar que fa aix\u00f2 que el m\u00e8tode DELETE no sigui idempotent. \u00c9s una q\u00fcesti\u00f3 de discussi\u00f3 i d\u2019opini\u00f3 personal.</p>"},{"location":"09-rest-api/03-rest-api/#uri-de-sollicitud-dexemple_3","title":"URI de sol\u00b7licitud d\u2019exemple","text":"<ul> <li>HTTP DELETE http://www.appdomain.com/users/123</li> <li>HTTP DELETE http://www.appdomain.com/users/123/accounts/456</li> </ul> <p>Resum dels M\u00e8todes HTTP per a les API RESTful</p> <p>La taula seg\u00fcent resumeix l\u2019\u00fas dels m\u00e8todes HTTP comentats anteriorment.</p> HTTP Method CRUD Entire Collection (e.g. /users) Specific Item (e.g. /users/123) POST Create 201 (Created), \u2018Location\u2019 header with link to /users/{id} containing new ID. Avoid using POST on single resource GET Read 200 (OK), list of users. Use pagination, sorting and filtering to navigate big lists. 200 (OK), single user. 404 (Not Found), if ID not found or invalid. PUT Update/Replace 405 (Method not allowed), unless you want to update every resource in the entire collection of resource. 200 (OK) or 204 (No Content). Use 404 (Not Found), if ID not found or invalid. PATCH Partial Update/Modify 405 (Method not allowed), unless you want to modify the collection itself. 200 (OK) or 204 (No Content). Use 404 (Not Found), if ID not found or invalid. DELETE Delete 405 (Method not allowed), unless you want to delete the whole collection \u2014 use with caution. 200 (OK). 404 (Not Found), if ID not found or invalid."},{"location":"09-rest-api/03-rest-api/#bibliografia","title":"Bibliografia","text":"<ul> <li>Colaboradores de Wikipedia. Transferencia de Estado Representacional [en l\u00ednea]. Wikipedia, La enciclopedia libre, 2019 [fecha de consulta: 17 de febrero del 2020]. Disponible en https://es.wikipedia.org/w/index.php?title=Transferencia_de_Estado_Representacional&amp;oldid=122090690. </li> <li>WebConcepts. REST API concepts and examples. Youtube, 2014. Disponible en https://www.youtube.com/watch?v=7YcW25PHnAA</li> <li>RestfulApi.net. HTTP Methods. Disponible en https://restfulapi.net/http-methods/.</li> </ul>"},{"location":"09-rest-api/04-implentacioAPIREST/","title":"Implementaci\u00f3 d'una API RESTful en PHP","text":"<p>Anem a implementar una API senzilla basada en el nostre framework MVC.</p> <p>Tindrem els seg\u00fcents endpoints que caldr\u00e0 definir en la taula de rutes.</p> <ul> <li>POST /api/v1/movies</li> <li>GET /api/v1/movies</li> <li>GET /api/v1/movies/:id </li> </ul> <p>Tin en compte que aquesta versi\u00f3 \u00e9s molt b\u00e0sica i t\u00e9 mancances quant a  validaci\u00f3 i filtratge de dades. </p> <p>Com hem vist en l'apartat anterior el servidor respon a les sol\u00b7licitud HTTP amb dades en format JSON i un codi d'estat.</p> <p>Per poder respondre en dades en format JSON hem implementat el m\u00e8tode <code>Response::jsonResponse</code>.</p> <pre><code>/**\n  * @param $element\n  * @return false|string\n*/\npublic function jsonResponse(array $element, integer $code)\n{\nheader('Content-Type: application/json; charset=UTF-8');\nreturn json_encode($element);\n}\n</code></pre> <p>Perqu\u00e8 un objecte puga convertir-se en un string JSON caldr\u00e0 implementar en la classe l'interf\u00edcie <code>JsonSerializable</code> que obliga a implmentar el m\u00e8tode <code>jsonSerialize</code> que haur\u00e0 de tornar un array que represente l'objecte.</p> <pre><code># src/Controllers/ApiController.php\n/**\n  * @return string\n  * @throws \\App\\Core\\Exception\\ModelException\n*/\npublic function index(): string\n{\n$movieModel = App::getModel(MovieModel::class);\n$movies = $movieModel-&gt;findAllPaginated(1, 8,\n[\"release_date\" =&gt; \"DESC\", \"title\" =&gt; \"ASC\"]);\nreturn $this-&gt;response-&gt;jsonResponse($movies);\n}\n</code></pre>"},{"location":"09-rest-api/04-implentacioAPIREST/#prova-de-la-api-amb-postman","title":"Prova de la API amb Postman","text":""},{"location":"09-rest-api/04-implentacioAPIREST/#documentacio-de-la-api-en-openapi","title":"Documentaci\u00f3 de la API en OpenApi","text":""},{"location":"09-rest-api/04-implentacioAPIREST/#consumir-la-api","title":"Consumir la API","text":""},{"location":"09-rest-api/05-rest-api-symfony/","title":"Desenvolupament de serveis REST amb Symfony","text":""},{"location":"09-rest-api/05-rest-api-symfony/#introduccio","title":"Introducci\u00f3","text":"<p>Vegem ara quins passos donar per a construir una API REST que done suport a les operacions b\u00e0siques sobre una o diverses entitats: consultes (GET), insercions (POST), modificacions (PUT) i esborrats (DELETE).</p> <p>A l'hora d'implementar una soluci\u00f3 en Symfony ens trobem en tres opcions:</p> <ol> <li>API senzilla amb els m\u00e8todes que ens proporciona la classe <code>AbstractController</code>.</li> <li>Fer \u00fas d'un bundle com FOSRestBundle que ens permet una major flexibilitat.</li> <li>Fer \u00fas d'API platform, una ferramenta molt completa basada en PHP per a crear API Rest.</li> </ol> <p>L'elecci\u00f3 d'una soluci\u00f3 o altra dependr\u00e0 de cada projecte. En aquest curs emprarem API platform.</p>"},{"location":"09-rest-api/05-rest-api-symfony/#pas-1-arrencar-del-projecte","title":"Pas 1: Arrencar del projecte","text":"<p>El projecte d'exemple ser\u00e0 un projecte independent basat en Truiter. Aix\u00ed podrem aprofitar el model de dades.</p> <p>Primerament crearem el projecte de Symfony:</p> <p><pre><code>composer create-project symfony/skeleton api-truiter-symfony ^5.4\n</code></pre> En aquesta ordre crearem un projecte b\u00e0sic de Symfony en la versi\u00f3 5.4, es tracta d'un projecte que no inclou ni Doctrine,  ni Twig, per exemple.</p> <p>Twig no ser\u00e0 necessari, ja que es tracta d'una API, per\u00f2 Doctrine, s\u00ed. A continuaci\u00f3 instal\u00b7larem el paquet d'API platform que inclou entre altres components Doctrine:</p> <pre><code>composer require api\n</code></pre> <p>En accedir a <code>http://localhost/api</code> veurem la documentaci\u00f3 de l'API:</p> <p></p>      http://localhost/api  <p>Actualment no tenim res.</p>"},{"location":"09-rest-api/05-rest-api-symfony/#pas-2-crear-el-model-de-dades","title":"Pas 2: Crear el model de dades","text":"<p>Les entitats i els repositoris els copiarem del projecte Truiter o podrem crear-lo de nou fent \u00fas del Maker Bundle.</p> <p>En eixa cas caldr\u00e0 instal\u00b7lar-lo. Aprofitarem per instal\u00b7lar altres components que  ens seran \u00fatils.</p> <p><pre><code>composer require symfony/maker-bundle --dev\ncomposer require doctrine/doctrine-fixtures-bundle --dev\ncomposer require fakerphp/faker --dev\ncomposer require mmo/faker-images --dev\ncomposer require symfony/profiler-pack --dev composer require symfony/apache-pack\n</code></pre> Llevarem les refer\u00e8ncies a VichUploader, ja que usarem els formularis d'una altra forma.</p> <p>L'entitat Tweet quedaria aix\u00ed:</p> <pre><code>namespace App\\Entity;\nuse ApiPlatform\\Metadata\\ApiResource;\nuse App\\Repository\\TweetRepository;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n#[ORM\\Entity(repositoryClass: TweetRepository::class)]\n#[ApiResource]\nclass Tweet\n{\n#[ORM\\Id]\n#[ORM\\GeneratedValue]\n#[ORM\\Column]\nprivate ?int $id = null;\n#[ORM\\Column(length: 280)]\n#[Assert\\Length(min: 2, max: 280)]\nprivate ?string $text = null;\n#[ORM\\Column(type: Types::DATETIME_MUTABLE)]\n#[Assert\\NotBlank]\nprivate ?\\DateTimeInterface $createdAt = null;\n#[ORM\\Column]\n#[Assert\\NotBlank]\nprivate ?int $likeCount = null;\n#[ORM\\ManyToOne(inversedBy: 'tweets')]\n#[ORM\\JoinColumn(nullable: false)]\n#[Assert\\NotBlank]\nprivate ?User $author = null;\n#[ORM\\OneToMany(mappedBy: 'tweet', targetEntity: Photo::class)]\nprivate Collection $attachments;\n//... \n}\n</code></pre> <p>L'atribute <code>#[ApiResource]</code> indica que aquesta entitat estar\u00e0 exposada en la API.</p> <p>Important</p> <p>Si volem treballar en la nova versi\u00f3 de API platform \"&gt;=2.7\" caldr\u00e0 activar la seg\u00fcent configuraci\u00f3: <pre><code># api/config/packages/api_platform.yaml\napi_platform:\nmetadata_backward_compatibility_layer: false\n</code></pre></p> <p>En accedir a la API ens mostrar\u00e0 el seg\u00fcent:</p> <p></p>"},{"location":"09-rest-api/05-rest-api-symfony/#pas-3-restringir-operacions","title":"Pas 3: Restringir operacions","text":"<p>Enabling or disabling operations</p>"},{"location":"09-rest-api/05-rest-api-symfony/#pas-4-filtrar-per-propietats","title":"Pas 4: Filtrar per propietats","text":"<p>Filters</p>"},{"location":"09-rest-api/05-rest-api-symfony/#pas-5-validar-les-dades","title":"Pas 5: Validar les dades","text":"<p>Validating data</p>"},{"location":"09-rest-api/05-rest-api-symfony/#pas-6-provar-la-api","title":"Pas 6: Provar la API","text":""},{"location":"09-rest-api/05-rest-api-symfony/#installar-el-paquet-de-testing","title":"Instal\u00b7lar el paquet de testing","text":"<p>Primerament caldr\u00e0 instal\u00b7lar els paquets:</p> <pre><code>composer req --dev symfony/test-pack\ncomposer req symfony/http-client\n</code></pre> <p>Aquest paquet instal\u00b7lar\u00e0 els paquets b\u00e0sics necessaris per comen\u00e7ar.</p>"},{"location":"09-rest-api/05-rest-api-symfony/#preparar-la-base-de-dades-de-prova","title":"Preparar la base de dades de prova","text":"<p>Com que es tracta de proves funcionals que modificaran la base de dades \u00e9s molt important  tindre preparats unes dades de prova consistents amb <code>DoctrineFixturesBundles</code>.</p> <p>Entorn de proves</p> <p>Recorda que has de configurar la base de dades en el fitxer <code>.env.test</code> i d'executar les ordres amb l'opci\u00f3 <code>--env=test</code>  perqu\u00e8 treballen en l'entorn de _testing`.</p> <p>A m\u00e9s, \u00e9s interessant instal\u00b7lar i configurar el paquet <code>dama/doctrine-test-bundle</code> que deixa la base de dades al seu estat inicial despr\u00e9s de cada prova.</p>"},{"location":"09-rest-api/05-rest-api-symfony/#installar-paquets-addicionals","title":"Instal\u00b7lar paquets addicionals","text":"<p>Si volem fer proves amb <code>JSON Schema</code> per comprovar que les dades rebudes compleixen amb el seu esquema.</p> <pre><code>composer req --dev justinrainbow/json-schema\n</code></pre>"},{"location":"09-rest-api/05-rest-api-symfony/#exemple","title":"Exemple","text":"<pre><code>namespace App\\Tests\\Service;\nuse ApiPlatform\\Symfony\\Bundle\\Test\\ApiTestCase;\nuse App\\Entity\\Tweet;\nuse DateTime;\nclass TweetsTest extends ApiTestCase\n{\npublic function testGetCollectionReturnsValidData(): void\n{\n$response = static::createClient()-&gt;request('GET', '/api/tweets',\n[ \"headers\" =&gt; [\"Accept: application/json\"]]\n);\n$this-&gt;assertResponseIsSuccessful();\n$this-&gt;assertMatchesResourceCollectionJsonSchema(Tweet::class);\n$this-&gt;assertCount(20, $response-&gt;toArray());\n}\npublic function testPostValidData(): void\n{\n$response = static::createClient()-&gt;request('POST', '/api/tweets',\n[\n'headers' =&gt; [\"Accept: application/json\"],\n'json' =&gt; [\n'text' =&gt; 'Proves',\n'author' =&gt; '/api/users/1'\n]\n]\n);\n$date = new DateTime();\n$dateStr = $date-&gt;format('c');\n$this-&gt;assertResponseStatusCodeSame(201);\n$this-&gt;assertMatchesResourceItemJsonSchema(Tweet::class);\n$this-&gt;assertJsonContains([\n'text' =&gt; 'Proves',\n'createdAt' =&gt; $dateStr,\n'author' =&gt; '/api/users/1',\n'likeCount' =&gt; 0\n]);\n}\n}\n</code></pre> <p>Cal destacar que afegim <code>'headers' =&gt; [\"Accept: application/json\"]</code> per demanar la resposta en format JSON b\u00e0sic. </p> <p>Respecte a la data, el que fem es passar-la en format ISO 8601.</p> <p>Functional tests</p>"},{"location":"09-rest-api/05-rest-api-symfony/#pas-7-triar-les-propietats-a-exposar-serialitzacio","title":"Pas 7: Triar les propietats a exposar. Serialitzaci\u00f3","text":"<p>Abans d'entrar en m\u00e0teria, \u00e9s interessant tindre clars alguns conceptes:</p> <ul> <li>Serialitzar. La serialitzaci\u00f3 \u00e9s el proc\u00e9s de convertir un objecte en una altre format per a emmagatzemar-lo o transmetre'l i posteriorment ser decodificat.</li> <li>Normalitzar. Ajuden en el proc\u00e9s de serialitzaci\u00f3, convertint els objectes en un element intermig, com pot ser una array.</li> </ul> <p></p> <p>El <code>serializer</code> de Symfony ens permetr\u00e0 definir quines propietats exposem depenent del context.</p> <p>The Serialization Process</p> <p>En el cas que ens ocupa, a l'hora de crear un nou <code>Tweet</code>, que un usuari puga enviar la data de creaci\u00f3 o el n\u00famero de likes no \u00e9s desitjable. En canvi, en el cas de recuperar els tweets s\u00ed que t\u00e9 sentit.</p> <p>Gr\u00e0cies a Symfony Serializer podrem configurar este escenari.</p> <p>API Platform permet definir el contex fent \u00fas dels grups i aix\u00ed controlar que es mostra en llegir (normalitzaci\u00f3) i  en escriure (denormalitzaci\u00f3).</p>"},{"location":"09-rest-api/05-rest-api-symfony/#activar-les-anotacions","title":"Activar les anotacions","text":"<pre><code># config/packages/framework.yaml\nframework:\nserializer: { enable_annotations: true }\n</code></pre>"},{"location":"09-rest-api/05-rest-api-symfony/#aplicar-les-als-recursos","title":"Aplicar-les als recursos","text":"<p><pre><code>...\n#[ApiResource(\nnormalizationContext: ['groups' =&gt; ['read']],\ndenormalizationContext: ['groups' =&gt; ['write']],\n)]\nclass Tweet {\n#[ORM\\Column(length: 280)]\n#[Groups(['read', 'write'])]\nprivate ?string $text = null;\n#[ORM\\Column(type: Types::DATETIME_MUTABLE)]\n#[Groups(['read'])]\nprivate ?\\DateTimeInterface $createdAt = null;\n#[ORM\\Column]\n#[Groups(['read'])]\nprivate ?int $likeCount = null;\n}\n</code></pre> D'esta forma aconseguir\u00edem que en fer GET es mostraren els tres camps per\u00f2  en fer POST sols <code>text</code>.</p>"},{"location":"09-rest-api/05-rest-api-symfony/#recursos","title":"Recursos","text":"<ul> <li>Repositori de Github de Truiter API</li> <li>API Platform Crash Course</li> <li>API Platform 3: Mythically Good RESTful APIs</li> <li>En Primeros pasos con Symfony 5 como API REST  es genera una API basada en els mateixos components que hem utilitzat.</li> <li>En Getting started REST API with Symfony 4  s'utilitzen diversos components addicionals com el Fos-Rest-Bundle i JMS Serializer.</li> <li>En Curso de Symfony 5. Creando una API desde cero teniu un curs molt complet sobre com crear una API en Symfony 5 des de cero.</li> <li>API Platform \u00e9s un framework que permet crear API de forma quasi autom\u00e0tica en Symfony.</li> <li>https://medium.com/francisco-ugalde/restful-api-con-symfony-4-jwt-parte-1-2accdf59a0ae</li> </ul>"},{"location":"09-rest-api/06-JWT/","title":"JWT (JSON Web Token)","text":"<p>Els mecanismes d'autenticaci\u00f3 tradicional en aplicacions web estan basats en sessions: l'usuari envia les seues credencials a trav\u00e9s d'algun formulari, el servidor les valida i emmagatzema en la sessi\u00f3 les dades de l'usuari, perqu\u00e8, mentre no caduque la sessi\u00f3 o la tanque l'usuari, puga seguir accedint sense haver de tornar a autenticar-se.</p> <p>No obstant aix\u00f2, aquest tipus d'autenticaci\u00f3 t\u00e9 la limitaci\u00f3 de ser exclusiva per a aplicacions web, \u00e9s a dir, per a clients web que es connecten a servidors web. Si volgu\u00e9rem adaptar l'aplicaci\u00f3 a m\u00f2bil, o a una versi\u00f3 d'escriptori, no podr\u00edem seguir emprant aquest mecanisme.</p> <p>Per a superar aquest escull, podem utilitzar l'autenticaci\u00f3 basada en tokens. Aquesta \u00e9s una autenticaci\u00f3 \"sense estat\" (stateless), la qual cosa significa que no s'emmagatzema res entre client i servidor per a seguir accedint autenticats. El que es fa \u00e9s el seg\u00fcent:</p> <ol> <li>El client envia al servidor les seues credencials (usuari i     contrasenya)</li> <li>El servidor les valida, i si s\u00f3n correctes, genera una cadena     xifrada anomenada token, que cont\u00e9 la validaci\u00f3 de l'usuari, a m\u00e9s     de certa informaci\u00f3 addicional que puguem voler afegir (com el nom d'usuari,      per exemple). Aquest token s'envia de tornada a     l'usuari com a resposta a la seua autenticaci\u00f3.</li> <li>A partir d'aquest punt, cada vegada que el client vullga     autenticar-se contra el servidor per a sol\u00b7licitar un recurs, n'hi     ha prou en que envie el token que el servidor li va proporcionar. El     servidor s'encarregar\u00e0 de verificar-lo per a comprovar que \u00e9s     correcte, i donar-li acc\u00e9s o denegar-li'l.</li> </ol> <p>Igual que les sessions, els tokens tamb\u00e9 poden tenir una caducitat, que s'indica dins del propi token. Si, passat aqueix temps, el servidor rep el token, ho descartar\u00e0 com a inv\u00e0lid (caducat), i el client tornar\u00e0 a no estar autenticat.</p> <p>JSON Web Token \u00e9s un est\u00e0ndard obert (RFC 7519) que defineix un mode compacte i  aut\u00f2nom de transmetre de forma segura la informaci\u00f3 entre dues parts com un  objecte JSON. Aquesta informaci\u00f3 pot ser verificada i \u00e9s fiable perqu\u00e8 est\u00e0 signada digitalment.</p> <p>Els JWT es poden signar usant un secret (amb l'algoritme HMAC) o utilitzant un parell de claus p\u00fabliques/privades usant RSA i contenen la informaci\u00f3 de l'usuari  autenticat.</p>"},{"location":"09-rest-api/06-JWT/#estructura-del-token","title":"Estructura del token","text":"Exemple de token extret de jwt.io"},{"location":"09-rest-api/06-JWT/#cicle-de-vida-del-token-jwt","title":"Cicle de vida del token JWT","text":"Intercanvi de missatges"},{"location":"09-rest-api/06-JWT/#implementacio-en-symfony","title":"Implementaci\u00f3 en Symfony","text":"<p>Per a poder treballar amb JWT en Symfony, podem emprar (entre  altres) el bundle <code>lexik/LexikJWTAuthenticationBundle</code>, que s'instal\u00b7la d'aquesta manera:</p> <p><pre><code>composer require jwt-auth\n</code></pre> A m\u00e9s, necessitarem afegir el bundle de seguretat de Symfony:</p> <pre><code>composer require security\n</code></pre>"},{"location":"09-rest-api/06-JWT/#entitat-user","title":"Entitat User","text":"<p>Caldr\u00e0 disposar d'una entitat que implemente la interf\u00edcie <code>UserInterface</code> que ja tenim del projecte anterior. </p>"},{"location":"09-rest-api/06-JWT/#endpoints","title":"Endpoints","text":"<p>Usarem un endpoint:</p> <ul> <li><code>/login</code> ser\u00e0 la que validar\u00e0 les credencials.</li> </ul>"},{"location":"09-rest-api/06-JWT/#generacio-de-certificats","title":"Generaci\u00f3 de certificats","text":"<p>Per a poder codificar els tokens, \u00e9s necessari generar un parell de certificats.</p> <p>Generarem un privat per a generar el token quan l'usuari es valide, i un p\u00fablic per a poder-lo validar quan l'usuari l'envie.</p> <p>Per a a\u00e7\u00f2, executem la seg\u00fcent ordre des del directori arrel del projecte. </p> <pre><code>php bin/console lexik:jwt:generate-keypair\n</code></pre> <p>Amb aquesta ordre es crear\u00e0 una clau privada, i una p\u00fablica a partir de la privada. Aquestes claus requeriran una contrasenya que es genera autom\u00e0ticament i es troba en el fitxer <code>.env</code>, en la clau <code>JWT_PASSPHRASE</code>.</p> <p>En el fitxer <code>.env</code> s'hauran creat estes l\u00ednies:</p> <pre><code>JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem\nJWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem\nJWT_PASSPHRASE=14ea51a657fac12644ab2653d8933644\n</code></pre> <p>I en el fitxer de configuraci\u00f3 <code>config/packages/lexik_authentication.yaml</code> estes:</p> <pre><code>lexik_jwt_authentication:\nsecret_key: '%env(resolve:JWT_SECRET_KEY)%' # required for token creation\npublic_key: '%env(resolve:JWT_PUBLIC_KEY)%' # required for token verification\npass_phrase: '%env(JWT_PASSPHRASE)%' # required for token creation\n</code></pre>"},{"location":"09-rest-api/06-JWT/#configuracio-de-configpackagessecurityyaml","title":"Configuraci\u00f3 de <code>config/packages/security.yaml</code>","text":"<p>L'arxiu principal de seguretat <code>config/packages/security.yaml</code> haur\u00e0 de contenir aquests atributs per a l'autenticaci\u00f3 per token:</p> <pre><code># config/packages/security.yaml\nsecurity:\n# https://symfony.com/doc/current/security.html#c-hashing-passwords\npassword_hashers:\nApp\\Entity\\User: 'auto'\n# https://symfony.com/doc/current/security/authenticator_manager.html\nenable_authenticator_manager: true\n# https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers\nproviders:\n# used to reload user from session &amp; other features (e.g. switch_user)\nusers:\nentity:\nclass: App\\Entity\\User\nproperty: username\nfirewalls:\ndev:\npattern: ^/_(profiler|wdt)\nsecurity: false\napi:\npattern: ^/api/\nstateless: true\nprovider: users\njwt: ~\nmain:\njson_login:\ncheck_path: login # The name in routes.yaml is enough for mapping\nusername_path: username\npassword_path: password\nsuccess_handler: lexik_jwt_authentication.handler.authentication_success\nfailure_handler: lexik_jwt_authentication.handler.authentication_failure\naccess_control:\n- { path: ^/$, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI        \n- { path: ^/login, roles: PUBLIC_ACCESS } # Allows accessing login controller\n- { path: ^/api$, roles: PUBLIC_ACCESS } # Allows accessing the doc\n- { path: ^/, roles: IS_AUTHENTICATED_FULLY } # Forces authentication in all the requests\n</code></pre> <p>Caldr\u00e0 afegir tamb\u00e9 la seg\u00fcent ruta en <code>config/routes.yaml</code>:</p> <pre><code>login:\npath: /login\n</code></pre> <p>El que hem definit en aquest fitxer \u00e9s:</p> <ul> <li>El firewall <code>main</code> que s'activar\u00e0 en accedir a la ruta <code>/login</code>. Ruta que ser\u00e0 p\u00fablica, com s'observa en <code>access_control</code>.</li> <li><code>json_login</code> indica que s'espera una sol\u00b7licitud via JSON.</li> <li>El firewall <code>api</code> s'activar\u00e0 en la resta de rutes de la API, on s'indicar\u00e0 que cap aplicar l'autenticaci\u00f3 jwt.</li> <li><code>jwt: ~</code> activa l'autenticador JWT.</li> </ul>"},{"location":"09-rest-api/06-JWT/#provant-lautenticacio","title":"Provant l'autenticaci\u00f3","text":"<p>Per a provar que l'autenticaci\u00f3 funciona, crearem una nova petici\u00f3 POST en Postman a la URI <code>/login</code>, i li passem en el cos de la petici\u00f3 l'usuari (username) i la contrasenya (password). En aquest exemple, suposem que l'usuari \u00e9s <code>user</code> i la contrasenya (sense encriptar) \u00e9s <code>user</code>. Haurem d'afegir tamb\u00e9 una cap\u00e7alera (Header) amb l'atribut <code>Content\u00adType</code> establit a <code>application/json</code>.</p> <p>Tests</p> <p>Seria interessant crear un test que a m\u00e9s ens permetr\u00e0 provar el control d'acc\u00e9s.</p> <p>Si tot va correctament, rebrem com a resposta un token:</p> <p></p> Provant l'autenticaci\u00f3 amb Postman <p>Si analitzem el token obtindrem:</p> <p></p> An\u00e0lisi del token <p>La signatura \u00e9s inv\u00e0lida ja que no s'ha pogut verificar amb les claus p\u00fablica i privada.</p>"},{"location":"09-rest-api/06-JWT/#provant-lautoritzacio","title":"Provant l'autoritzaci\u00f3","text":"<p>Ara, obtindrem un llistat de tweets. Si llancem la petici\u00f3 en Postman (o en el test) sense cap tipus d'autoritzaci\u00f3, rebrem aquest missatge:</p> <pre><code>{\n\"code\": 401,\n\"message\": \"JWT Token not found\"\n}\n</code></pre> <p>Hem d'afegir una cap\u00e7alera <code>Authorization</code> el valor de la qual siga el prefix <code>\"Bearer \"</code> (incloent l'espai final) seguit del token que ens ha enviat el servidor en autenticar-nos:</p> <p></p> Sol\u00b7licitud amb el token incl\u00f2s <p>D'aquesta forma s\u00ed que obtindrem el llistat de tweets. Haurem de procedir  de la mateixa forma (enviant el token en la cap\u00e7alera <code>Authorization</code>) per a poder emprar la resta de sol\u00b7licituds.</p>"},{"location":"09-rest-api/06-JWT/#activar-lautoritzacio-des-de-la-documentacio","title":"Activar l'autoritzaci\u00f3 des de la documentaci\u00f3","text":"<p>Primerament vincularem el sistema d'autenticaci\u00f3 afegint:</p> <pre><code># config/packages/api_platform.yaml\napi_platform:\nswagger:\napi_keys:\nJWT:\nname: Authorization\ntype: header\n</code></pre> <p>Despr\u00e9s, per poder provar l'autenticaci\u00f3, afegirem en <code>lexik_jwt_authentication.yaml</code>:</p> <pre><code>    api_platform:\ncheck_path: /login\nusername_path: username\npassword_path: password\n</code></pre> <p>Una vegada obtingut el token caldr\u00e0 afegir-lo a la cap\u00e7alera des del bot\u00f3 <code>[Authorize]</code>, introduint el text: <code>Bearer NEW_TOKEN</code>. Canviant <code>NEW_TOKEN</code> pel token obtingut.</p>"},{"location":"09-rest-api/06-JWT/#recursos","title":"Recursos","text":"<ul> <li>JWT Authentication en API Platform</li> <li>Security en API Platform</li> <li>https://jwt.io/</li> <li>Functional Testing with JWT Authentication Bundle</li> <li>LexikJWTAuthenticationBundle</li> <li>https://enmilocalfunciona.io/construyendo-una-web-api-rest-segura-con-json-web-token-en-net-parte-i/</li> <li>https://www.adictosaltrabajo.com/2017/09/25/securizar-un-api-rest-utilizando-json-web-tokens/</li> <li>https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS</li> </ul>"},{"location":"09-rest-api/07-altres-funcionalitats/","title":"Altres funcionalitats","text":""},{"location":"09-rest-api/07-altres-funcionalitats/#control-del-temps-de-vida-del-token","title":"Control del temps de vida del token","text":""},{"location":"09-rest-api/07-altres-funcionalitats/#paginacio","title":"Paginaci\u00f3","text":""},{"location":"09-rest-api/07-altres-funcionalitats/#seguiment-dels-canvis","title":"Seguiment dels canvis","text":"<p>En molts sistemes, en modificar qualsevol objecte, queda registrat qui i quan s'ha realitzat dit canvi.</p> <p>En Symfony, es pot implementar fent \u00fas d'algunes extensions de Doctrine:</p> <ul> <li><code>Blameable</code> - updates string or reference fields on create, update and even property change with a string or object (e.g. user).</li> <li><code>Timestampable</code> - updates date fields on create, update and even property change.</li> </ul> <p>More info at: Doctrine Extensions</p>"},{"location":"09-rest-api/07-altres-funcionalitats/#mes-enlla-del-crud","title":"M\u00e9s enll\u00e0 del CRUD","text":""},{"location":"09-rest-api/07-altres-funcionalitats/#gestio-dimatges","title":"Gesti\u00f3 d'imatges","text":"<p>B\u00e0sicament hi ha dues formes de fer-ho: la primera d'elles seria usant un formulari multi-part com fem en les aplicacions web tradicionals, la segona usant l'estil API, \u00e9s a dir, enviant la imatge amb JSON gr\u00e0cies a base64_decode que perment serialitzar les imatges a string per poder enviar-les en la sol\u00b7licitud. Ens centrarem en aquesta opci\u00f3.</p> <p>https://symfonycasts.com/screencast/symfony-uploads/api-uploads https://api-platform.com/docs/core/file-upload/</p>"},{"location":"UD11/","title":"11. Introducci\u00f3 a Symfony (old)","text":"<pre><code>  1. Instal\u00b7laci\u00f3 i configuraci\u00f3 de Symfony\n      a) Arquitectura MVC\n      b) Introducci\u00f3 a YALM\n  2. Vistes\n      a) Motor de plantilles Twig\n  3. Injecci\u00f3 de depend\u00e8ncies: Contenidors de serveis.\n  4. Model\n      a) Doctrine\n  5. Creaci\u00f3 i validaci\u00f3 de formularis\n  6. Seguretat i Control d'acc\u00e9s\n  7. Bundles.\n</code></pre>"},{"location":"UD11/11.01/","title":"Introducci\u00f3 a Symfony","text":"<p>{: .no_toc }</p>"},{"location":"UD11/11.01/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD11/11.01/#introduccio","title":"Introducci\u00f3","text":"<p>Symfony \u00e9s un framework dissenyat per desenvolupar aplicacions web basat en el patr\u00f3 Model Vista Controlador. Per comen\u00e7ar, separa la l\u00f2gica de negoci, la l\u00f2gica de servidor i la presentaci\u00f3 de l'aplicaci\u00f3 web. Proporciona diverses eines i classes encaminades a reduir el temps de desenvolupament d'una aplicaci\u00f3 web complexa. A m\u00e9s, automatitza les tasques m\u00e9s comunes, permetent el desenvolupador dedicar-se completament als aspectes espec\u00edfics de cada aplicaci\u00f3.</p> <p>{: .alert .alert-info}</p> <p>Symfony est\u00e0 desenvolupat completament en PHP 5.3. \u00c9s compatible amb la majoria de gestors de bases de dades, com MySQL, PostgreSQL, Oracle i Microsoft SQL Server. Es pot executar tant en plataformes * nix (Unix, Linux, etc.) com en plataformes Windows.</p> <p>Altres frameworks que podem trobar basats en l'arquitectura MVC s\u00f3n:</p> <ul> <li>PHP: Laravel, Phalcon, CakePHP</li> <li>Ruby: Ruby on Rails</li> <li>.NET: Spring.NET, ASP.NET MVC</li> <li>Java: Spring</li> <li>Python: Django, Zope3</li> </ul>"},{"location":"UD11/11.01/#que-es-un-framework","title":"Qu\u00e8 \u00e9s un framework?","text":"<p>{: .no_toc .nocount } Un framework, entorn de treball o marc de treball \u00e9s un conjunt estandarditzat de conceptes, pr\u00e0ctiques i criteris per enfocar un tipus de problem\u00e0tica particular que serveix com a refer\u00e8ncia, per enfrontar i resoldre nous problemes d'\u00edndole similar.</p> <p>En el desenvolupament de programari, un entorn de treball \u00e9s una estructura conceptual i tecnol\u00f2gica d'assist\u00e8ncia definida, normalment, amb artefactes o m\u00f2duls concrets de programari, que pot servir de base per a l'organitzaci\u00f3 i desenvolupament de programari. T\u00edpicament, pot incloure suport de programes, biblioteques, i un llenguatge interpretat, entre d'altres eines, per aix\u00ed ajudar a desenvolupar i unir els diferents components d'un projecte.</p> <p>Representa una arquitectura de programari que modela les relacions generals de les entitats del domini, i proveeix una estructura i una especial metodologia de treball, la qual est\u00e9n o utilitza les aplicacions del domini.</p>"},{"location":"UD11/11.01/#caracteristiques","title":"Caracter\u00edstiques","text":"<p>Symfony va ser dissenyat per ajustar-se als seg\u00fcents requisits: </p> <ul> <li>F\u00e0cil d'instal\u00b7lar i configurar en la majoria de plataformes (i amb la garantia que funciona correctament en els sistemes Windows i Unix-like est\u00e0ndards).</li> <li>Independent de el sistema gestor de bases de dades. La seva capa d'abstracci\u00f3 i l'\u00fas de ORM (Doctrine 2, Propel), permeten canviar amb facilitat de SGBD en qualsevol fase de projecte.</li> <li>Utilitza programaci\u00f3 orientada a objectes i caracter\u00edstiques com els espais de noms, d'aqu\u00ed que sigui imprescindible PHP &gt; 5.3.</li> <li>Senzill d'utilitzar en la majoria de casos, encara que \u00e9s preferible per al desenvolupament de grans aplicacions web que per a petits projectes.</li> <li>Encara que utilitza Model Vista Controlador (MVC), t\u00e9 la seva pr\u00f2pia forma de treball en aquest punt, amb variants del MVC cl\u00e0ssic com la capa d'abstracci\u00f3 de base de dades, el controlador frontal i les accions.</li> <li>Basat en la premissa de \"convenir en comptes de configurar\", en la qual el desenvolupador nom\u00e9s ha de configurar all\u00f2 que no \u00e9s convencional.</li> <li>Segueix la majoria de millors pr\u00e0ctiques i patrons de disseny per a la web.</li> <li>Preparat per a aplicacions empresarials i adaptable a les pol\u00edtiques i arquitectures pr\u00f2pies de cada empresa, a m\u00e9s de ser prou estable com per a desenvolupar aplicacions a llarg termini.</li> <li>Codi f\u00e0cil de llegir que inclou comentaris de phpDocumentor i que permet un manteniment molt senzill.</li> <li>F\u00e0cil d'estendre, el que permet la seva integraci\u00f3 amb les biblioteques d'altres fabricants.</li> <li>Una l\u00ednia d'ordres que facilita la generaci\u00f3 de codi.</li> </ul> <p>Symfony reutilitza conceptes i desenvolupaments de tercers que han tingut \u00e8xit:</p> <ul> <li>Doctrine: framework ORM per a PHP</li> <li>Twig: poder\u00f3s motor de plantilles</li> <li>Llenguatge YAML, competidor de l'XML, configuraci\u00f3 totalment separada del codi.</li> <li>Instruccions de consola denominades tasks (tasques), que ens permeten executar ordres a la terminal</li> <li>Subframework per treballar amb formularis</li> <li>Ampli suport per a la seguretat del lloc: SQL Injection, XSS o CSRF</li> <li>\u00das de Composer per generar les depend\u00e8ncies</li> <li>A partir de la versi\u00f3 4 s'utilitza una nova eina pr\u00f2pia de Symfony (Flex) que ens facilita aquesta tasca</li> </ul>"},{"location":"UD11/11.01/#introduccio-a-yaml","title":"Introducci\u00f3 a YAML","text":"<p>Els fitxers de configuraci\u00f3 de Symfony es poden escriure en PHP, en XML o en YAML. S\u00f3n equivalents a nivell de rendiment (tots es transformen a PHP abans d'executar l'aplicaci\u00f3). PHP \u00e9s m\u00e9s flexible, per\u00f2 m\u00e9s complicat XML \u00e9s el m\u00e9s llarg d'escriure, per\u00f2 es pot validar. YAML \u00e9s m\u00e9s conc\u00eds que XML, per\u00f2 no podem validar.</p> <p>En Symfony, per defecte s'utilitza YAML</p>"},{"location":"UD11/11.01/#sintaxis-de-yaml","title":"Sintaxis de YAML","text":"<p>Cinc conceptes b\u00e0sics:  * No admet tabulacions, nom\u00e9s espais  * La informaci\u00f3 s'indica mitjan\u00e7ant parells clau: valor (si la clau o el valor tenen espais en blanc, es tanquen amb cometes simples o dobles)  * La jerarquia de la informaci\u00f3 s'estableix escrivint 4 espais en blanc per davant del parell clau: valor  * Els arrays normals s'indiquen amb els claud\u00e0tors [i] i els arrays associatius amb les claus {i}  * Tamb\u00e9 podem indicar una matriu escrivint cada element en una nova l\u00ednia que comenci per -  * Els comentaris s'indiquen prefixant el car\u00e0cter # per davant de cadascuna de les seves l\u00ednies</p>"},{"location":"UD11/11.01/#alguns-exemples","title":"Alguns exemples","text":"<pre><code>homepage:\npath: /{_locale}\ncontroller: Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction\nrequirements:\n_locale: '%app_locales%'\ndefaults:\ntemplate: default/homepage.html.twig\n_locale: '%locale%'\n</code></pre> <pre><code>security:\nencoders:\n# Our user class and the algorithm we'll use to encode passwords\n# 'auto' means to let Symfony choose the best possible password hasher (Argon2 or Bcrypt)\n# https://symfony.com/doc/current/security.html#c-encoding-the-user-s-password\nApp\\Entity\\User: 'auto'\nproviders:\n# https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded\n# In this example, users are stored via Doctrine in the database\n# To see the users at src/App/DataFixtures/ORM/LoadFixtures.php\n# To load users from somewhere else: https://symfony.com/doc/current/security/custom_provider.html\ndatabase_users:\nentity: { class: App\\Entity\\User, property: username }\n# https://symfony.com/doc/current/security.html#initial-security-yml-setup-authentication\nfirewalls:\ndev:\npattern: ^/(_(profiler|wdt)|css|images|js)/\nsecurity: false\nmain:\n# this firewall applies to all URLs\npattern: ^/\n# but the firewall does not require login on every page\n# denying access is done in access_control or in your controllers\nanonymous: true\n# This allows the user to login by submitting a username and password\n# Reference: https://symfony.com/doc/current/security/form_login_setup.html\nform_login:\n# The route name that the login form submits to\ncheck_path: security_login\n# The name of the route where the login form lives\n# When the user tries to access a protected page, they are redirected here\nlogin_path: security_login\n# Secure the login form against CSRF\n# Reference: https://symfony.com/doc/current/security/csrf_in_login_form.html\ncsrf_token_generator: security.csrf.token_manager\n# The page users are redirect to when there is no previous page stored in the\n# session (for example when the users access directly to the login page).\ndefault_target_path: blog_index\nlogout:\n# The route name the user can go to in order to logout\npath: security_logout\n# The name of the route to redirect to after logging out\ntarget: homepage\naccess_control:\n# this is a catch-all for the admin area\n# additional security lives in the controllers\n- { path: '^/(%app_locales%)/admin', roles: ROLE_ADMIN }\nrole_hierarchy:\nROLE_ADMIN: ROLE_USER\n</code></pre>"},{"location":"UD11/11.01/#recursos","title":"Recursos","text":"<ul> <li>https://es.wikipedia.org/wiki/Framework</li> <li>https://es.wikipedia.org/wiki/Symfony</li> </ul>"},{"location":"UD11/11.02/","title":"Motor de plantilles","text":"<p>{: .no_toc }</p>"},{"location":"UD11/11.02/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD11/11.02/#introduccio","title":"Introducci\u00f3","text":"<p>Hi ha diversos motors de plantilles dins del m\u00f3n PHP Fabien Potencier, l\u00edder del projecte Symfony, va estar testejant les diferents opcions existents.</p> <p>El resultat el va publicar al seu bloc sota el t\u00edtol Templating Engines in PHP.</p> <p>Com a conclusi\u00f3 a aquestes proves es va adoptar el framework Twig com a motor de plantilles per Symfony.</p> <p>Documentaci\u00f3 oficial de Twig</p>"},{"location":"UD11/11.03/","title":"Injecci\u00f3 de depend\u00e8ncies: Contenidor de serveis","text":"<p>{: .no_toc }</p>"},{"location":"UD11/11.03/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD11/11.03/#introduccio","title":"Introducci\u00f3","text":"<ul> <li>Injecci\u00f3 de depend\u00e8ncies</li> <li>Contenidor de serveis</li> </ul>"},{"location":"UD11/11.04/","title":"Model","text":"<p>{: .no_toc }</p>"},{"location":"UD11/11.04/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD11/11.04/#introduccio","title":"Introducci\u00f3","text":"<p>Symfony no disposa de cap m\u00f2dul que s'encarregue de la capa de persist\u00e8ncia. Per aquest motiu, alguns desenvolupadors diuen que no \u00e9s un framework MVC pur.</p> <p>Per a aquesta tasca Symfony s'integra amb eines de tercers, com el ORM Doctrine.</p>"},{"location":"UD11/11.04/#doctrine","title":"Doctrine","text":"<p>Doctrine \u00e9s un Object Relational Mapping. La finalitat d'un ORM \u00e9s la de proporcionar una capa orientada a objectes sobre d'una base de dades relacional, de manera que les files o registres de les taules siguen tractats com a objectes.</p> <p>Les associacions que hi ha entre aquests objectes es correspon amb les relacions entre les taules de la base de dades.</p> <p></p>"},{"location":"UD11/11.04/#caracteristiques-dels-orm","title":"Caracter\u00edstiques dels ORM","text":"<p>Entre les caracter\u00edstiques destaquem:  * Fan independent l'aplicaci\u00f3 de l'SGBD utilitzat.  * \u00c9s el propi ORM qui construeix la consulta (SQL) adequada a l'SGBD que en cada moment.  * Els elements comuns a qualsevol ORM s\u00f3n les entitats.  * Les metadades defineixen les relacions entre les entitats i la base de dades.  * \u00c9s un producte molt potent, i per aix\u00f2, bastant complex</p> <p>La documentaci\u00f3 oficial \u00e9s molt completa: Documentaci\u00f3 de Doctrine</p> <p>No ho estudiarem en profunditat.</p> <p>Veurem la major part dels conceptes b\u00e0sics imprescindibles per fer \u00fas de Doctrine2 en una aplicaci\u00f3 constru\u00efda en Symfony.</p>"},{"location":"UD11/11.04/#exemples","title":"Exemples","text":"<p>Aquestos exemples estan extrets de l'aplicaci\u00f3 demo de Symfony</p> <pre><code>/*\n * This file is part of the Symfony package.\n *\n * (c) Fabien Potencier &lt;fabien@symfony.com&gt;\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nnamespace App\\Entity;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\n/**\n * @ORM\\Entity(repositoryClass=\"App\\Repository\\PostRepository\")\n * @ORM\\Table(name=\"symfony_demo_post\")\n * @UniqueEntity(fields={\"slug\"}, errorPath=\"title\", message=\"This title was already used in another blog post, but they must be unique.\")\n *\n * Defines the properties of the Post entity to represent the blog posts.\n *\n * See https://symfony.com/doc/current/doctrine.html#creating-an-entity-class\n *\n * Tip: if you have an existing database, you can generate these entity class automatically.\n * See https://symfony.com/doc/current/doctrine/reverse_engineering.html\n *\n * @author Ryan Weaver &lt;weaverryan@gmail.com&gt;\n * @author Javier Eguiluz &lt;javier.eguiluz@gmail.com&gt;\n * @author Yonel Ceruto &lt;yonelceruto@gmail.com&gt;\n */\nclass Post\n{\n/**\n     * Use constants to define configuration options that rarely change instead\n     * of specifying them under parameters section in config/services.yaml file.\n     *\n     * See https://symfony.com/doc/current/best_practices.html#use-constants-to-define-options-that-rarely-change\n     */\npublic const NUM_ITEMS = 10;\n/**\n     * @var int\n     *\n     * @ORM\\Id\n     * @ORM\\GeneratedValue\n     * @ORM\\Column(type=\"integer\")\n     */\nprivate $id;\n/**\n     * @var string\n     *\n     * @ORM\\Column(type=\"string\")\n     * @Assert\\NotBlank\n     */\nprivate $title;\n/**\n     * @var string\n     *\n     * @ORM\\Column(type=\"string\")\n     */\nprivate $slug;\n/**\n     * @var string\n     *\n     * @ORM\\Column(type=\"string\")\n     * @Assert\\NotBlank(message=\"post.blank_summary\")\n     * @Assert\\Length(max=255)\n     */\nprivate $summary;\n/**\n     * @var string\n     *\n     * @ORM\\Column(type=\"text\")\n     * @Assert\\NotBlank(message=\"post.blank_content\")\n     * @Assert\\Length(min=10, minMessage=\"post.too_short_content\")\n     */\nprivate $content;\n/**\n     * @var \\DateTime\n     *\n     * @ORM\\Column(type=\"datetime\")\n     */\nprivate $publishedAt;\n/**\n     * @var User\n     *\n     * @ORM\\ManyToOne(targetEntity=\"App\\Entity\\User\")\n     * @ORM\\JoinColumn(nullable=false)\n     */\nprivate $author;\n/**\n     * @var Comment[]|ArrayCollection\n     *\n     * @ORM\\OneToMany(\n     *      targetEntity=\"Comment\",\n     *      mappedBy=\"post\",\n     *      orphanRemoval=true,\n     *      cascade={\"persist\"}\n     * )\n     * @ORM\\OrderBy({\"publishedAt\": \"DESC\"})\n     */\nprivate $comments;\n/**\n     * @var Tag[]|ArrayCollection\n     *\n     * @ORM\\ManyToMany(targetEntity=\"App\\Entity\\Tag\", cascade={\"persist\"})\n     * @ORM\\JoinTable(name=\"symfony_demo_post_tag\")\n     * @ORM\\OrderBy({\"name\": \"ASC\"})\n     * @Assert\\Count(max=\"4\", maxMessage=\"post.too_many_tags\")\n     */\nprivate $tags;\npublic function __construct()\n{\n$this-&gt;publishedAt = new \\DateTime();\n$this-&gt;comments = new ArrayCollection();\n$this-&gt;tags = new ArrayCollection();\n}\n</code></pre> <p>Podeu consultar la resta d'entitats ac\u00ed:  https://github.com/symfony/demo/tree/master/src/Entity</p>"},{"location":"UD11/11.05/","title":"Formularis","text":"<p>{: .no_toc }</p>"},{"location":"UD11/11.05/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD11/11.05/#introduccio","title":"Introducci\u00f3","text":"<p>Symfony t\u00e9 integrat un component per la gesti\u00f3 de formularis.</p> <p>Per poder fer servir aquest component el primer que cal fer \u00e9s instal\u00b7lar-lo:</p> <pre><code>composer require symfony/form\n</code></pre> <p>El primer que necessitem el crear un formulari \u00e9s l'entitat que anem a editar.</p> <pre><code>// src/Entity/Task.php\nnamespace App\\Entity;\nclass Task\n{\nprotected $task;\nprotected $dueDate;\npublic function getTask()\n{\nreturn $this-&gt;task;\n}\npublic function setTask($task)\n{\n$this-&gt;task = $task;\n}\npublic function getDueDate()\n{\nreturn $this-&gt;dueDate;\n}\npublic function setDueDate(\\DateTime $dueDate = null)\n{\n$this-&gt;dueDate = $dueDate;\n}\n}\n</code></pre> <p>El seg\u00fcent pas ser\u00e0 construir i mostrar el formulari en HTML. Aix\u00f2 ho farem mitjan\u00e7ant un objecte form i el mostrarem amb una plantilla Twig.</p> <p>Al controlador crearem el formulari amb el m\u00e8tode createFormBuilder a qu\u00e8 li passarem l'entitat a editar. A continuaci\u00f3 afegirem els camps que necessitem en el formulari, indicant de quin tipus \u00e9s cada un i cridarem el m\u00e8tode getForm que ens tornar\u00e0 l'objecte formulari.</p> <p>Finalment, mostrarem la vista passant-li la vista el formulari que obtindrem mitjan\u00e7ant el m\u00e8tode createView.</p> <pre><code>// src/Controller/TaskController.php\nnamespace App\\Controller;\nuse App\\Entity\\Task;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\DateType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nuse Symfony\\Component\\HttpFoundation\\Request;\nclass TaskController extends AbstractController\n{\npublic function new(Request $request)\n{\n// creates a task object and initializes some data for this example\n$task = new Task();\n$task-&gt;setTask('Write a blog post');\n$task-&gt;setDueDate(new \\DateTime('tomorrow'));\n$form = $this-&gt;createFormBuilder($task)\n-&gt;add('task', TextType::class)\n-&gt;add('dueDate', DateType::class)\n-&gt;add('save', SubmitType::class, ['label' =&gt; 'Create Task'])\n-&gt;getForm();\nreturn $this-&gt;render('task/new.html.twig', [\n'form' =&gt; $form-&gt;createView(),\n]);\n}\n}\n</code></pre> <p>La plantilla de Twig ser\u00e0 aix\u00ed</p> <p>{% raw %} <pre><code>{# templates/task/new.html.twig #}\n{{ form(form) }}\n</code></pre></p>"},{"location":"UD11/11.05/#mes-informacio","title":"M\u00e9s informaci\u00f3","text":"<ul> <li>Formularis sense classe entitat relacionada</li> <li>Personalitzaci\u00f3 de formularis</li> </ul>"},{"location":"UD11/11.06%20projecte/","title":"Refactoritzant el projecte a Symfony","text":"<p>{: .no_toc }</p> <p>L'objectiu del projecte del bloc II \u00e9s adaptar el projecte realitzat al framework de Symfony.</p>"},{"location":"UD11/11.06%20projecte/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD11/11.06%20projecte/#pas-1-configurar-lentorn-de-symfony","title":"Pas 1. Configurar l'entorn de Symfony","text":"<p>Cal seguir la primera part del tutorial per a acabar creant un nou projecte complet de Symfony.</p> <p>No t'oblides de configurar el repositori de Git.</p>"},{"location":"UD11/11.06%20projecte/#pas-2-creacio-de-les-entitats","title":"Pas 2. Creaci\u00f3 de les entitats","text":"<p>Com que ja tenim la base de dades creada caldr\u00e0 crear les entitats a partir de les taules de base de dades.</p> <p>{: .alert .alert-warning}</p> <p>Emprarem l'ordre seg\u00fcent:</p> <pre><code>php bin/console doctrine:mapping:import \"App\\Entity\" annotation --path=src/Entity\n</code></pre> <p>I amb la seg\u00fcent generarem els getters i els setters. Tamb\u00e9 \u00e9s possible generar-o</p> <pre><code> php bin/console make:entity --regenerate App\n</code></pre> <p>M\u00e9s informaci\u00f3 en How to Generate Entities from an Existing Database</p>"},{"location":"UD11/11.06%20projecte/#compte-copia-de-seguretat","title":"Compte: c\u00f2pia de seguretat","text":"<p>{: .no_toc   .nocount }</p> <p>Es recomanable que feu una c\u00f2pia de seguretat de la base de dades abans de comen\u00e7ar a implementar els canvis per si de cas.</p>"},{"location":"UD11/11.06%20projecte/#pas-3-creacio-del-defaultcontroller","title":"Pas 3. Creaci\u00f3 del DefaultController","text":"<p>Aquest controlador gestionar la p\u00e0gina principal i p\u00e0gines est\u00e0tiques si fora necessari.</p>"},{"location":"UD11/11.06%20projecte/#pas-4-creacio-dels-crud-de-les-entitats-principals","title":"Pas 4. Creaci\u00f3 dels CRUD de les entitats principals","text":"<p>Crea, mitjan\u00e7ant l'eina <code>make:crud</code> les entitats principals de l'aplicaci\u00f3.</p> <p>{:.alert .alert-warning}</p>"},{"location":"UD11/11.06%20projecte/#catchable-fatal-error-object-of-class-appentityroles-could-not-be-converted-to-string","title":"Catchable Fatal Error: Object of class App\\Entity\\Roles could not be converted to string","text":"<p>{: .no_toc   .nocount }</p> <p>Aquest error \u00e9s prou habitual quan treballem amb els formularis per defecte, ocorre en les relacions quan el formulari mostra una llista desplegable. Ocorre perqu\u00e8 no li s'ha indicat quin camp s'ha de mostrar en el text de la llista desplegable.</p> <p>La soluci\u00f3 m\u00e9s r\u00e0pida \u00e9s afegir a la classe el m\u00e8tode m\u00e0gin <code>__toString()</code> fent que torne un camp de text de l'entitat.</p>"},{"location":"UD11/11.06%20projecte/#pas-5-implementacio-de-la-seguretat","title":"Pas 5. Implementaci\u00f3 de la seguretat","text":""},{"location":"UD11/11.06%20projecte/#pas-6-paginacio-i-filtratge","title":"Pas 6. Paginaci\u00f3 i filtratge","text":"<p>Implementa un filtre de paginaci\u00f3 i filtratge mitjan\u00e7ant un formulari que filtrar\u00e0 per text, entre dues dates.</p>"},{"location":"UD11/11.06%20projecte/#pas-7-implementacio-carregador-dimatges","title":"Pas 7. Implementaci\u00f3 carregador d'imatges","text":""},{"location":"UD11/11.06%20projecte/#pas-8-implementacio-dun-formulari-de-contacte","title":"Pas 8. Implementaci\u00f3 d'un formulari de contacte.","text":"<p>Implementa un formuari de contacte amb els camps nom, correu electr\u00f2nic, assumpte i text que envie la informaci\u00f3 per correu electr\u00f2nic a l'adre\u00e7a del administrador de la web.</p>"},{"location":"UD11/11.06%20projecte/#pas-9-implementacio-del-dashboard","title":"Pas 9. Implementaci\u00f3 del dashboard","text":"<p>El dashboard o tauler de control es trobar\u00e0 en <code>/admin</code>. Hi podran accedir tots els usuaris que hagen iniciat sessi\u00f3 per\u00f2 els usuaris amb <code>ROLE_ADMIN</code> podran fer totes les accions CRUD i els <code>ROLE_USER</code> sols podran fer-ho amb elements que hagen creat.</p>"},{"location":"UD11/11.07.%20Extras/","title":"Extres","text":"<p>{: .no_toc }</p>"},{"location":"UD11/11.07.%20Extras/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD11/11.07.%20Extras/#internacionalitzacio","title":"Internacionalitzaci\u00f3","text":""},{"location":"UD11/11.07.%20Extras/#installation","title":"Installation","text":"<p>First, run this command to install the translator before using it:</p> <pre><code>composer require symfony/translation\n</code></pre>"},{"location":"UD11/11.07.%20Extras/#configuration","title":"Configuration","text":"<p>The previous command creates an initial config file where you can define the default locale of the application and the directory where the translation files are located:</p> <pre><code># config/packages/translation.yaml\nframework:\ndefault_locale: 'en'\ntranslator:\ndefault_path: '%kernel.project_dir%/translations'\n</code></pre> <p>The locale used in translations is the one stored on the request. This is typically set via a <code>_locale</code> attribute on your routes (see The Locale and the URL).</p>"},{"location":"UD11/11.07.%20Extras/#basic-translation","title":"Basic Translation","text":"<p>Translation of text is done through the translator service (Translator). To translate a block of text (called a message), use the <code>trans()</code> method. Suppose, for example, that you're translating a simple message from inside a controller:</p> <pre><code>// ...\nuse Symfony\\Contracts\\Translation\\TranslatorInterface;\npublic function index(TranslatorInterface $translator)\n{\n$translated = $translator-&gt;trans('Symfony is great');\n// ...\n}\n</code></pre> <p>When this code is executed, Symfony will attempt to translate the message \"Symfony is great\" based on the locale of the user. For this to work, you need to tell Symfony how to translate the message via a \"translation resource\", which is usually a file that contains a collection of translations for a given locale. This \"dictionary\" of translations can be created in several different formats:</p> <pre><code># translations/messages.fr.yaml\nSymfony is great: J'aime Symfony\n</code></pre> <p>For information on where these files should be located, see Translation Resource/File Names and Locations.</p> <p>Now, if the language of the user's locale is French (e.g. fr_FR or fr_BE), the message will be translated into J'aime Symfony. You can also translate the message inside your templates.</p>"},{"location":"UD11/11.07.%20Extras/#the-translation-process","title":"The Translation Process","text":"<p>To actually translate the message, Symfony uses the following process when using the trans() method:</p> <ol> <li>The locale of the current user, which is stored on the request is determined.</li> <li>If the message is located in the catalog, the translation is returned. If not, the translator returns the original message.</li> </ol>"},{"location":"UD11/11.07.%20Extras/#message-format","title":"Message Format","text":"<p>Sometimes, a message containing a variable needs to be translated:</p> <pre><code>// ...\n$translated = $translator-&gt;trans('Hello '.$name);\n</code></pre> <p>However, creating a translation for this string is impossible since the translator will try to look up the message including the variable portions (e.g. \"Hello Ryan\" or \"Hello Fabien\").</p> <p>Another complication is when you have translations that may or may not be plural, based on some variable:</p> <pre><code>There is one apple.\nThere are 5 apples.\n</code></pre> <p>To manage these situations, Symfony follows the ICU MessageFormat syntax by using PHP's MessageFormatter class. Read more about this in How to Translate Messages using the ICU MessageFormat.</p> <p>Translation in templates</p>"},{"location":"UD11/11.07.%20Extras/#extracting-translation-contents-and-updating-catalogs-automatically","title":"Extracting Translation Contents and Updating Catalogs Automatically","text":"<p>The most time-consuming tasks when translating an application is to extract all the template contents to be translated and to keep all the translation files in sync. Symfony includes a command called translation:update that helps you with these tasks:</p> <pre><code>php bin/console translation:update --dump-messages --output-format=yaml fr\n\nphp bin/console translation:update --force --output-format=yaml fr\n\nphp bin/console translation:update --help\n</code></pre>"},{"location":"UD11/11.07.%20Extras/#translation-resourcefile-names-and-locations","title":"Translation Resource/File Names and Locations","text":"<p>Symfony looks for message files (i.e. translations) in the following default locations:</p> <ul> <li>the translations/ directory (at the root of the project);</li> <li>the Resources/translations/ directory inside of any bundle.</li> </ul> <p>The locations are listed here with the highest priority first. That is, you can override the translation messages of a bundle in the first directory.</p> <p>The override mechanism works at a key level: only the overridden keys need to be listed in a higher priority message file. When a key is not found in a message file, the translator will automatically fall back to the lower priority message files.</p> <p>The filename of the translation files is also important: each message file must be named according to the following path: <code>domain.locale.loader</code>:</p> <ul> <li>domain: An optional way to organize messages into groups.</li> <li>locale: The locale that the translations are for (e.g. en_GB, en, etc);</li> <li>loader: How Symfony should load and parse the file (e.g. xlf, php, yaml, etc).</li> </ul> <p>The loader can be the name of any registered loader. By default, Symfony provides many loaders.</p> <p>The choice of which loader to use is entirely up to you and is a matter of taste. The recommended option is to use YAML for simple projects and use XLIFF if you're generating translations with specialized programs or teams.</p>"},{"location":"UD12.%20Tutorial/00-index/","title":"00 index","text":"<p>layout: default title: 12. Tutorial de Symfony nav_order: 12 has_children: true  nav_exclude: true</p>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/","title":"Iniciant el projecte","text":"<p>{: .no_toc }</p>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#creacio-del-projecte-symfony","title":"Creaci\u00f3 del projecte Symfony","text":"<ol> <li>Crea un nou projecte complet en la carpeta link_manager seguint les instruccions de Installing &amp; Setting up the Symfony Framework.</li> <li>Instal\u00b7la el binari <code>symfony</code> de forma global.</li> <li>Executa el servidor integrat de symfony.</li> <li>Comprova que s'ha instal\u00b7lat correctament.</li> </ol>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#configuracio-del-repositori","title":"Configuraci\u00f3 del repositori","text":"<ol> <li>Crea en github un repositori anomenat link_manager on guardar\u00e0s el projecte. </li> <li>Comparteix-lo amb el professor.</li> </ol> <p>Des de la carpeta del projecte executa:</p> <p><pre><code>git init\ngit add .\ngit commit -m \"Fist commit\"\ngit remote add origin URL_REPOSITORY\ngit push origin master\n</code></pre> A partir d'ara en acabar el treballar haur\u00e0s d'actualitzar el repository.</p>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#configuracio-de-la-base-de-dades","title":"Configuraci\u00f3 de la base de dades","text":"<p>Seguint Databases and the Doctrine ORM configurarem la base de dades.</p> <p>Per a establir la connexi\u00f3 amb la base de dades crear un fitxer <code>.env.local</code>. Aquest fitxer contindr\u00e0 la configuraci\u00f3 espec\u00edfica de l'entorn de treball local i s'inclou per defecte en el <code>.gitignore</code>.</p> <p>Per a crear-lo executarem <code>touch .env.local</code> i l'editarem afegint:</p> <p><pre><code>APP_ENV=dev\n# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml\nDATABASE_URL=mysql://db_user:db_password@127.0.0.1:3306/db_name?serverVersion=5.7\n</code></pre> Indicant que estem en un entorn de desenvolupament i la URL de la nostra base de dades.</p> <p>En acabar, crea la base de dades:</p> <pre><code>php bin/console doctrine:database:create\n</code></pre> <p>{:.alert .alert-warning} Si apareix l'error <code>An exception occurred in driver: could not find driver</code> \u00e9s perque cal instal\u00b7lar el paquet <code>php-mysql</code>.</p>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#creacio-des-les-entitats","title":"Creaci\u00f3 des les entitats","text":"<p>Seguint les instruccions de l'enlla\u00e7 anterior crea les seguents entitats amb el comandament:</p> <pre><code>$php bin/console make:entity\n</code></pre> <p></p> <p>Despr\u00e9s de crear les entitats executarem:</p> <pre><code>php bin/console make:migration\n</code></pre> <p>Que ens generar\u00e0 un arxiu php amb els canvis generats per a la base de dades.</p> <p>Amb <code>php bin/console doctrine:migrations:migrate</code> aplicarem els canvis.</p>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#emplenament-de-dades-lentitat-link","title":"Emplenament de dades l'entitat Link","text":"<p>Per a emplenar de dades les entitats Symfony utilitza el component <code>doctrine/data-fixtures</code>.</p> <p>L'instal\u00b7larem amb el seguent comandament:</p> <pre><code>composer require orm-fixtures --dev\n</code></pre> <p>Dos consideracions:</p> <ul> <li>Com que disposem de Symfony Flex emprem la recepta <code>orm-fixtures</code> en lloc de <code>doctrine/data-fixtures</code>.</li> <li>El par\u00e0metre <code>--dev</code> indica que el component sols estar\u00e0 disponible en l'entorn de desenvolupament.</li> </ul> <p>Despr\u00e9s executarem:</p> <pre><code>php bin/console make:fixtures\n</code></pre> <p>I indicarem el nom d'exemple. <pre><code>The class name of the fixtures to create (e.g. AppFixtures):\n &gt;&gt; AppFixtures\n</code></pre></p> <p>Pots substituir el fitxer <code>AppFixtures.php</code> per aquest que ja inclou 3 enlla\u00e7os: AppFixtures.</p> <p>Despr\u00e9s executarem:</p> <pre><code>php bin/console doctrine:fixtures:load\n</code></pre> <pre><code>Careful, database \"link_manager\" will be purged. Do you want to continue? (yes/no) [no]:\n &gt; yes\n\n&gt; purging database\n &gt; loading App\\DataFixtures\\AppFixtures\n</code></pre>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#creacio-dels-controladors","title":"Creaci\u00f3 dels controladors","text":"<p>Per a acabar crearem el nostre primer controlador i ho farem seguint les instruccions del seg\u00fcent enlla\u00e7: Generating controllers.</p> <pre><code>$php bin/console make:controller DefaultController\n\ncreated: src/Controller/LinkController.php\n created: templates/default/index.html.twig\n\nSuccess! Next: Open your new controller class and add some pages!\n</code></pre> <p>Editarem la ruta del controlador perqu\u00e8 siga la p\u00e0gina d'inici de la nostra aplicaci\u00f3 web.</p> <p>Haur\u00edem de veure alguna cosa semblant:</p> <p></p>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#obtencio-de-registres","title":"Obtenci\u00f3 de registres","text":"<p>Ara modificarem el m\u00e9tode <code>index()</code> de la seg\u00fcent forma:</p> <pre><code>/**\n * @Route(\"/\", name=\"homepage\")\n */\npublic function index()\n{\n// get the Link repository (it is like our model)\n$repository = $this-&gt;getDoctrine()-&gt;getRepository(Link::class);\n// retrieve all links\n$links = $repository-&gt;findAll();\n// now pass the array of link object to the view \nreturn $this-&gt;render('default/index.html.twig', [\n'links' =&gt; $links,\n]);\n}\n</code></pre> <p>{:.alert .alert-info} Ens quedar\u00e0 modificar la plantilla de Twig, per\u00f2 en aix\u00f2 ja teniu molta experi\u00e8ncia!</p> <p>M\u00e9s informaci\u00f3: Querying for objects</p>"},{"location":"UD12.%20Tutorial/01-iniciant-projecte/#recursos","title":"Recursos","text":"<p>M\u00e9s informaci\u00f3: https://rogerdudler.github.io/git-guide/ </p>"},{"location":"UD12.%20Tutorial/02-creant-els-crud/","title":"CRUD i assets","text":"<p>{: .no_toc }</p>"},{"location":"UD12.%20Tutorial/02-creant-els-crud/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD12.%20Tutorial/02-creant-els-crud/#crud","title":"CRUD","text":"<p>En The Symfony MakerBundle trobarem com el comandament que permet crear els m\u00e8todes CRUD (create, read, update, delete).</p> <p>Per a crear els m\u00e8todes de les nostres entitats executarem:</p> <pre><code> php bin/console make:crud\n\nThe class name of the entity to create CRUD (e.g. TinyElephant):\n &gt; Link\n\ncreated: src/Controller/LinkController.php\n created: src/Form/LinkType.php\n created: templates/link/_delete_form.html.twig\n created: templates/link/_form.html.twig\n created: templates/link/edit.html.twig\n created: templates/link/index.html.twig\n created: templates/link/new.html.twig\n created: templates/link/show.html.twig\n\nSuccess! Next: Check your new CRUD by going to /link/\n</code></pre> <p>Com es pot observar ens crear\u00e0 el controlador, el formulari i les plantilles.</p> <p>{:.alert .alert-info} Les plantilles que comencen amb <code>_</code> s\u00f3n blocs de codi que s'insertaran dintre d'altres plantilles.</p> <p>El fitxer src/Controller/LinkController quedar\u00e0 aix\u00ed:</p> <pre><code>&lt;?php\nnamespace App\\Controller;\nuse ...\n/**\n * @Route(\"/link\")\n */\nclass LinkController extends AbstractController\n{\n/**\n     * @Route(\"/\", name=\"link_index\", methods={\"GET\"})\n     */\npublic function index(): Response\n{\n$links = $this-&gt;getDoctrine()\n-&gt;getRepository(Link::class)\n-&gt;findAll();\nreturn $this-&gt;render('link/index.html.twig', [\n'links' =&gt; $links,\n]);\n}\n/**\n     * @Route(\"/new\", name=\"link_new\", methods={\"GET\",\"POST\"})\n     */\npublic function new(Request $request): Response\n{\n$link = new Link();\n$form = $this-&gt;createForm(LinkType::class, $link);\n$form-&gt;handleRequest($request);\nif ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) {\n$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$entityManager-&gt;persist($link);\n$entityManager-&gt;flush();\nreturn $this-&gt;redirectToRoute('link_indhttps://github.com/corriol/dwes/blob/master/UD11/resources/_header.html.twigex');\n}\nreturn $this-&gt;render('link/new.html.twig', [\n'link' =&gt; $link,\n'form' =&gt; $form-&gt;createView(),\n]);\n}\n/**\n     * @Route(\"/{id}\", name=\"link_show\", methods={\"GET\"})\n     */\npublic function show(Link $link): Response\n{\nreturn $this-&gt;render('link/show.html.twig', [\n'link' =&gt; $link,\n]);\n}\n/**\n     * @Route(\"/{id}/edit\", name=\"link_edit\", methods={\"GET\",\"POST\"})\n     */\npublic function edit(Request $request, Link $link): Response\n{\n$form = $this-&gt;createForm(LinkType::class, $link);\n$form-&gt;handleRequest($request);\nif ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) {\n$this-&gt;getDoctrine()-&gt;getManager()-&gt;flush();\nreturn $this-&gt;redirectToRoute('link_index');\n}\nreturn $this-&gt;render('link/edit.html.twig', [\n'link' =&gt; $link,\n'form' =&gt; $form-&gt;createView(),\n]);\n}\n/**\n     * @Route(\"/{id}\", name=\"link_delete\", methods={\"DELETE\"})\n     */\npublic function delete(Request $request, Link $link): Response\n{\nif ($this-&gt;isCsrfTokenValid('delete'.$link-&gt;getId(), $request-&gt;request-&gt;get('_token'))) {\n$entityManager = $this-&gt;getDoctrine()-&gt;getManager();\n$entityManager-&gt;remove($link);\n$entityManager-&gt;flush();\n}\nreturn $this-&gt;redirectToRoute('link_index');\n}\n}\n</code></pre> <p>{:.alert .alert-activity} Crea el controlador CRUD de l'entitat User.</p>"},{"location":"UD12.%20Tutorial/02-creant-els-crud/#estils-i-javascript","title":"Estils i javascript","text":"<p>La forma m\u00e9s senzilla d'incloure fitxers css i js al nostre projecte \u00e9s modificant la plantilla <code>base.html.twig</code> perqu\u00e8 els incloga directament des de la web.</p>"},{"location":"UD12.%20Tutorial/02-creant-els-crud/#_stylehtmltwig","title":"_style.html.twig","text":"<pre><code>&lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"&gt;\n&lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"&gt;\n&lt;script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9 inclourem el men\u00fa superior. </p> <p>{: .alert .alert-activity } Inclou els fitxers <code>_style.html.twig</code> i <code>_header.html.twig</code> al projecte. Comprova que tot funciona b\u00e9.</p> <p>{: .alert .alert-warning } Hem optat per una forma senzilla d'incloure CSS i javascript al nostre projecte, per\u00f2 dista molt de ser la m\u00e9s recomanable. M\u00e9s endavant en endinsarem en la gesti\u00f3 de paquets per al frontend de la m\u00e0 de Webpack Encore.</p>"},{"location":"UD12.%20Tutorial/02-creant-els-crud/#activant-bootstrap-4-als-formularis","title":"Activant bootstrap 4 als formularis","text":"<p>Per a millorar l'aspecte dels formularis Symfony incorpora suport per a Bootstrap.</p> <p>Modifica el fitxer <code>twig.yaml</code> perqu\u00e8 quede de la seg\u00fcent manera:</p> <pre><code># config/packages/twig.yaml\ntwig:\nform_themes: ['bootstrap_4_layout.html.twig']\n</code></pre>"},{"location":"UD12.%20Tutorial/03-implementant-les-relacions/","title":"Implementaci\u00f3 de les relacions","text":"<p>{: .no_toc }</p>"},{"location":"UD12.%20Tutorial/03-implementant-les-relacions/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD12.%20Tutorial/03-implementant-les-relacions/#introduccio","title":"Introducci\u00f3","text":"<p>Anem a relacionar cada enlla\u00e7 amb l'autor (usuari). Es tracta d'una relaci\u00f3 molts a un, ja que cada Link tindr\u00e0 un autor per\u00f2 cada autor pot tindre m\u00e9s d'un enlla\u00e7.</p> <p>Executarem</p> <pre><code> $php bin/console make:entity Link\n\n Your entity already exists! So let's add some new fields!\n New property name (press &lt;return&gt; to stop adding fields):\n &gt; author\n Field type (enter ? to see all types) [string]:\n &gt; ManyToOne\n What class should this entity be related to?:\n &gt; User\n Is the Link.author property allowed to be null (nullable)? (yes/no) [yes]:\n &gt; yes\n Do you want to add a new property to User so that you can access/update Link objects from it - e.g. $user-&gt;getLinks()? (yes/no) [yes]:\n &gt; yes\n A new property will also be added to the User class so that you can access the related Link objects from it.\n New field name inside User [links]:\n &gt; links\n updated: src/Entity/Link.php\n updated: src/Entity/User.php\n Add another property? Enter the property name (or press &lt;return&gt; to stop adding fields):\n &gt;\n  Success! \n Next: When you're ready, create a migration with make:migration\n</code></pre>"},{"location":"UD12.%20Tutorial/03-implementant-les-relacions/#revisio-dels-canvis","title":"Revisi\u00f3 dels canvis","text":"<pre><code>    // src/Entity/Link.php\n...\n/**\n     * @ORM\\ManyToOne(targetEntity=\"App\\Entity\\User\", inversedBy=\"links\")\n     */\nprivate $author;\n</code></pre> <pre><code>    // src/Entity/User.php\n/**\n     * @ORM\\OneToMany(targetEntity=\"App\\Entity\\Link\", mappedBy=\"author\")\n     */\nprivate $links;\npublic function __construct() {\n...\n$this-&gt;links = new ArrayCollection();\n}\n</code></pre>"},{"location":"UD12.%20Tutorial/03-implementant-les-relacions/#aplicar-els-canvis-a-la-base-de-dades","title":"Aplicar els canvis a la base de dades","text":"<p>Despr\u00e9s aplicarem els canvis a la base de dades mitjan\u00e7ant <code>make:migration</code> primer i <code>doctrine:migrations:migrate</code> despr\u00e9s.</p> <pre><code>php bin/console make:migration\n  Success!\n Next: Review the new migration \"src/Migrations/Version20200126202501.php\"\n Then: Run the migration with php bin/console doctrine:migrations:migrate\n See https://symfony.com/doc/current/bundles/DoctrineMigrationsBundle/index.html\nphp bin/console doctrine:migrations:migrate\n                    Application Migrations                    \nWARNING! You are about to execute a database migration that could result in schema changes and data loss. Are you sure you wish to continue? (y/n)y\nMigrating up to 20200126203008 from 0\n  ++ migrating 20200126203008\n     -&gt; ALTER TABLE user CHANGE roles roles JSON NOT NULL\n     -&gt; ALTER TABLE link ADD author_id INT DEFAULT NULL\n     -&gt; ALTER TABLE link ADD CONSTRAINT FK_36AC99F1F675F31B FOREIGN KEY (author_id) REFERENCES user (id)\n     -&gt; CREATE INDEX IDX_36AC99F1F675F31B ON link (author_id)\n  ++ migrated (took 149.4ms, used 16M memory)\n  ------------------------\n  ++ finished in 151.5ms\n  ++ used 16M memory\n  ++ 1 migrations executed\n  ++ 4 sql queries\n</code></pre>"},{"location":"UD12.%20Tutorial/03-implementant-les-relacions/#comprovacio-dels-canvis","title":"Comprovaci\u00f3 dels canvis","text":"<p>Els canvis s\u00f3n els seg\u00fcents</p> <p><pre><code>ALTER TABLE link ADD author_id INT DEFAULT NULL\nALTER TABLE link ADD CONSTRAINT FK_36AC99F1F675F31B FOREIGN KEY (author_id) REFERENCES user (id)\nCREATE INDEX IDX_36AC99F1F675F31B ON link (author_id)\n</code></pre> </p> <p>{:.alert .alert-info } M\u00e9s informaci\u00f3 en How to Work with Doctrine Associations / Relations</p>"},{"location":"UD12.%20Tutorial/03-implementant-les-relacions/#modificant-el-formulari","title":"Modificant el formulari","text":"<p>Ara caldr\u00e0 modificar el formulari de Link per poder assignar l'usuari que ha enviat l'enlla\u00e7. Afegirem un camp de tipus EntityField indicant en l'array d'opcions la classe <code>User::class</code> i que l'etiqueta que es mostrar\u00e0 ser\u00e0 <code>fullname</code>.</p> <p><pre><code>// src/Forms/LinkType.php\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n$builder\n-&gt;add('url')\n-&gt;add('title')\n-&gt;add('description')\n-&gt;add('createdAt')\n-&gt;add('updatedAt')\n-&gt;add('author', EntityType::class, ['class'=&gt;User::class,\n'choice_label'=&gt;'fullname']);\n}\n</code></pre> La configuraci\u00f3 del formularis \u00e9s molt flexible, en el cas del camp <code>roles</code> del formulari d'Usuari podem modificar-lo perqu\u00e8 mostre en un <code>checkbox</code> els diferents rols d'usuari :</p> <p><pre><code>// src/Forms/UserType.php\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n$builder\n-&gt;add('fullName')\n-&gt;add('username')\n-&gt;add('email')\n-&gt;add('password')\n-&gt;add('roles', ChoiceType::class,\n[ 'choices'  =&gt; [\n'Usuari normal' =&gt; 'ROLE_USER',\n'Admnistrador' =&gt; 'ROLE_ADMIN'\n],\n'multiple'=&gt;true,\n'expanded'=&gt;true\n]);\n/*    $builder-&gt;get('roles')\n        -&gt;addModelTransformer(new CallbackTransformer(\n            function ($rolesAsArray) {\n                // transform the array to a string\n                return implode(', ', $rolesAsArray);\n            },\n            function ($rolesAsString) {\n                // transform the string back to an array\n                return explode(', ', $rolesAsString);\n            }\n        ));\n    */\n}\n</code></pre> M\u00e9s informaci\u00f3 sobre els diferents tipus de camps dels formularis de Symfony en Form Types Reference</p>"},{"location":"UD12.%20Tutorial/04-seguretat/","title":"Seguretat","text":"<p>{: .no_toc }</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD12.%20Tutorial/04-seguretat/#introduccio","title":"Introducci\u00f3","text":"<p>El component de seguretat de Symfony proporciona un sistema de seguretat complet per a l'aplicaci\u00f3 web. Ofereix facilitats per autenticaci\u00f3 mitjan\u00e7ant autenticaci\u00f3 b\u00e0sica HTTP, inici de sessi\u00f3 de formulari o autenticaci\u00f3 de certificat X.509, per\u00f2 tamb\u00e9 vos permet implementar les vostres estrat\u00e8gies d'autenticaci\u00f3. A m\u00e9s, el component proporciona formes d\u2019autoritzar els usuaris autentificats en funci\u00f3 del seu rol.</p> <p>Ens endinsar-nos en el component Security implementant un sistema d'autenticaci\u00f3 i autoritzaci\u00f3 basada en un formulari d'inici de sessi\u00f3 i en l'assignaci\u00f3 de rols. Per a fer-ho seguirem la guia Security.</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#pas-1-installacio-del-component","title":"Pas 1. Instal\u00b7laci\u00f3 del component","text":"<p>En el nostre cas ja tenim instal\u00b7lat el component ja que vam emprar el par\u00e0metre <code>--full</code> per la qual cosa no caldra tornar-lo a instal\u00b7lar.</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#pas-2-creacio-de-la-classe-user","title":"Pas 2. Creaci\u00f3 de la classe User","text":"<p>El sistema d'autenticaci\u00f3 de Symfony requereix de disposar d'una entitat <code>User</code> que haur\u00e0 d'implementar la interf\u00edcie <code>UserInterface</code>.</p> <p>Si no la tenim creada podem usar el comandament <code>php bin/console make:user</code>. Com nosaltres ja l'hem creat haurem de fer les modificacions manualment.</p> <p>{: .alert .alert-info}</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#interficies","title":"Interf\u00edcies","text":"<p>Les interf\u00edcies ens permeten crear codi que especifique quins m\u00e8todes ha d'implementar una classe sense necessitat de definir com s'implementen aquests m\u00e8todes.</p> <p>Les interf\u00edcies es defineixen de la mateixa manera que una classe, per\u00f2 amb la paraula clau de interface que substitueix la paraula clau class i sense que cap m\u00e8tode haja definit el seu contingut.</p> <p>Tots els m\u00e8todes declarats en una interf\u00edcie han de ser p\u00fablics; aquesta \u00e9s la naturalesa d\u2019una interf\u00edcie.</p> <p>En altres llenguatges aquests tipus de classes s'anomenem protocols.</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#userinterface","title":"UserInterface","text":"<p>Els m\u00e8todes que haurem d'implementar en la nostra classe User seran:</p> <pre><code>interface UserInterface\n{\npublic function getRoles(): array;\npublic function getPassword():?string;\npublic function getSalt():?string;\npublic function getUsername(): string;\npublic function eraseCredentials(): void;\n}\n</code></pre> <p>Per a m\u00e9s detalls: UserInterface.php</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#el-proveidor-dusuaris","title":"El prove\u00efdor d'usuaris","text":"<p>El prove\u00efdor d'usuaris \u00e9s l'element del sistema on s'emmagatzemaran les dades dels usuaris.</p> <p>En el nostre cas ser\u00e0 en la base de dades mitjant\u00e7ant la classe <code>User</code> per la qual cosa haurem d'establir la seg\u00fcent configuraci\u00f3:</p> <pre><code># config/packages/security.yaml\n# ...\nproviders:\nusers:\nentity:\n# the class of the entity that represents users\nclass: 'App\\Entity\\User'\n# the property to query by - e.g. username, email, etc\nproperty: 'username'\n# optional: if you're using multiple Doctrine entity\n# managers, this option defines which one to use\n# manager_name: 'customer'\n# ...\n</code></pre> <p>La secci\u00f3 prove\u00efdors crea un \"prove\u00efdor d'usuaris\" anomenat <code>users</code>que sap fer una consulta des de la propietat del <code>username</code> de la vostra entitat <code>App\\Entity\\User</code>. Podeu triar qualsevol nom per al prove\u00efdor d'usuari, per\u00f2 es recomana triar un nom descriptiu perqu\u00e8 posteriorment s'utilitzar\u00e0 en la configuraci\u00f3 del tallafoc.</p> <p>Per a m\u00e9s informaci\u00f3 llegiu Security User Providers</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#pas-3-password-hashing","title":"Pas 3. Password hashing","text":"<p>No totes les aplicacions tenen \"usuaris\" que necessiten contrasenya. Si els usuaris tenen contrasenyes, podeu controlar com es codifiquen aquestes contrasenyes a <code>security.yaml</code>. L'orde <code>make:user</code> configurar\u00e0 pr\u00e8viament aquesta opci\u00f3:</p> <p>Ara que Symfony sap com voleu codificar les contrasenyes, podeu utilitzar el servei <code>UserPasswordEncoderInterface</code> per a fer-ho abans de desar els usuaris a la base de dades.</p> <pre><code># config/packages/security.yaml\nsecurity:\n# ...\nencoders:\n# use your user class name here\nApp\\Entity\\User:\n# Use native password encoder\n# This value auto-selects the best possible hashing algorithm\n# (i.e. Sodium when available).\nalgorithm: auto\n</code></pre>"},{"location":"UD12.%20Tutorial/04-seguretat/#pas-4-el-proveidor-dautenticacio","title":"Pas 4. El prove\u00efdor d'autenticaci\u00f3","text":""},{"location":"UD12.%20Tutorial/04-seguretat/#firewalls","title":"Firewalls","text":"<p>El sistema de seguretat es configura en  <code>config/packages/security.yaml</code>. La secci\u00f3 m\u00e9s important s\u00f3n els tallafocs (firewalls):</p> <p><pre><code># config/packages/security.yaml\nsecurity:\nfirewalls:\ndev:\npattern: ^/(_(profiler|wdt)|css|images|js)/\nsecurity: false\nmain:\nanonymous: lazy\n</code></pre> Un \"tallafoc\" \u00e9s un sistema d'autenticaci\u00f3: la configuraci\u00f3 que hi ha a continuaci\u00f3 defineix com els usuaris podran autenticar-se (per exemple, form_login, API token, etc.).</p> <p>A cada sol\u00b7licitud nom\u00e9s hi ha un tallafoc actiu: Symfony utilitza la clau <code>pattern</code> per trobar la primera coincid\u00e8ncia (tamb\u00e9 podeu coincidir per host o per altres coses). El tallafocs <code>dev</code> \u00e9s realment un fals tallafoc: nom\u00e9s s\u2019assegura que no bloquegeu accidentalment les eines de desenvolupament de Symfony, que viuen amb URL com <code>/_profiler</code> i <code>/_wdt</code>.</p> <p>Tots les URL reals s\u00f3n gestionades pel tallafoc <code>main</code> (cap clau <code>pattern</code> significa que coincidisca en totes les URL). Per\u00f2 aix\u00f2 no significa que cada URL requerisca autenticaci\u00f3. No, gr\u00e0cies a la clau <code>anonymous</code>, aquest tallafoc \u00e9s accessible de forma an\u00f2nima.</p> <p>De fet, si aneu a la p\u00e0gina principal ara mateix, tindreu acc\u00e9s i veureu que esteu \"autenticats\" com a anonims. No us deixeu enganyar pel \"S\u00ed\" que hi ha al costat d'Autentificat. El tallafoc ha comprovat que desconeix la vostra identitat i, per tant, eres an\u00f2nim.</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#proveidors-dautenticacio","title":"Prove\u00efdors d'autenticaci\u00f3","text":"<p>Una vegada enllestida la classe <code>User</code> caldr\u00e0 definir quin prove\u00efdor d'autenticaci\u00f3 utilitzarem, en el nostre cas usarem form_login que incorpora Symfony. M\u00e9s informaci\u00f3 sobre prove\u00efdors d'autenticaci\u00f3 </p> <p>{:.alert .alert-activity}</p> <p>No t'oblides d'indicar tamb\u00e9 al firewall <code>main</code> quin ser\u00e0 el prove\u00efdor d'usuaris mitjan\u00e7ant la clau <code>provider: users</code> ja que <code>users</code> \u00e9s el nom que li hem posat al nostre prove\u00efdor d'usuaris.</p> <p>{:.alert .alert-info}</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#implementacio-de-form_login","title":"Implementaci\u00f3 de form_login","text":"<p>Seguint les instruccions de Using the form_login Authentication Provider implementa el prove\u00efdor d'autenticaci\u00f3 form_login</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#guard-authenticators","title":"Guard Authenticators","text":"<p>Un autenticador Guard \u00e9s una classe que proporciona un control complet sobre el proc\u00e9s d\u2019autenticaci\u00f3. Aquest concepte s'excedeix de l'\u00e0mbit del curs.</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#pas-5-formulari-de-registre","title":"Pas 5. Formulari de registre","text":"<p>Symfony ens proporciona el comandament <code>make:registration-form</code> per poder disposar d'un formulari de registre.</p> <p>{:.alert .alert-activity }</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#formulari-de-registre","title":"Formulari de registre","text":"<p>Crea mitjan\u00e7ant <code>make:registration-form</code> el formulari de registre. Comprova que funciona. Si falten camps pots personalitzar la classe <code>App\\Form\\RegisterFormType.php</code></p> <p>Crea l'usuari <code>admin</code> amb contrasenya <code>admin</code>.</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#pas-6-negar-acces-rols-i-altres-formes-dautoritzacio","title":"Pas 6. Negar acc\u00e9s, rols i altres formes d'autoritzaci\u00f3","text":"<p>Els usuaris ja poden iniciar sessi\u00f3 a l'aplicaci\u00f3 mitjan\u00e7ant el formulari d'inici de sessi\u00f3. Genial! Ara, heu d\u2019aprendre a restringir acc\u00e9s i a treballar amb l\u2019objecte User. Aix\u00f2 s\u2019anomena autoritzaci\u00f3, i la seva tasca \u00e9s decidir si un usuari pot accedir a algun recurs (un URL, un objecte model, una trucada al m\u00e8tode, ...).</p> <p>Hi ha dues formes de restringir l'acc\u00e9s a algun recurs:</p> <ul> <li>access_control a security.yaml vos permet protegir els patrons d\u2019URL (per exemple, /admin/*). M\u00e9s senzill, per\u00f2 menys flexible.</li> <li>Al controlador (o un altre codi).</li> </ul>"},{"location":"UD12.%20Tutorial/04-seguretat/#securityaccess_control","title":"security.access_control","text":"<p>En l'exemple seg\u00fcent per poder accedir a una ruta que comence per <code>/admin</code> caldr\u00e0 que l'usuari tinga el rol ROLE_ADMIN.</p> <pre><code># config/packages/security.yaml\nsecurity:\n# ...\nfirewalls:\n# ...\nmain:\n# ...\naccess_control:\n# require ROLE_ADMIN for /admin*\n- { path: '^/admin', roles: ROLE_ADMIN }\n# the 'path' value can be any valid regular expression\n# (this one will match URLs like /api/post/7298 and /api/comment/528491)\n- { path: ^/api/(post|comment)/\\d+$, roles: ROLE_USER }\n</code></pre>"},{"location":"UD12.%20Tutorial/04-seguretat/#control-dacces-per-controlador-o-metodes","title":"Control d'acc\u00e9s per controlador o m\u00e8todes","text":"<p>You can deny access from inside a controller:</p> <pre><code>// src/Controller/AdminController.php\n// ...\npublic function adminDashboard()\n{\n$this-&gt;denyAccessUnlessGranted('ROLE_ADMIN');\n// or add an optional message - seen by developers\n$this-&gt;denyAccessUnlessGranted('ROLE_ADMIN', null, 'User tried to access a page without having ROLE_ADMIN');\n}\n</code></pre> <p>That's it! If access is not granted, a special AccessDeniedException is thrown and no more code in your controller is executed. Then, one of two things will happen:</p> <ol> <li>If the user isn't logged in yet, they will be asked to log in (e.g. redirected to the login page).</li> <li>If the user is logged in, but does not have the <code>ROLE_ADMIN</code> role, they'll be shown the 403 access denied page (which you can customize).</li> </ol> <p>Thanks to the SensioFrameworkExtraBundle, you can also secure your controller using annotations:</p> <pre><code>// src/Controller/AdminController.php\n// ...\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted;\n/**\n  * Require ROLE_ADMIN for *every* controller method in this class.\n  *\n  * @IsGranted(\"ROLE_ADMIN\")\n  */\nclass AdminController extends AbstractController\n{\n/**\n      * Require ROLE_ADMIN for only this controller method.\n      *\n      * @IsGranted(\"ROLE_ADMIN\")\n      */\npublic function adminDashboard()\n{\n// ...\n}\n}\n</code></pre>"},{"location":"UD12.%20Tutorial/04-seguretat/#access-control-in-templates","title":"Access Control in Templates","text":"<p>If you want to check if the current user has a certain role, you can use the built-in <code>is_granted()</code> helper function in any Twig template:</p> <p>{% raw %} <pre><code>{% if is_granted('ROLE_ADMIN') %}\n    &lt;a href=\"...\"&gt;Delete&lt;/a&gt;\n{% endif %}\n</code></pre></p> <p>{:.alert .alert-activity}</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#restriccions-dacces","title":"Restriccions d'acc\u00e9s","text":"<p>Configura l'aplicaci\u00f3 de forma que per poder crear, llegir, actualitzar i eliminar usuaris calga que l'usuari autenticat tinga el rol <code>ROLE_ADMIN</code>.</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#pas-7-tancar-sessio","title":"Pas 7. Tancar sessi\u00f3","text":"<p>Seguirem les seg\u00fcents indicacions per a implementar el tancament de la sessi\u00f3 (logout)</p>"},{"location":"UD12.%20Tutorial/04-seguretat/#recursos","title":"Recursos","text":"<ul> <li>Security Guide</li> <li>Security Component</li> <li>Security Best Practices</li> </ul>"},{"location":"UD12.%20Tutorial/06-filtratge/","title":"La classe Request. Filtratge","text":"<p>{: .no_toc }</p>"},{"location":"UD12.%20Tutorial/06-filtratge/#taula-de-continguts","title":"Taula de continguts","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol> <p>La majoria de frameworks MVC disposen d'una classe Request per a gestionar les dades de les sol\u00b7licituds HTTP. Symfony no \u00e9s l'excepci\u00f3 i inclou tot un seguit de classes per a gestionar-les.</p> <p>Les trobarem en el component HttpFoundation.</p> <p>L'object <code>Request</code> mant\u00e9 la informaci\u00f3 de la sol\u00b7licitud del client. Aquest informaci\u00f3 \u00e9s accessible mitjan\u00e7ant diverses propietats p\u00fabliques:</p> <ul> <li><code>request</code>: equivalent of $_POST;</li> <li><code>query</code>: equivalent of $_GET ($request-&gt;query-&gt;get('name'));</li> <li><code>cookies</code>: equivalent of $_COOKIE;</li> <li><code>attributes</code>: no equivalent - used by your app to store other data (see below);</li> <li><code>files</code>: equivalent of $_FILES;</li> <li><code>server</code>: equivalent of $_SERVER;</li> <li><code>headers</code>: mostly equivalent to a subset of $_SERVER ($request-&gt;headers-&gt;get('User-Agent')).</li> </ul> <p>Cada propietat \u00e9s una inst\u00e0ncia de ParameterBag (o una subclasse), el que \u00e9s una classe mantenidora de dades:</p> <ul> <li><code>request</code>: ParameterBag;</li> <li><code>query</code>: ParameterBag;</li> <li><code>cookies</code>: ParameterBag;</li> <li><code>attributes</code>: ParameterBag;</li> <li><code>files</code>: FileBag;</li> <li><code>server</code>: ServerBag;</li> <li><code>headers</code>: HeaderBag.</li> </ul> <p>Totes les inst\u00e0ncies de ParameterBag tenen m\u00e8todes per a recuperar i actualitzar les seues dades:</p> <ul> <li><code>all()</code>    Returns the parameters.</li> <li><code>keys()</code>    Returns the parameter keys.</li> <li><code>replace()</code>    Replaces the current parameters by a new set.</li> <li><code>add()</code>    Adds parameters.</li> <li><code>get()</code>    Returns a parameter by name.</li> <li><code>set()</code>    Sets a parameter by name.</li> <li><code>has()</code>    Returns true if the parameter is defined.</li> <li><code>remove()</code>    Removes a parameter.</li> </ul> <p>La inst\u00e0ncia de <code>ParameterBag</code> tamb\u00e9 cont\u00e9 alguns m\u00e8todes per a filtrar els valors d'entrada:</p> <ul> <li><code>getAlpha()</code>     Returns the alphabetic characters of the parameter value;</li> <li><code>getAlnum()</code>     Returns the alphabetic characters and digits of the parameter value;</li> <li><code>getBoolean()</code>     Returns the parameter value converted to boolean;</li> <li><code>getDigits()</code>     Returns the digits of the parameter value;</li> <li><code>getInt()</code>     Returns the parameter value converted to integer;</li> <li><code>filter()</code>     Filters the parameter by using the PHP filter_var function.</li> </ul> <p>{:.alert .alert-activity}</p> <p>El seguent pas ser\u00e0 implementar el fitre en la funci\u00f3 <code>findLatest</code> al repositori.</p> <p>{:.alert .alert-activity}</p> <p>Ara provarem la nova funcionalitat.</p> <p>{:.alert .alert-activity}</p> <p>I per a acabar implementarem el formulari.</p> <p>{:.alert .alert-activity}</p>"},{"location":"UD12.%20Tutorial/06-filtratge/#1-preparant-el-filtre","title":"1. Preparant el filtre","text":"<p>La aplicaci\u00f3 diposar\u00e0 d'un filtre que permetr\u00e0 el filtrage dels enlla\u00e7os per un text de b\u00fasqueda (<code>text</code>), que s'hagen actualitzat entre dues dates (<code>start-date</code> i <code>end-date</code>) i per una de les etiquetes existents (<code>tag</code>).</p> <p>Emprant la classe <code>Request</code> implementa en la ruta <code>homepage</code> el codi necessari per a comprovar si s'han enviat les dades del formulari de filtratge mitjan\u00e7ant el querystring. Si no s'han enviat, estan buits o tenen un valor incorrecte la variable prendr\u00e0 el valor <code>null</code>.</p> <p>Les variables seran <code>$text</code>, <code>$startDate</code>, <code>$endDate</code> i <code>$tag</code>.</p>"},{"location":"UD12.%20Tutorial/06-filtratge/#2-implementant-el-filtre","title":"2. Implementant el filtre","text":"<p>Per poder extraure les dades filtrades de la base de de dades implementarem el m\u00e8tode <code>filter</code> en el repositori. Tindr\u00e0 la seguent declaraci\u00f3: <pre><code>   public function findLatest(int $page = 1, string $text = null, DateTime $startDate = null, \nDateTime $endDate = null): Paginator\n</code></pre> Haur\u00e0s d'implementar el codi necessari perqu\u00e8 segons els par\u00e0metres de filtrat es genere una consulta SQL o un altra.</p>"},{"location":"UD12.%20Tutorial/06-filtratge/#3-provant-el-filtre","title":"3. Provant el filtre","text":"<p>Encara no tenim el formulari de filtratge per\u00f2 podem provar el funcionament assignant valors v\u00e0lids directament a les variables o generar solicituds mitjan\u00e7ant el querystring.</p>"},{"location":"UD12.%20Tutorial/06-filtratge/#4-implementant-el-formulari","title":"4. Implementant el formulari","text":"<p>Tenim dues formes d'implementar-lo. La primera \u00e9s crear el formulari amb html. La segona, i mes interessant, usant el FormBuilder de Symfony. Tu tries.</p>"},{"location":"UD12.%20Tutorial/08-translation/","title":"Translation","text":"<p>{: .no_toc }</p>"},{"location":"UD12.%20Tutorial/08-translation/#table-of-contents","title":"Table of contents","text":"<p>{: .no_toc .text-delta  .nocount }</p> <ol> <li>TOC</li> </ol>"},{"location":"UD12.%20Tutorial/08-translation/#installation","title":"Installation","text":"<p>First, run this command to install the translator before using it:</p> <pre><code>composer require symfony/translation\n</code></pre>"},{"location":"UD12.%20Tutorial/08-translation/#configuration","title":"Configuration","text":"<p>The previous command creates an initial config file where you can define the default locale of the application and the directory where the translation files are located:</p> <pre><code># config/packages/translation.yaml\nframework:\ndefault_locale: 'en'\ntranslator:\ndefault_path: '%kernel.project_dir%/translations'\n</code></pre> <p>The locale used in translations is the one stored on the request. This is typically set via a <code>_locale</code> attribute on your routes (see The Locale and the URL).</p>"},{"location":"UD12.%20Tutorial/08-translation/#how-translation-works","title":"How translation works","text":"<p>Translation of text is done through the translator service (Translator). To translate a block of text (called a message), use the <code>trans()</code> method. Suppose, for example, that you're translating a simple message from inside a controller:</p> <p><pre><code>// ...\nuse Symfony\\Contracts\\Translation\\TranslatorInterface;\npublic function index(TranslatorInterface $translator)\n{\n$translated = $translator-&gt;trans('Symfony is great');\n// ...\n}\n</code></pre> When this code is executed, Symfony will attempt to translate the message \"Symfony is great\" based on the locale of the user. For this to work, you need to tell Symfony how to translate the message via a \"translation resource\", which is usually a file that contains a collection of translations for a given locale. This \"dictionary\" of translations can be created in several different formats:</p> <pre><code># translations/messages.fr.yaml\nSymfony is great: J'aime Symfony\n</code></pre> <p>Now, if the language of the user's locale is French (e.g. fr_FR or fr_BE), the message will be translated into J'aime Symfony. You can also translate the message inside your templates.</p> <p>To translate text in Twig templates Symfony implements several ways: tag and filter.</p> <p>{% raw %} <pre><code>{% trans %}Symfony is great!{% endtrans %}\n</code></pre></p> <p>{% raw %} <pre><code>{{ 'menu.login' | trans }}\n</code></pre></p>"},{"location":"UD12.%20Tutorial/08-translation/#the-translation-process","title":"The Translation Process","text":"<p>To actually translate the message, Symfony uses the following process when using the trans() method:</p> <ol> <li>The locale of the current user, which is stored on the request is determined.</li> <li>If the message is located in the catalog, the translation is returned. If not, the translator returns the original message.</li> </ol>"},{"location":"UD12.%20Tutorial/08-translation/#message-format","title":"Message Format","text":"<p>Sometimes, a message containing a variable needs to be translated: <pre><code>// ...\n$translated = $translator-&gt;trans('Logged as '.$username);\n</code></pre></p> <p>However, creating a translation for this string is impossible since the translator will try to look up the message including the variable portions (e.g. \"Logged as admin\" or \"Logged as mperez\").</p> <p>Or there are translations that may or may not be plural, based on some variable:</p> <p><pre><code>There is one search result.\nThere are 5 search results.\n</code></pre> To manage these situations Symfony follows the ICU MessageFormat syntax by using PHP's <code>MessageFormatter</code> class. Read more about this in How to Translate Messages using the ICU MessageFormat.</p> <p>Below, some examples:</p> <pre><code># messsages+int-icu.ca.yaml\nlogged as {username}: 'connectat com  {username}'\n</code></pre> <p>{% raw %} <pre><code># _header.html.twig\n{{ 'logged as {username}' | trans({'{username}': app.user.username}) }}\n</code></pre></p>"},{"location":"UD12.%20Tutorial/08-translation/#pluralization","title":"Pluralization","text":"<pre><code># messages+intl-icu.en.yaml\nsearch.results: \"{count, plural,\n=0    {There are no apples}\none   {There is one apple...}\nother {There are # apples!}\n}\"\n</code></pre> <p>{% raw %} <pre><code># Twig sample file\n{{ 'search.results'|trans({'count': 2}) }}\n{{ 'search.results'|trans({'count': 1}) }}\n{{ 'search.results'|trans({'count': 0}) }}\n</code></pre></p> <p>The previous code snippet will show:</p> <pre><code>There are 2 apples! \nThere is one apples...\nThere are no apples \n</code></pre> <p>{:.alert .alert-info}</p> <p>More information: Translation in templates</p>"},{"location":"UD12.%20Tutorial/08-translation/#icu-format-php-library","title":"ICU Format php library","text":"<p>{: .nocount}</p> <p>To use the ICU format library you need to install the <code>php-intl</code> library, the <code>symfony/intl</code> bundle and the <code>symfony/polyfill-intl-messageformatter</code> component.</p>"},{"location":"UD12.%20Tutorial/08-translation/#extracting-translation-contents-and-updating-catalogs-automatically","title":"Extracting Translation Contents and Updating Catalogs Automatically","text":"<p>The most time-consuming tasks when translating an application is to extract all the template contents to be translated and to keep all the translation files in sync. Symfony includes a command called <code>translation:update</code> that helps you with these tasks:</p> <p>To show a list of messages:</p> <pre><code>php bin/console translation:update --dump-messages --output-format=yaml en\n</code></pre> <p>To generate message files:</p> <pre><code>php bin/console translation:update --force --output-format=yaml en\n</code></pre> <p>To show help: <pre><code>php bin/console translation:update --help\n</code></pre></p>"},{"location":"UD12.%20Tutorial/08-translation/#translation-resourcefile-names-and-locations","title":"Translation Resource/File Names and Locations","text":"<p>Symfony looks for message files (i.e. translations) in the following default locations:</p> <ul> <li>the translations/ directory (at the root of the project);</li> <li>the Resources/translations/ directory inside of any bundle.</li> </ul> <p>The locations are listed here with the highest priority first. That is, you can override the translation messages of a bundle in the first directory.</p> <p>The filename of the translation files is also important: each message file must be named according to the following path: <code>domain.locale.loader</code>:</p> <ul> <li>domain: An optional way to organize messages into groups.</li> <li>locale: The locale that the translations are for (e.g. en_GB, en, etc);</li> <li>loader: How Symfony should load and parse the file (e.g. xlf, php, yaml, etc).</li> </ul> <p>The loader can be the name of any registered loader. By default, Symfony provides many loaders.</p> <p>The choice of which loader to use is entirely up to you and is a matter of taste. The recommended option is to use YAML for simple projects and use XLIFF if you're generating translations with specialized programs or teams.</p>"},{"location":"UD12.%20Tutorial/08-translation/#translating-link-manager-menu","title":"Translating Link manager menu","text":""},{"location":"UD12.%20Tutorial/08-translation/#applying-filters-in-twig-template","title":"Applying filters in Twig template","text":"<p>{% raw %} <pre><code>&lt;li class=\"nav-item\"&gt;\n&lt;a class=\"nav-link\" href=\"{{ url('link_index') }}\"&gt;{{ 'menu.links' | trans }}&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=\"nav-item\"&gt;\n&lt;a class=\"nav-link\" href=\"{{ url('user_index') }}\"&gt;{{ 'menu.users' | trans }}&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=\"nav-item\"&gt;\n    {% if is_granted('IS_AUTHENTICATED_FULLY') %}\n    &lt;a class=\"nav-link\" href=\"{{ url('logout') }}\"&gt;&lt;i class=\"fa fa-sign-out-alt\"&gt; &lt;/i&gt;{{ 'menu.logout' | trans }}&lt;/a&gt;\n    {% else %}\n    &lt;a class=\"nav-link\" href=\"{{ url('login') }}\"&gt;&lt;i class=\"fa fa-sign-in-alt\"&gt;&lt;/i&gt; {{ 'menu.login' | trans }}&lt;/a&gt;\n    {% endif %}\n&lt;/li&gt;\n</code></pre></p>"},{"location":"UD12.%20Tutorial/08-translation/#extracting-messages","title":"Extracting messages","text":"<p>Excuting this command Symfony generates the message files.</p> <pre><code>php bin/console translation:update --force --output-format=yaml en\n</code></pre> <p>The output will be generated in <code>translations/messages.en.yaml</code>:</p> <pre><code>menu.links: __menu.links\nmenu.users: __menu.users\nmenu.logout: __menu.logout\nmenu.login: __menu.login\n</code></pre> <p>Now, you can translate the strings.</p>"},{"location":"UD12.%20Tutorial/08-translation/#using-real-or-keyword-messages","title":"Using Real or Keyword Messages","text":"<p>As we learned when talked about localization there are two different philosophies when creating messages to be translated:</p> <pre><code>$translator-&gt;trans('Symfony is great');\n$translator-&gt;trans('symfony.great');\n</code></pre> <p>In the first method, messages are written in the language of the default locale (English in this case). That message is then used as the \"id\" when creating translations.</p> <p>In the second method, messages are actually \"keywords\" that convey the idea of the message. The keyword message is then used as the \"id\" for any translations. In this case, translations must be made for the default locale (i.e. to translate symfony.great to Symfony is great).</p> <p>The second method is handy because the message key won't need to be changed in every translation file if you decide that the message should actually read \"Symfony is really great\" in the default locale.</p> <p>The choice of which method to use is entirely up to you, but the \"keyword\" format is often recommended for multi-language applications, whereas for shared bundles that contain translation resources we recommend the real message, so your application can choose to disable the translator layer and you will see a readable message.</p>"},{"location":"UD12.%20Tutorial/08-translation/#forms-and-translation","title":"Forms and translation","text":"<p>If you're using the Twig integration with one of the default form theme files (e.g. <code>form_div_layout.html.twig</code>), there is a Twig filter (trans) that is used for translating form labels, errors, option text and other strings.</p> <p>The problem is that the extractor command cannot read these messages so you have to write them manually in or use customize form rendering, applying the <code>trans</code> filter to form labels.</p> <p>More information on Form customization.</p>"},{"location":"UD12.%20Tutorial/08-translation/#handling-the-users-locale","title":"Handling the User's Locale","text":""},{"location":"UD12.%20Tutorial/08-translation/#todo","title":"TODO","text":""}]}